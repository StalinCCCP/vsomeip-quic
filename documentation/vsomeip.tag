<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>message_base_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/message/include/</path>
    <filename>compat_2message_2include_2message__base__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="no" imported="no">compat/vsomeip/export.hpp</includes>
    <includes id="compat_2vsomeip_2message_8hpp" name="message.hpp" local="no" imported="no">compat/vsomeip/message.hpp</includes>
    <class kind="class">vsomeip::message_base_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_base_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/include/</path>
    <filename>message_2include_2message__base__impl_8hpp.html</filename>
    <includes id="message__header__impl_8hpp" name="message_header_impl.hpp" local="yes" imported="no">message_header_impl.hpp</includes>
    <class kind="class">vsomeip_v3::message_base_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/message/include/</path>
    <filename>compat_2message_2include_2message__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2message_8hpp" name="message.hpp" local="no" imported="no">compat/vsomeip/message.hpp</includes>
    <includes id="compat_2message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">message_base_impl.hpp</includes>
    <class kind="class">vsomeip::message_impl</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/include/</path>
    <filename>message_2include_2message__impl_8hpp.html</filename>
    <includes id="message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">message_base_impl.hpp</includes>
    <class kind="class">vsomeip_v3::message_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>service__discovery_2include_2message__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../include/primitive_types.hpp</includes>
    <includes id="message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">../../message/include/message_base_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <class kind="class">vsomeip_v3::sd::message_impl</class>
    <class kind="struct">vsomeip_v3::sd::message_impl::forced_initial_events_t</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>payload_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/message/include/</path>
    <filename>compat_2message_2include_2payload__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2payload_8hpp" name="payload.hpp" local="no" imported="no">compat/vsomeip/payload.hpp</includes>
    <class kind="class">vsomeip::payload_impl</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>payload_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/include/</path>
    <filename>message_2include_2payload__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::payload_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_base_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/message/src/</path>
    <filename>compat_2message_2src_2message__base__impl_8cpp.html</filename>
    <includes id="compat_2message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">../include/message_base_impl.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../../message/include/message_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_base_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/src/</path>
    <filename>message_2src_2message__base__impl_8cpp.html</filename>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/message/src/</path>
    <filename>compat_2message_2src_2message__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="compat_2message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../include/payload_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../../configuration/include/internal.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../../message/include/message_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/src/</path>
    <filename>message_2src_2message__impl_8cpp.html</filename>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>service__discovery_2src_2message__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="eventgroupentry__impl_8hpp" name="eventgroupentry_impl.hpp" local="yes" imported="no">../include/eventgroupentry_impl.hpp</includes>
    <includes id="serviceentry__impl_8hpp" name="serviceentry_impl.hpp" local="yes" imported="no">../include/serviceentry_impl.hpp</includes>
    <includes id="configuration__option__impl_8hpp" name="configuration_option_impl.hpp" local="yes" imported="no">../include/configuration_option_impl.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="load__balancing__option__impl_8hpp" name="load_balancing_option_impl.hpp" local="yes" imported="no">../include/load_balancing_option_impl.hpp</includes>
    <includes id="protection__option__impl_8hpp" name="protection_option_impl.hpp" local="yes" imported="no">../include/protection_option_impl.hpp</includes>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="unknown__option__impl_8hpp" name="unknown_option_impl.hpp" local="yes" imported="no">../include/unknown_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REBOOT_FLAG</name>
      <anchorfile>service__discovery_2src_2message__impl_8cpp.html</anchorfile>
      <anchor>a72794b2aa8c6aa8c604f2aa1432630b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNICAST_FLAG</name>
      <anchorfile>service__discovery_2src_2message__impl_8cpp.html</anchorfile>
      <anchor>a0f3ac9e4266e81d0f67aff8f4bd70301</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>payload_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/message/src/</path>
    <filename>compat_2message_2src_2payload__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../include/payload_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>payload_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/src/</path>
    <filename>message_2src_2payload__impl_8cpp.html</filename>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../include/payload_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>application_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/runtime/include/</path>
    <filename>compat_2runtime_2include_2application__impl_8hpp.html</filename>
    <includes id="compat_2vsomeip_2application_8hpp" name="application.hpp" local="no" imported="no">compat/vsomeip/application.hpp</includes>
    <class kind="class">vsomeip::application_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>application_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/runtime/include/</path>
    <filename>runtime_2include_2application__impl_8hpp.html</filename>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">../../routing/include/routing_manager_host.hpp</includes>
    <class kind="class">vsomeip_v3::application_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/runtime/include/</path>
    <filename>compat_2runtime_2include_2runtime__impl_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="no" imported="no">compat/vsomeip/runtime.hpp</includes>
    <class kind="class">vsomeip::runtime_impl</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/runtime/include/</path>
    <filename>runtime_2include_2runtime__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::runtime_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>service__discovery_2include_2runtime__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">runtime.hpp</includes>
    <class kind="class">vsomeip_v3::sd::runtime_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>application_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/runtime/src/</path>
    <filename>compat_2runtime_2src_2application__impl_8cpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="no" imported="no">compat/vsomeip/runtime.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="compat_2runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../../configuration/include/internal.hpp</includes>
    <includes id="compat_2message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ERROR_HANDLER_DUMMY_EVENT</name>
      <anchorfile>compat_2runtime_2src_2application__impl_8cpp.html</anchorfile>
      <anchor>a2e0eda84f52769445aa84f6dc214c0d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>application_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/runtime/src/</path>
    <filename>runtime_2src_2application__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="configuration__plugin_8hpp" name="configuration_plugin.hpp" local="yes" imported="no">../../configuration/include/configuration_plugin.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../../plugin/include/plugin_manager_impl.hpp</includes>
    <includes id="routing__manager__impl_8hpp" name="routing_manager_impl.hpp" local="yes" imported="no">../../routing/include/routing_manager_impl.hpp</includes>
    <includes id="routing__manager__client_8hpp" name="routing_manager_client.hpp" local="yes" imported="no">../../routing/include/routing_manager_client.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="connector__impl_8hpp" name="connector_impl.hpp" local="yes" imported="no">../../tracing/include/connector_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/runtime/src/</path>
    <filename>compat_2runtime_2src_2runtime_8cpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="no" imported="no">compat/vsomeip/runtime.hpp</includes>
    <includes id="compat_2runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/runtime/src/</path>
    <filename>runtime_2src_2runtime_8cpp.html</filename>
    <includes id="runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/compat/runtime/src/</path>
    <filename>compat_2runtime_2src_2runtime__impl_8cpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2defines_8hpp" name="defines.hpp" local="no" imported="no">compat/vsomeip/defines.hpp</includes>
    <includes id="compat_2runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="compat_2runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="compat_2message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="compat_2message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/runtime/src/</path>
    <filename>runtime_2src_2runtime__impl_8cpp.html</filename>
    <includes id="runtime_2include_2application__impl_8hpp" name="application_impl.hpp" local="yes" imported="no">../include/application_impl.hpp</includes>
    <includes id="runtime_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>runtime_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>service__discovery_2src_2runtime__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="service__discovery_2include_2runtime__impl_8hpp" name="runtime_impl.hpp" local="yes" imported="no">../include/runtime_impl.hpp</includes>
    <includes id="service__discovery__impl_8hpp" name="service_discovery_impl.hpp" local="yes" imported="no">../include/service_discovery_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>application_configuration.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>application__configuration_8hpp.html</filename>
    <includes id="debounce__filter__impl_8hpp" name="debounce_filter_impl.hpp" local="yes" imported="no">debounce_filter_impl.hpp</includes>
    <class kind="struct">vsomeip_v3::cfg::application_configuration</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>client.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration_2include_2client_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::client</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>client.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/h3/</path>
    <filename>endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2client_8hpp.html</filename>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/quic/client.hpp</includes>
    <class kind="class">nexus::h3::client</class>
    <class kind="class">nexus::h3::client_connection</class>
    <namespace>nexus</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>client.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2client_8hpp.html</filename>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <includes id="ssl_8hpp" name="ssl.hpp" local="no" imported="no">nexus/ssl.hpp</includes>
    <includes id="engine__impl_8hpp" name="engine_impl.hpp" local="no" imported="no">nexus/quic/detail/engine_impl.hpp</includes>
    <includes id="socket__impl_8hpp" name="socket_impl.hpp" local="no" imported="no">nexus/quic/detail/socket_impl.hpp</includes>
    <class kind="class">nexus::quic::client</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
  </compound>
  <compound kind="file">
    <name>configuration.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="implementation_2configuration_2include_2trace_8hpp" name="trace.hpp" local="yes" imported="no">trace.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2e_protection/include/e2exf/config.hpp</includes>
    <includes id="e2e_8hpp" name="e2e.hpp" local="yes" imported="no">e2e.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">internal.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <class kind="class">vsomeip_v3::configuration</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CONFIG_PLUGIN_VERSION</name>
      <anchorfile>configuration_8hpp.html</anchorfile>
      <anchor>ae841c07fd7a9206b693f7828a5beed11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_element.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration__element_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::configuration_element</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration__impl_8hpp.html</filename>
    <includes id="application__configuration_8hpp" name="application_configuration.hpp" local="yes" imported="no">application_configuration.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">configuration.hpp</includes>
    <includes id="configuration__element_8hpp" name="configuration_element.hpp" local="yes" imported="no">configuration_element.hpp</includes>
    <includes id="e2e_8hpp" name="e2e.hpp" local="yes" imported="no">e2e.hpp</includes>
    <includes id="routing_8hpp" name="routing.hpp" local="yes" imported="no">routing.hpp</includes>
    <includes id="watchdog_8hpp" name="watchdog.hpp" local="yes" imported="no">watchdog.hpp</includes>
    <includes id="service__instance__range_8hpp" name="service_instance_range.hpp" local="yes" imported="no">service_instance_range.hpp</includes>
    <includes id="implementation_2configuration_2include_2trace_8hpp" name="trace.hpp" local="yes" imported="no">trace.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2e_protection/include/e2exf/config.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <class kind="struct">vsomeip_v3::cfg::suppress_t</class>
    <class kind="class">vsomeip_v3::cfg::configuration_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration__plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::configuration_plugin</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CONFIG_PLUGIN_VERSION</name>
      <anchorfile>configuration__plugin_8hpp.html</anchorfile>
      <anchor>ae841c07fd7a9206b693f7828a5beed11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_plugin_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration__plugin__impl_8hpp.html</filename>
    <includes id="configuration__plugin_8hpp" name="configuration_plugin.hpp" local="yes" imported="no">configuration_plugin.hpp</includes>
    <class kind="class">vsomeip_v3::configuration_plugin_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>debounce_filter_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>debounce__filter__impl_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <class kind="struct">vsomeip_v3::debounce_filter_impl_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; event_t, std::shared_ptr&lt; debounce_filter_impl_t &gt; &gt;&gt; &gt;</type>
      <name>debounce_configuration_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0b8aac3a90ec44e1e5fd7d285952de33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>e2e.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>e2e_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::e2e</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>event.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration_2include_2event_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::event</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>event.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing_2include_2event_8hpp.html</filename>
    <class kind="class">vsomeip_v3::event</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroup.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>eventgroup_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::eventgroup</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>internal.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>internal_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_APPLICATION_NAME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aba4b9cf5d22e6a7f9482ba47df371a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a21661565eadd4fe6bfe8d19ab0f0eaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION_MODULE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afb4d6f105561294e8cfe83bb8f512cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_E2E_PROTECTION_MODULE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5578cb174bdc362fac23c5e3a120a596</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8e2fa1c047c6dcb9f5aaba6b043687a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_LOAD_PLUGINS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>acf0b569c001353080a1b8cc264f2b4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CLIENTSIDELOGGING</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a94b0851921a19178c1b738027ab41173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FILE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ae2a5fc3c019ea1be8d1734e3dc63d8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FILE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>acb07d42fab8dae18e60fefbd13ab0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5670bf21ead33725410339ebc472174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FOLDER</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a753e89c53f220d028832257e642d7754</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEBUG_CONFIGURATION_FOLDER</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a00556f427b1b50197b55a8ec6a759757</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FOLDER</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aca8144da17a331c3ae4012dbed0299fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BASE_PATH</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad52a834a38467355e1c0e4d1d507d93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_HOST_PORT_DEFAULT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a974304dfbaa3c810cc2665a81668d7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CFG_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af5be3e7eb542708053aca4c73bbee58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa8e3a3d2cdfb1107ee924f468f1b2d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>adf341103e058db79918753aed25572dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEC_LIBRARY</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a92af0d52107c56557112e00c4b5124be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_CLIENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ac9ab6d8b260c66080dc14f4fdcb0260f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_UNSET</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5cc9aa9f0d4d27d41249dc592f136e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNICAST_ADDRESS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad24d4e62b582dfece9458a7463716d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NETMASK</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ad7cf2936837b4573981a7267592e2973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PREFIX</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a2565504335dcbbbb4a03e3d6cd53eb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONNECT_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a6bc55565e624b3e938952bc8e2d6f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_CONNECT_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8cbbdf710cd21ed8ec7d82f7e0503b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONNECTING_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a99ed53328a149f11921a00bd597635c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_FLUSH_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a77fe1dd712dba09e86fb2d902dc8e886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_ROOT_RECONNECT_RETRIES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a370b7f341007be2ae6d8ece41d3b18d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_ROOT_RECONNECT_INTERVAL</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>abe1719c06c2c84af1ba218ff03408ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHUTDOWN_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af4e36de5588e0df56eff92051f7a41f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_QUEUE_WARN_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aefc0710a232f3158dcc6a5097b6baab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_CONNECT_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ab5ded6f5511ac71ebb492abce977b961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_RESTART_ABORTS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a68d9c9fd34c024501bea3fda96254771</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_SENT_WAIT_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a95f8ecb6d575aad40c65390b8fe06a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_NETLINK_RETRIES</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a157d386121973e0c5e9516f51e8e9bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_MAX_SEGMENT_LENGTH_DEFAULT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a22b1ff07cf1e82dfdc3ee7cd3f37f7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_BUFFER_SHRINK_THRESHOLD</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a135b1bfcd6428a1f7f575019debba308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_WATCHDOG_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0de628492afe4cae982bf92822157042</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_MAX_MISSING_PONGS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a25d9569a349819d06080539af68d7373</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDP_RCV_BUFFER_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a937e7dfa5fe860331703b410efb5c13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_COUNT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa98b30631c5c400f981e280cd4b149e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_NICE_LEVEL</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a84875cb9cfe5aef0c1a84d03af85e862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCHERS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a845256bffbd30c971c60b86f01fee504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCH_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a46667413edc4d8a2321a96dac18f38ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_DEBOUNCE_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0544924a59cf6f742367121851c35f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MAX_MSG</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a4f84986b02357810c86b572020085a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MIN_FREQ</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>afe85b828e78f28f8b54008849a5d26e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_INTERVAL</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aa4508ebb6e738e56bcc71ea87405ec5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_MAX_REMOTE_SUBSCRIBERS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a5fe731765669b6bc9eb541decb0a494f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_WAIT_SENT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a96b07acca046e873d3f0d527e4e38a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CLIENT_ENDPOINT_RECV_BUFFER_SIZE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>adbc94e047b16a664c5d84fb02c290350</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MINIMUM_CHECK_TTL_TIMEOUT</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a0bd334a31c867c075398ccc39ed6a26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SETSOCKOPT_TIMEOUT_US</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a6c2a1a704c93f68c7e2f5d1f435de353</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCAL_TCP_PORT_WAIT_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>af497c8e15ca55723de1442639814e773</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCAL_TCP_PORT_MAX_WAIT_TIME</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ab32b8fc4eced80e79c8a6f5efa5eade8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DATA_ID</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a8589d99676ddb6a66526702675bc2021</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DIAGNOSIS_ADDRESS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>aac84ac0dca918a5184295693d01cb894</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHM_PERMISSION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a4d89d5b3d38e9c57e35c64d20e35857c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDS_PERMISSIONS</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>abea1dd50214a62d2a43097d83a3e59a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_READY_MESSAGE</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ac0a6e139b655482c68fd8aed45c4f2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_VERSION</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>acfa3c0c8d94c84270643f0220c1d73e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_DEBOUNCING_NANO</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>ab609a8a35eea15ed2e27e7362e52f2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_MAXIMUM_RETENTION_NANO</name>
      <anchorfile>internal_8hpp.html</anchorfile>
      <anchor>a97ebcaab3aa52fa4ad9ffca4d41455fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>partition_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a400d0fa8f513d122f7b9ff435ac259dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MESSAGE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abc9231a81ccf4ab9e3babcf1f2230345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>QUEUE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a629f2774576f3b00cf8616e8291ded5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MAX_RECONNECTS_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abf7c760b3533ab1fc7965af2b14721da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_UID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a729a2045f1925bc2bb1b178cec2f738a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_GID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6ceb4f0cdb93357b6bbd96ddf1751f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const partition_id_t</type>
      <name>VSOMEIP_DEFAULT_PARTITION_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8368cb385c736743332218f2b030115d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>internal_android.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>internal__android_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_APPLICATION_NAME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aba4b9cf5d22e6a7f9482ba47df371a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a21661565eadd4fe6bfe8d19ab0f0eaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CONFIGURATION_MODULE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afb4d6f105561294e8cfe83bb8f512cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_E2E_PROTECTION_MODULE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5578cb174bdc362fac23c5e3a120a596</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8e2fa1c047c6dcb9f5aaba6b043687a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_LOAD_PLUGINS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>acf0b569c001353080a1b8cc264f2b4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ENV_CLIENTSIDELOGGING</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a94b0851921a19178c1b738027ab41173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FILE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ae2a5fc3c019ea1be8d1734e3dc63d8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FILE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>acb07d42fab8dae18e60fefbd13ab0fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MANDATORY_CONFIGURATION_FILES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5670bf21ead33725410339ebc472174e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONFIGURATION_FOLDER</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a753e89c53f220d028832257e642d7754</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEBUG_CONFIGURATION_FOLDER</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a00556f427b1b50197b55a8ec6a759757</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CONFIGURATION_FOLDER</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aca8144da17a331c3ae4012dbed0299fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_HOST_PORT_DEFAULT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a974304dfbaa3c810cc2665a81668d7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CFG_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af5be3e7eb542708053aca4c73bbee58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa8e3a3d2cdfb1107ee924f468f1b2d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>adf341103e058db79918753aed25572dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEC_LIBRARY</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a92af0d52107c56557112e00c4b5124be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8822098a2d5015b4b84be308279c39ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_CLIENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ac9ab6d8b260c66080dc14f4fdcb0260f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_INFO_SIZE_INIT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a56dd8acd907bdb272effe221daf535a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_UNSET</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5cc9aa9f0d4d27d41249dc592f136e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_UNICAST_ADDRESS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad24d4e62b582dfece9458a7463716d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_NETMASK</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ad7cf2936837b4573981a7267592e2973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PREFIX</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a2565504335dcbbbb4a03e3d6cd53eb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONNECT_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a6bc55565e624b3e938952bc8e2d6f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_CONNECT_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8cbbdf710cd21ed8ec7d82f7e0503b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_CONNECTING_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a99ed53328a149f11921a00bd597635c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_FLUSH_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a77fe1dd712dba09e86fb2d902dc8e886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_ROOT_RECONNECT_RETRIES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a370b7f341007be2ae6d8ece41d3b18d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_ROOT_RECONNECT_INTERVAL</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>abe1719c06c2c84af1ba218ff03408ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHUTDOWN_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af4e36de5588e0df56eff92051f7a41f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_QUEUE_WARN_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aefc0710a232f3158dcc6a5097b6baab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_CONNECT_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ab5ded6f5511ac71ebb492abce977b961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_RESTART_ABORTS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a68d9c9fd34c024501bea3fda96254771</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_SENT_WAIT_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a95f8ecb6d575aad40c65390b8fe06a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_NETLINK_RETRIES</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a157d386121973e0c5e9516f51e8e9bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_MAX_SEGMENT_LENGTH_DEFAULT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a22b1ff07cf1e82dfdc3ee7cd3f37f7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_BUFFER_SHRINK_THRESHOLD</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a135b1bfcd6428a1f7f575019debba308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_WATCHDOG_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0de628492afe4cae982bf92822157042</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_MAX_MISSING_PONGS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a25d9569a349819d06080539af68d7373</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDP_RCV_BUFFER_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a937e7dfa5fe860331703b410efb5c13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_COUNT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa98b30631c5c400f981e280cd4b149e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IO_THREAD_NICE_LEVEL</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a84875cb9cfe5aef0c1a84d03af85e862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCHERS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a845256bffbd30c971c60b86f01fee504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_DISPATCH_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a46667413edc4d8a2321a96dac18f38ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_REQUEST_DEBOUNCE_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0544924a59cf6f742367121851c35f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MAX_MSG</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a4f84986b02357810c86b572020085a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_MIN_FREQ</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>afe85b828e78f28f8b54008849a5d26e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_STATISTICS_INTERVAL</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aa4508ebb6e738e56bcc71ea87405ec5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_MAX_REMOTE_SUBSCRIBERS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a5fe731765669b6bc9eb541decb0a494f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_WAIT_SENT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a96b07acca046e873d3f0d527e4e38a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOCAL_CLIENT_ENDPOINT_RECV_BUFFER_SIZE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>adbc94e047b16a664c5d84fb02c290350</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MINIMUM_CHECK_TTL_TIMEOUT</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a0bd334a31c867c075398ccc39ed6a26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SETSOCKOPT_TIMEOUT_US</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a6c2a1a704c93f68c7e2f5d1f435de353</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCAL_TCP_PORT_WAIT_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>af497c8e15ca55723de1442639814e773</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOCAL_TCP_PORT_MAX_WAIT_TIME</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ab32b8fc4eced80e79c8a6f5efa5eade8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DATA_ID</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a8589d99676ddb6a66526702675bc2021</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DIAGNOSIS_ADDRESS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>aac84ac0dca918a5184295693d01cb894</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_SHM_PERMISSION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a4d89d5b3d38e9c57e35c64d20e35857c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_UDS_PERMISSIONS</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>abea1dd50214a62d2a43097d83a3e59a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ROUTING_READY_MESSAGE</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ac0a6e139b655482c68fd8aed45c4f2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_VERSION</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>acfa3c0c8d94c84270643f0220c1d73e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_DEBOUNCING_NANO</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>ab609a8a35eea15ed2e27e7362e52f2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEFAULT_NPDU_MAXIMUM_RETENTION_NANO</name>
      <anchorfile>internal__android_8hpp.html</anchorfile>
      <anchor>a97ebcaab3aa52fa4ad9ffca4d41455fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad5b8074994a1722f1ddac5c8c62253ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a53b5efef54a7a5adca2c3d43993f297c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a99c4eaa6d584023c3d1774b9e9e6468a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0aac6528a30c5599bd4a8b5fcf35d7cb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>routing.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>routing_8hpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">internal.hpp</includes>
    <class kind="struct">vsomeip_v3::cfg::routing_host_t</class>
    <class kind="struct">vsomeip_v3::cfg::routing_guests_t</class>
    <class kind="struct">vsomeip_v3::cfg::routing_t</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>service.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>configuration_2include_2service_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::service</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>service.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2detail_2service_8hpp.html</filename>
    <class kind="struct">nexus::quic::detail::service_tag</class>
    <class kind="class">nexus::quic::detail::service</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="typedef">
      <type>boost::intrusive::list_base_hook&lt; boost::intrusive::tag&lt; service_tag &gt; &gt;</type>
      <name>service_list_base_hook</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>ae0df0b244c598bd3db4d659c6ee0ab6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>service_instance_range.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>service__instance__range_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::service_instance_range</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>trace.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>implementation_2configuration_2include_2trace_8hpp.html</filename>
    <includes id="implementation_2tracing_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../tracing/include/enumeration_types.hpp</includes>
    <class kind="struct">vsomeip_v3::cfg::trace_channel</class>
    <class kind="struct">vsomeip_v3::cfg::trace_filter</class>
    <class kind="struct">vsomeip_v3::cfg::trace</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>trace.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2trace_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../compat/vsomeip/constants.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::trace::channel</class>
    <class kind="class">vsomeip::trace::connector</class>
    <namespace>vsomeip</namespace>
    <namespace>vsomeip::trace</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a038e1f315125aadab49a6bffd54e5ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>ac48c2a837611c64ff228062b2866ec27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>af6ffad10d3cb32db0690edbb378674b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a624ef4d24ada8d671a01c8fc1eb63b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>trace.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2trace_8hpp.html</filename>
    <class kind="class">vsomeip_v3::trace::channel</class>
    <class kind="class">vsomeip_v3::trace::connector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>abdc3d3f7d319ce0af305457e0447cda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a3efc612d82eb681b5991adae7afdf8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a85acf523d361436c707c38c0de473cba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>watchdog.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/include/</path>
    <filename>watchdog_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::cfg::watchdog</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/src/</path>
    <filename>configuration__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <includes id="configuration_2include_2client_8hpp" name="client.hpp" local="yes" imported="no">../include/client.hpp</includes>
    <includes id="configuration__impl_8hpp" name="configuration_impl.hpp" local="yes" imported="no">../include/configuration_impl.hpp</includes>
    <includes id="configuration_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="eventgroup_8hpp" name="eventgroup.hpp" local="yes" imported="no">../include/eventgroup.hpp</includes>
    <includes id="configuration_2include_2service_8hpp" name="service.hpp" local="yes" imported="no">../include/service.hpp</includes>
    <includes id="logger__impl_8hpp" name="logger_impl.hpp" local="yes" imported="no">../../logger/include/logger_impl.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../../routing/include/event.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="plugin__manager_8hpp" name="plugin_manager.hpp" local="yes" imported="no">../../plugin/include/plugin_manager.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../../security/include/policy_manager_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
    <member kind="define">
      <type>#define</type>
      <name>WIN32_LEAN_AND_MEAN</name>
      <anchorfile>configuration__impl_8cpp.html</anchorfile>
      <anchor>ac7bef5d85e3dcd73eef56ad39ffc84a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_BIND_GLOBAL_PLACEHOLDERS</name>
      <anchorfile>configuration__impl_8cpp.html</anchorfile>
      <anchor>ae32d133147b9dd7a9b1bfe370a71b72e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_plugin_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/configuration/src/</path>
    <filename>configuration__plugin__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="configuration__plugin__impl_8hpp" name="configuration_plugin_impl.hpp" local="yes" imported="no">../include/configuration_plugin_impl.hpp</includes>
    <includes id="configuration__impl_8hpp" name="configuration_impl.hpp" local="yes" imported="no">../include/configuration_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>buffer.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/buffer/</path>
    <filename>e2e__protection_2include_2buffer_2buffer_8hpp.html</filename>
    <class kind="class">vsomeip_v3::buffer_view</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>e2e_buffer</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa86ee4712520ff7bebfabb8769c2ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6fb00227954a741ce279e5897cb43b8d</anchor>
      <arglist>(std::ostream &amp;_os, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>buffer.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoints_2include_2buffer_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::train</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>endpoints_2include_2buffer_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NANOSECONDS_MAX</name>
      <anchorfile>endpoints_2include_2buffer_8hpp.html</anchorfile>
      <anchor>a6a7f2e84b6860f188a2a13231425c55f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>message_buffer_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a01f33f6dfb9f653b04c4ca53de0761ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; message_buffer_t &gt;</type>
      <name>message_buffer_ptr_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adefbfff9889d6da476433d6a97a721eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crc.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/crc/</path>
    <filename>crc_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e_crc</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>e2e_provider.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/</path>
    <filename>e2e__provider_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../buffer/buffer.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2exf/config.hpp</includes>
    <includes id="e2e_8hpp" name="e2e.hpp" local="yes" imported="no">../../../../configuration/include/e2e.hpp</includes>
    <includes id="profile__interface_8hpp" name="profile_interface.hpp" local="yes" imported="no">profile_interface/profile_interface.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::e2e_provider</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>e2e_provider_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/</path>
    <filename>e2e__provider__impl_8hpp.html</filename>
    <includes id="e2e__provider_8hpp" name="e2e_provider.hpp" local="yes" imported="no">e2e_provider.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">profile_interface/checker.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">profile_interface/protector.hpp</includes>
    <includes id="vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../../../interface/vsomeip/export.hpp</includes>
    <includes id="vsomeip_2plugin_8hpp" name="plugin.hpp" local="yes" imported="no">../../../../../interface/vsomeip/plugin.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::e2e_provider_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile01/</path>
    <filename>profile01_2checker_8hpp.html</filename>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../profile01/profile_01.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile04/</path>
    <filename>profile04_2checker_8hpp.html</filename>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../profile04/profile_04.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile05/</path>
    <filename>profile05_2checker_8hpp.html</filename>
    <includes id="profile__05_8hpp" name="profile_05.hpp" local="yes" imported="no">../profile05/profile_05.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile05::profile_05_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile07/</path>
    <filename>profile07_2checker_8hpp.html</filename>
    <includes id="profile__07_8hpp" name="profile_07.hpp" local="yes" imported="no">../profile07/profile_07.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile07::profile_07_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2checker_8hpp.html</filename>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../profile_custom/profile_custom.hpp</includes>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../profile_interface/checker.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom_checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>checker.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile_interface/</path>
    <filename>profile__interface_2checker_8hpp.html</filename>
    <includes id="profile__interface_8hpp" name="profile_interface.hpp" local="yes" imported="no">../profile_interface/profile_interface.hpp</includes>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_interface::checker</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
  </compound>
  <compound kind="file">
    <name>profile_01.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile01/</path>
    <filename>profile__01_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01</class>
    <class kind="struct">vsomeip_v3::e2e::profile01::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
    <member kind="enumeration">
      <type></type>
      <name>p01_data_id_mode</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile01.html</anchorfile>
      <anchor>a2e8caaeb4eb85dafd31c5ebb188f8e98</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98a8cde6ca1876fd3f658a3bce6783b689a">E2E_P01_DATAID_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ad94905468a028f23a2bcc87631a7a135">E2E_P01_DATAID_ALT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98aa98164a5695ba23e4bcabd55c904c2c2">E2E_P01_DATAID_LOW</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ab2f6fa1897c0932a8c97fd7ba731643c">E2E_P01_DATAID_NIBBLE</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile01/</path>
    <filename>profile01_2protector_8hpp.html</filename>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../profile01/profile_01.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile01::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile04/</path>
    <filename>profile04_2protector_8hpp.html</filename>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../profile04/profile_04.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile04::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile05/</path>
    <filename>profile05_2protector_8hpp.html</filename>
    <includes id="profile__05_8hpp" name="profile_05.hpp" local="yes" imported="no">../profile05/profile_05.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile05::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile07/</path>
    <filename>profile07_2protector_8hpp.html</filename>
    <includes id="profile__07_8hpp" name="profile_07.hpp" local="yes" imported="no">../profile07/profile_07.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile07::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2protector_8hpp.html</filename>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../profile_custom/profile_custom.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../profile_interface/protector.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_custom::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>protector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile_interface/</path>
    <filename>profile__interface_2protector_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <includes id="profile__interface_8hpp" name="profile_interface.hpp" local="yes" imported="no">../profile_interface/profile_interface.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_interface::protector</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
  </compound>
  <compound kind="file">
    <name>profile_04.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile04/</path>
    <filename>profile__04_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04</class>
    <class kind="struct">vsomeip_v3::e2e::profile04::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_PROFILE04_MAX_INSTANCE</name>
      <anchorfile>profile__04_8hpp.html</anchorfile>
      <anchor>a3e7140d3d9234824497eb06bf8fd136b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>profile_05.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile05/</path>
    <filename>profile__05_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile05::profile_05</class>
    <class kind="struct">vsomeip_v3::e2e::profile05::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_E2E_PROFILE05_MAX_INSTANCE</name>
      <anchorfile>profile__05_8hpp.html</anchorfile>
      <anchor>ab5c582aba3f502035525b1895d942146</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>profile_07.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile07/</path>
    <filename>profile__07_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile07::profile_07</class>
    <class kind="struct">vsomeip_v3::e2e::profile07::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_SIZE_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>aeb7cb75f7914d1d8dda288b3a30e3e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_COUNTER_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>ae2f239c20c183a0221c886e8f7c38a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_DATAID_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>ae0361fdc05a894cc5ce886a35cf4e8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_CRC_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>a599c02d0e1bda391d741802cbda3c4b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>profile_custom.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile_custom/</path>
    <filename>profile__custom_8hpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../buffer/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom</class>
    <class kind="struct">vsomeip_v3::e2e::profile_custom::profile_config</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>profile_interface.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2e/profile/profile_interface/</path>
    <filename>profile__interface_8hpp.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile_interface::profile_interface</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>check_status_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>af012b9975eaac10690dfee805716c8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>generic_check_status</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_OK</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba4964058702f44175c383698310bee9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_WRONG_CRC</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba8973583c38ef134372426016679e2213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba6a1733e8d1357e370256f30cdf22e20e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>config.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/include/e2exf/</path>
    <filename>config_8hpp.html</filename>
    <includes id="profile__interface_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../e2e/profile/profile_interface/checker.hpp</includes>
    <includes id="profile__interface_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../e2e/profile/profile_interface/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2exf</namespace>
    <member kind="typedef">
      <type>std::pair&lt; service_t, event_t &gt;</type>
      <name>data_identifier_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>a3aac6ade88468e74745cab623c6818e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>ab627d96992920a28c86e6980ea27e98c</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>buffer.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/buffer/</path>
    <filename>buffer_8cpp.html</filename>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../../e2e_protection/include/buffer/buffer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6fb00227954a741ce279e5897cb43b8d</anchor>
      <arglist>(std::ostream &amp;_os, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>crc.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/crc/</path>
    <filename>crc_8cpp.html</filename>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../include/crc/crc.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>e2e_provider_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/</path>
    <filename>e2e__provider__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="e2e__provider__impl_8hpp" name="e2e_provider_impl.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/e2e_provider_impl.hpp</includes>
    <includes id="profile01_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile01/checker.hpp</includes>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile01/profile_01.hpp</includes>
    <includes id="profile01_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile01/protector.hpp</includes>
    <includes id="profile04_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile04/checker.hpp</includes>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile04/profile_04.hpp</includes>
    <includes id="profile04_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile04/protector.hpp</includes>
    <includes id="profile05_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile05/checker.hpp</includes>
    <includes id="profile__05_8hpp" name="profile_05.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile05/profile_05.hpp</includes>
    <includes id="profile05_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile05/protector.hpp</includes>
    <includes id="profile__custom_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile_custom/checker.hpp</includes>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile_custom/profile_custom.hpp</includes>
    <includes id="profile__custom_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile_custom/protector.hpp</includes>
    <includes id="profile07_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile07/checker.hpp</includes>
    <includes id="profile__07_8hpp" name="profile_07.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile07/profile_07.hpp</includes>
    <includes id="profile07_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../e2e_protection/include/e2e/profile/profile07/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile01/</path>
    <filename>profile01_2checker_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile01_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile01/checker.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile04/</path>
    <filename>profile04_2checker_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile04_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile04/checker.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../../../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile05/</path>
    <filename>profile05_2checker_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile05_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile05/checker.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../../../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile07/</path>
    <filename>profile07_2checker_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile07_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile07/checker.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../../../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
  </compound>
  <compound kind="file">
    <name>checker.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2checker_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile__custom_2checker_8hpp" name="checker.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile_custom/checker.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>profile_01.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile01/</path>
    <filename>profile__01_8cpp.html</filename>
    <includes id="profile__01_8hpp" name="profile_01.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile01/profile_01.hpp</includes>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../include/crc/crc.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile01/</path>
    <filename>profile01_2protector_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile01_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile01/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile04/</path>
    <filename>profile04_2protector_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile04_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile04/protector.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../../../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile05/</path>
    <filename>profile05_2protector_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile05_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile05/protector.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../../../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile07/</path>
    <filename>profile07_2protector_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="profile07_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile07/protector.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../../../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
  </compound>
  <compound kind="file">
    <name>protector.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile_custom/</path>
    <filename>profile__custom_2protector_8cpp.html</filename>
    <includes id="profile__custom_2protector_8hpp" name="protector.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile_custom/protector.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>profile_04.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile04/</path>
    <filename>profile__04_8cpp.html</filename>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../include/crc/crc.hpp</includes>
    <includes id="profile__04_8hpp" name="profile_04.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile04/profile_04.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
  </compound>
  <compound kind="file">
    <name>profile_05.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile05/</path>
    <filename>profile__05_8cpp.html</filename>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../include/crc/crc.hpp</includes>
    <includes id="profile__05_8hpp" name="profile_05.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile05/profile_05.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
  </compound>
  <compound kind="file">
    <name>profile_07.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile07/</path>
    <filename>profile__07_8cpp.html</filename>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../include/crc/crc.hpp</includes>
    <includes id="profile__07_8hpp" name="profile_07.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile07/profile_07.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
  </compound>
  <compound kind="file">
    <name>profile_custom.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2e/profile/profile_custom/</path>
    <filename>profile__custom_8cpp.html</filename>
    <includes id="crc_8hpp" name="crc.hpp" local="yes" imported="no">../../../../include/crc/crc.hpp</includes>
    <includes id="profile__custom_8hpp" name="profile_custom.hpp" local="yes" imported="no">../../../../include/e2e/profile/profile_custom/profile_custom.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
  </compound>
  <compound kind="file">
    <name>config.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/e2e_protection/src/e2exf/</path>
    <filename>config_8cpp.html</filename>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../../e2e_protection/include/e2exf/config.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a686098fa66d1206ef2631ee40c4a4f67</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>client_endpoint.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>client__endpoint_8hpp.html</filename>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">endpoint.hpp</includes>
    <class kind="class">vsomeip_v3::client_endpoint</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>client_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>client__endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="endpoint__impl_8hpp" name="endpoint_impl.hpp" local="yes" imported="no">endpoint_impl.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">client_endpoint.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">tp.hpp</includes>
    <class kind="class">vsomeip_v3::client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>credentials.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>credentials_8hpp.html</filename>
    <class kind="class">vsomeip_v3::credentials</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoint_8hpp.html</filename>
    <class kind="class">vsomeip_v3::endpoint</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_definition.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoint__definition_8hpp.html</filename>
    <class kind="class">vsomeip_v3::endpoint_definition</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_host.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoint__host_8hpp.html</filename>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <class kind="struct">vsomeip_v3::multicast_option_t</class>
    <class kind="class">vsomeip_v3::endpoint_host</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">endpoint.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoint__manager__base_8hpp.html</filename>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">endpoint.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">endpoint_host.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_manager_base</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>endpoint__manager__base_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>endpoint__manager__impl_8hpp.html</filename>
    <includes id="endpoint__manager__base_8hpp" name="endpoint_manager_base.hpp" local="yes" imported="no">../include/endpoint_manager_base.hpp</includes>
    <class kind="class">vsomeip_v3::endpoint_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>local_server_endpoint_impl_receive_op.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>local__server__endpoint__impl__receive__op_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>local_tcp_client_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>local__tcp__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::local_tcp_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>local_tcp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>acb60c77ee46478fe7c119f1f1337c3b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>local_tcp_server_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>local__tcp__server__endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::local_tcp_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>local_tcp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a3928c765bfa9d9ca04c3a06c50b07f37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>local_uds_client_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>local__uds__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::local_uds_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::local::stream_protocol &gt;</type>
      <name>local_uds_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4ff35582b496fa912893e2d001307888</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>local_uds_server_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>local__uds__server__endpoint__impl_8hpp.html</filename>
    <includes id="stream__protocol__ext_8hpp" name="stream_protocol_ext.hpp" local="no" imported="no">boost/asio/local/stream_protocol_ext.hpp</includes>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::local_uds_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::local::stream_protocol_ext &gt;</type>
      <name>local_uds_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aef1e2fa1574c7e444d87e4fb22f7579b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>netlink_connector.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>netlink__connector_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>quic_client_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>quic__client__endpoint__impl_8hpp.html</filename>
    <includes id="global__init_8hpp" name="global_init.hpp" local="no" imported="no">nexus/global_init.hpp</includes>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/quic/client.hpp</includes>
    <includes id="connection_8hpp" name="connection.hpp" local="no" imported="no">nexus/quic/connection.hpp</includes>
    <includes id="quic_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/quic/stream.hpp</includes>
    <includes id="quic__adaptor_8hpp" name="quic_adaptor.hpp" local="yes" imported="no">../quic_adaptor/quic_adaptor.hpp</includes>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">tp_reassembler.hpp</includes>
    <class kind="class">vsomeip_v3::quic_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; quic_adaptor::quic_client_adaptor &gt;</type>
      <name>quic_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a729848719a9324858509be8d11db3e69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>server__endpoint__impl_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <includes id="endpoint__impl_8hpp" name="endpoint_impl.hpp" local="yes" imported="no">endpoint_impl.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">tp.hpp</includes>
    <class kind="class">vsomeip_v3::server_endpoint_impl</class>
    <class kind="struct">vsomeip_v3::server_endpoint_impl::endpoint_data_type</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tcp_client_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>tcp__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::tcp_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab8709a93ec9ea91b0ce3a00cbef0a3a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tcp_server_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>tcp__server__endpoint__impl_8hpp.html</filename>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <class kind="class">vsomeip_v3::tcp_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5a870a512e63c528c3063ec5233b76dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tp.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>tp_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <class kind="class">vsomeip_v3::tp::tp</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_HEADER_SIZE</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>afd98449cbef7d3d148f62b758116ac14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_HEADER_POS_MIN</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>a4140427891f5f80058290e53bcb80d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_HEADER_POS_MAX</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>ace06b7a8718f0701ca8cccbafd1ddb1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TP_PAYLOAD_POS</name>
      <anchorfile>tp_8hpp.html</anchorfile>
      <anchor>aff87ff2bd75661cc2176c47cfdc13836</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>tp_header_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ae442a454e5c8747a7f581c3beab38f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>tp_message_type_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ab0ea6b850ec9b67c07d2d4ab5cb74b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; message_buffer_ptr_t &gt;</type>
      <name>tp_split_messages_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>a6aa9829e35052a42f8cafa86aa2868d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint8_t</type>
      <name>TP_FLAG</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>af5908255bf86963844054628ffb83bde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tp_message.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>tp__message_8hpp.html</filename>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">buffer.hpp</includes>
    <class kind="class">vsomeip_v3::tp::tp_message</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>tp_reassembler.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>tp__reassembler_8hpp.html</filename>
    <includes id="tp__message_8hpp" name="tp_message.hpp" local="yes" imported="no">tp_message.hpp</includes>
    <class kind="class">vsomeip_v3::tp::tp_reassembler</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>tp__reassembler_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>udp_client_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>udp__client__endpoint__impl_8hpp.html</filename>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">client_endpoint_impl.hpp</includes>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">tp_reassembler.hpp</includes>
    <class kind="class">vsomeip_v3::udp_client_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::udp &gt;</type>
      <name>udp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab7d6a552c539466f4522b91865d9bf08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>udp_server_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>udp__server__endpoint__impl_8hpp.html</filename>
    <includes id="udp__ext_8hpp" name="udp_ext.hpp" local="no" imported="no">boost/asio/ip/udp_ext.hpp</includes>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">server_endpoint_impl.hpp</includes>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">tp_reassembler.hpp</includes>
    <class kind="class">vsomeip_v3::udp_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::udp_ext &gt;</type>
      <name>udp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2e435c1b1d43d3b476171e426d96f31e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>udp_server_endpoint_impl_receive_op.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>udp__server__endpoint__impl__receive__op_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>virtual_server_endpoint_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/include/</path>
    <filename>virtual__server__endpoint__impl_8hpp.html</filename>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../include/endpoint.hpp</includes>
    <class kind="class">vsomeip_v3::virtual_server_endpoint_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>virtual__server__endpoint__impl_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error_code.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>error__code_8hpp.html</filename>
    <namespace>nexus</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SYSTEM_ERROR_NAMESPACE</name>
      <anchorfile>error__code_8hpp.html</anchorfile>
      <anchor>a71b4bffce4b7dadcd169c8630fe209dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>context.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/global/</path>
    <filename>context_8hpp.html</filename>
    <includes id="implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2global_2error_8hpp" name="error.hpp" local="no" imported="no">nexus/global/error.hpp</includes>
    <class kind="class">nexus::global::context</class>
    <namespace>nexus</namespace>
    <namespace>nexus::global</namespace>
    <namespace>nexus::global::detail</namespace>
    <member kind="function">
      <type>context</type>
      <name>init</name>
      <anchorfile>namespacenexus_1_1global_1_1detail.html</anchorfile>
      <anchor>a05b6aa15412af102334c6b1670e45caa</anchor>
      <arglist>(int flags, error_code &amp;ec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/global/</path>
    <filename>implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2global_2error_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::global</namespace>
    <member kind="enumeration">
      <type></type>
      <name>error</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ad114f4180b6afddb13534b5ac470ca86</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1global.html" anchor="ad114f4180b6afddb13534b5ac470ca86a00b8a1e251ababd1947ba3e827eddfe6">init_failed</enumvalue>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>global_category</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac12d09cf525f29ed3b0761d4165574de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a6e20944b1b236035c4c4ed1918c4f6ce</anchor>
      <arglist>(error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a864f1021c02f47f83b5cd06bd6169be1</anchor>
      <arglist>(error e)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/h3/</path>
    <filename>implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2error_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::h3::error &gt;</class>
    <namespace>nexus</namespace>
    <namespace>nexus::h3</namespace>
    <namespace>SYSTEM_ERROR_NAMESPACE</namespace>
    <member kind="enumeration">
      <type></type>
      <name>error</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>ab1eb19fc5a95e7f4df8b5ae6cf512936</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a7fa49f1a086c46bfc9e5f5fe279a82c0">no_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a14b3f1aa3ae3d5a467072da8d5c2736d">general_protocol_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a3d9fd48f8a61d2ef1bcabffb3e2c2336">internal_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a6f4f752af1d3d432a64e2200f7691537">stream_creation_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a8376b77896149b1aa08b5c319c4ca7aa">closed_critical_stream</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936ac62481ab75d27f5670a55a5497a5010b">frame_unexpected</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a4080e803926452cb85fbe0c7d3ba2419">frame_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936aa715cfd2cacd83ffe0e1acbe80fc155d">excessive_load</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936ad83d51c1e5c9fff87cf8578a67564acc">id_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a0d9d7c325747d7f0b2a294067892310b">settings_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a23bddac3882c3f5be3668b4fb2fa79d3">missing_settings</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a56b0a9bee8433282a3ac825c56a33f1b">request_rejected</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a09e447b4e8364a963ee6f7ff9fe53f08">request_cancelled</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a66981c0963244425441383ade09af144">request_incomplete</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a3b88c396feaa8d7ea9ef543c807fd633">message_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a62c47ac85649a455d1586432e41880b0">connect_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a7ce51f3b98f1f9e4457ca6ed4acd36c1">version_fallback</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936aaa7b4da5086b8e36172cb9a86b19f6ab">qpack_decompression_failed</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a2c4e0ac5477fb95d24aed52a7ded25d4">qpack_encoder_stream_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936aa25357c1396359ac8a3f6d42fc337c75">qpack_decoder_stream_error</enumvalue>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>h3_category</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>a334b51c76cee56f1c61783be9ae07cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>a22c403cf6b8f2a08a08f511ee1897cc5</anchor>
      <arglist>(error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>adf03e4752affc997a3ad0b4a1d7b6bf2</anchor>
      <arglist>(error e)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2error_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::connection_error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::stream_error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::transport_error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::tls_alert &gt;</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>SYSTEM_ERROR_NAMESPACE</namespace>
    <member kind="enumeration">
      <type></type>
      <name>connection_error</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a4087acbd7202911e60a010cb1957d89c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89cadfb7069bfc6e0064a6c667626eca07b4">aborted</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89caf5dc41a4deeab80b1dc31b0f3f01a1f4">handshake_failed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89ca56c27b1ab1a5a5a0eae853cabb4dc0c1">timed_out</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89ca86266ee937d97f812a8e57d22b62ee29">reset</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89ca21b83598d2a23d1d1cdc2ed6122c4a15">going_away</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89cacf0bffcd99308348185a6fa82201f979">peer_going_away</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>stream_error</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a1bc3aa19b5288dc5ad185dfaa5f8dbcc</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbcca2e51b1ab42e8a4a67f3445174be5191b">eof</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbcca8bc1b2f84252c3df4edd53e4aad097a7">busy</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbccadfb7069bfc6e0064a6c667626eca07b4">aborted</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbcca86266ee937d97f812a8e57d22b62ee29">reset</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>transport_error</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a95ae3df46f94691f1915ddfc72981d4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa7fa49f1a086c46bfc9e5f5fe279a82c0">no_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa3d9fd48f8a61d2ef1bcabffb3e2c2336">internal_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa53793ee58fc24168a0d6549c3cb2df8e">connection_refused</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa9d332214a604d542f0f96b1ceaa20ca3">flow_control_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa5ebdea2c37e7a2cd4f694473809caef9">stream_limit_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa2aee124bc2ca7763c84e279b94544ebc">stream_state_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa4a80bfb92151ef098d31696e41e8406e">final_size_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa16ec67cca6053888abd51407a737031f">frame_encoding_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4facccf0782f437b931597327aa47fb8648">transport_parameter_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4faa17d21843e2a1fec78a93940aa071eb6">connection_id_limit_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fab43d83c214f23df06bed7074b11852c8">protocol_violation</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4faf948e0eb747dbc4bb16dbcb2f2a5fae0">invalid_token</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa3d26fe5895b8f7c946f2e3960e0b34b0">application_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa5b4074dea8675a48e37373db91d0bcd9">crypto_buffer_exceeded</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa12e31202cb29eac64add3de58bfab74c">key_update_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa15a136c54de694d4a6f3098632d79b67">aead_limit_reached</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa0d4221c9bbbbea5c2d578847bf02a556">no_viable_path</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>tls_alert</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aceb614864bae7c6b041965e68aad63c5</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5abb45c1d67899800b7fe8bf6015af0dd6">close_notify</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a597cfdb46675641f694b1f918760d432">unexpected_message</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a8fd1a30f4f67f92962d89771ec9d47af">bad_record_mac</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a2695b59c259f00730dc5b5d42ac2139c">record_overflow</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a79db796776246d2c3aaca8b375e662c4">handshake_failure</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5aa122ea521767a141ab57b4d536bd096b">bad_certificate</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a084c8817a9b9ab2352e586500d1f7245">unsupported_certificate</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a44c5173a1906b8b485789734bc90c1e6">certificate_revoked</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a8d63d2bcd5d2d335aafbac7d5d6853f2">certificate_expired</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a437e54abaf7dea032cb794297b54961d">certificate_unknown</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a0bb2e3cfaec11b1cd502d30d896c8b99">illegal_parameter</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5adb7f455b40363afef20f7b4e52287086">unknown_ca</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ab24a6ab23d67f96f6a159138102dbe62">access_denied</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a3cb045915778215e2fced65afb8434d7">decode_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ae75cba472a2ac192de9a705aee85463e">decrypt_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5accc66c059398cf101d1811b511ebd46c">protocol_version</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5aff61b23d42af3189c7e5770f6e9b865b">insufficient_security</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a3d9fd48f8a61d2ef1bcabffb3e2c2336">internal_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a354f8d71b075ed31531d544110ae3b1d">inappropriate_fallback</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ab6897813c1365e38dca9a3a5bbac1074">user_canceled</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ac3adda9630b39fc3300eb2f1aa7209ed">missing_extension</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a415fd1cf3c6858f0f7e2bd8094e49047">unsupported_extension</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a62ee004ea07c4aca3dcce1b9f39a4ffc">unrecognized_name</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a49ac4ad6fa990e227f3d976b342b59b7">bad_certificate_status_response</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ad6c461e1ddf2a3c7f91f13ea7d37d9f0">unknown_psk_identity</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a61b36abfb2334b2d9435043a7dd32d79">certificate_required</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a65444c751cbdb326fe7719d61e9ebcf6">no_application_protocol</enumvalue>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>connection_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>acc6f2074e08d9b4e633b06f1d25b5add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>adef743061b930efd98eda539130508a4</anchor>
      <arglist>(connection_error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>afcdb096f0cc405b9fa0d0039a4b1a2f3</anchor>
      <arglist>(connection_error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>stream_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a5f54e128a1746d885b2a7c42529f4416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>af9603be35039ef91df60b1efc4fc6cea</anchor>
      <arglist>(stream_error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac593bf78b7c6ceb0525b1998ff222562</anchor>
      <arglist>(stream_error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>transport_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a725191332443bad0b3a8665db8ef91c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a13336540a134d830615d0ee67ab4c6a8</anchor>
      <arglist>(transport_error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a7f96f7580963586873f8b6ae14633196</anchor>
      <arglist>(transport_error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>tls_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a013c707e331cccf43c93ed91fecfc013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac53d38331238891fb7c651a1085bc6bf</anchor>
      <arglist>(tls_alert e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>afe9ae26d0ba3d0c49896dff6b715fd2f</anchor>
      <arglist>(tls_alert e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>application_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a02fb38eca337d09f5a2e3677b1d6fe12</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2error_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <namespace>vsomeip</namespace>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ERROR_INFO</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aceaf0adeb488b085418b2562b6ce9cba</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2error_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>global_init.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>global__init_8hpp.html</filename>
    <includes id="context_8hpp" name="context.hpp" local="no" imported="no">nexus/global/context.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::global</namespace>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a20ba633987ab6d0cfa13f57b703f0904</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>afce60e27bd537d1e214cec9698e4c9e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a49a39125e8e230adf4d715770d5c6865</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac5fd50ec6807cfbac67943c477db41af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac4f9ba4be547d0620ac2c24529bec5e9</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>acb95d28c4aff821c45ea00d8dbfe5c2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>h3.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>h3_8hpp.html</filename>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/h3/client.hpp</includes>
    <includes id="implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2error_8hpp" name="error.hpp" local="no" imported="no">nexus/h3/error.hpp</includes>
    <includes id="fields_8hpp" name="fields.hpp" local="no" imported="no">nexus/h3/fields.hpp</includes>
    <includes id="h3_2server_8hpp" name="server.hpp" local="no" imported="no">nexus/h3/server.hpp</includes>
    <includes id="h3_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/h3/stream.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>fields.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/h3/</path>
    <filename>fields_8hpp.html</filename>
    <class kind="class">nexus::h3::field</class>
    <class kind="struct">nexus::h3::detail::field_compare</class>
    <class kind="struct">nexus::h3::detail::field_key</class>
    <class kind="class">nexus::h3::fields</class>
    <namespace>nexus</namespace>
    <namespace>nexus::h3</namespace>
    <namespace>nexus::h3::detail</namespace>
    <member kind="typedef">
      <type>boost::intrusive::multiset&lt; field, boost::intrusive::compare&lt; field_compare &gt;, boost::intrusive::key_of_value&lt; field_key &gt; &gt;</type>
      <name>field_multiset</name>
      <anchorfile>namespacenexus_1_1h3_1_1detail.html</anchorfile>
      <anchor>aa5c923dc1196ef563d7e930d2517614a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::intrusive::list&lt; field, boost::intrusive::constant_time_size&lt; true &gt;, boost::intrusive::cache_last&lt; true &gt;, boost::intrusive::size_type&lt; uint16_t &gt; &gt;</type>
      <name>field_list</name>
      <anchorfile>namespacenexus_1_1h3_1_1detail.html</anchorfile>
      <anchor>acf9eb3079e7a2710b9c863baa639df4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/h3/</path>
    <filename>h3_2server_8hpp.html</filename>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <includes id="ssl_8hpp" name="ssl.hpp" local="no" imported="no">nexus/ssl.hpp</includes>
    <includes id="quic_2server_8hpp" name="server.hpp" local="no" imported="no">nexus/quic/server.hpp</includes>
    <class kind="class">nexus::h3::server</class>
    <class kind="class">nexus::h3::acceptor</class>
    <class kind="class">nexus::h3::server_connection</class>
    <namespace>nexus</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>server.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>quic_2server_8hpp.html</filename>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <includes id="ssl_8hpp" name="ssl.hpp" local="no" imported="no">nexus/ssl.hpp</includes>
    <includes id="engine__impl_8hpp" name="engine_impl.hpp" local="no" imported="no">nexus/quic/detail/engine_impl.hpp</includes>
    <includes id="socket__impl_8hpp" name="socket_impl.hpp" local="no" imported="no">nexus/quic/detail/socket_impl.hpp</includes>
    <class kind="class">nexus::quic::server</class>
    <class kind="class">nexus::quic::acceptor</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
  </compound>
  <compound kind="file">
    <name>stream.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/h3/</path>
    <filename>h3_2stream_8hpp.html</filename>
    <includes id="quic_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/quic/stream.hpp</includes>
    <includes id="fields_8hpp" name="fields.hpp" local="no" imported="no">nexus/h3/fields.hpp</includes>
    <class kind="class">nexus::h3::stream</class>
    <namespace>nexus</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>stream.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>quic_2stream_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <includes id="stream__id_8hpp" name="stream_id.hpp" local="no" imported="no">nexus/quic/stream_id.hpp</includes>
    <includes id="stream__impl_8hpp" name="stream_impl.hpp" local="no" imported="no">nexus/quic/detail/stream_impl.hpp</includes>
    <class kind="class">nexus::quic::stream</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
  </compound>
  <compound kind="file">
    <name>nexus.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>nexus_8hpp.html</filename>
    <includes id="global__init_8hpp" name="global_init.hpp" local="no" imported="no">nexus/global_init.hpp</includes>
    <includes id="h3_8hpp" name="h3.hpp" local="no" imported="no">nexus/h3.hpp</includes>
    <includes id="quic_8hpp" name="quic.hpp" local="no" imported="no">nexus/quic.hpp</includes>
    <namespace>nexus</namespace>
  </compound>
  <compound kind="file">
    <name>quic.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>quic_8hpp.html</filename>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/quic/client.hpp</includes>
    <includes id="quic_2server_8hpp" name="server.hpp" local="no" imported="no">nexus/quic/server.hpp</includes>
    <includes id="socket_8hpp" name="socket.hpp" local="no" imported="no">nexus/quic/socket.hpp</includes>
    <includes id="connection_8hpp" name="connection.hpp" local="no" imported="no">nexus/quic/connection.hpp</includes>
    <includes id="implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2error_8hpp" name="error.hpp" local="no" imported="no">nexus/quic/error.hpp</includes>
    <includes id="settings_8hpp" name="settings.hpp" local="no" imported="no">nexus/quic/settings.hpp</includes>
    <includes id="quic_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/quic/stream.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
  </compound>
  <compound kind="file">
    <name>connection.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>connection_8hpp.html</filename>
    <includes id="connection__id_8hpp" name="connection_id.hpp" local="no" imported="no">nexus/quic/connection_id.hpp</includes>
    <includes id="connection__impl_8hpp" name="connection_impl.hpp" local="no" imported="no">nexus/quic/detail/connection_impl.hpp</includes>
    <class kind="class">nexus::quic::connection</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
  </compound>
  <compound kind="file">
    <name>connection_id.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>connection__id_8hpp.html</filename>
    <class kind="class">nexus::quic::connection_id</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
  </compound>
  <compound kind="file">
    <name>connection_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>connection__impl_8hpp.html</filename>
    <includes id="connection__state_8hpp" name="connection_state.hpp" local="no" imported="no">nexus/quic/detail/connection_state.hpp</includes>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2detail_2service_8hpp" name="service.hpp" local="no" imported="no">nexus/quic/detail/service.hpp</includes>
    <includes id="stream__impl_8hpp" name="stream_impl.hpp" local="no" imported="no">nexus/quic/detail/stream_impl.hpp</includes>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <class kind="struct">nexus::quic::detail::connection_impl</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
  </compound>
  <compound kind="file">
    <name>connection_state.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>connection__state_8hpp.html</filename>
    <includes id="connection__id_8hpp" name="connection_id.hpp" local="no" imported="no">nexus/quic/connection_id.hpp</includes>
    <includes id="stream__impl_8hpp" name="stream_impl.hpp" local="no" imported="no">nexus/quic/detail/stream_impl.hpp</includes>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <class kind="struct">nexus::quic::detail::connection_context</class>
    <class kind="struct">nexus::quic::detail::incoming_connection</class>
    <class kind="struct">nexus::quic::detail::connection_state::accepting</class>
    <class kind="struct">nexus::quic::detail::connection_state::open</class>
    <class kind="struct">nexus::quic::detail::connection_state::going_away</class>
    <class kind="struct">nexus::quic::detail::connection_state::error</class>
    <class kind="struct">nexus::quic::detail::connection_state::closed</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <namespace>nexus::quic::detail::connection_state</namespace>
    <member kind="typedef">
      <type>boost::intrusive::list&lt; stream_impl &gt;</type>
      <name>stream_list</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a0dd2386adc304f67ab7f0fe5aeee6df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; accepting, open, going_away, error, closed &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ad8bf0548cab545cead0b6137e766f335</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>transition</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a4fc1c7576e98a3cf1c898e619f0c0d85</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85ac95ebe00436f48ceedc3e756a04df0e1">accepting_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a66372d345d8dc810c73d374fee7053d4">open_to_going_away</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85abb305d7bd01c5fe482d2e3e925ae12be">open_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85af6d13bfc1f76cc030ddf2ad200e9fc10">open_to_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85aecea6155e57bb2f43fc7fc06bb35d782">going_away_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a45ac60c0200151f6038dd89091e6d458">going_away_to_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a6d44ff48b70e158c7166a00c2484d1d6">error_to_closed</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_erase</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a442e2dd7f224297559f9040deb36e59a</anchor>
      <arglist>(stream_impl &amp;s, stream_list &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_transfer</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a38cdb867df4c4f8f98202727db9740a4</anchor>
      <arglist>(stream_impl &amp;s, stream_list &amp;from, stream_list &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa48c5579d994b91ec9554463241dde25</anchor>
      <arglist>(const variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>connection_id</type>
      <name>id</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6faf35652a91cbe3724972681130f32b</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a65a40f0999f23204d49c129247fcbf88</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6becc857263b178fb268b7856f4a9457</anchor>
      <arglist>(variant &amp;state, lsquic_conn *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_handshake</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa908bc498ffb7f2f7efd9012ffe6c98f</anchor>
      <arglist>(variant &amp;state, int status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ace76225f602bdf3c2f6976e833bf2dd8</anchor>
      <arglist>(variant &amp;state, accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_incoming</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a72947637af0ac400577ea80ac205d08f</anchor>
      <arglist>(variant &amp;state, incoming_connection &amp;&amp;incoming)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a55b1efce474abae045feba791b4cf019</anchor>
      <arglist>(variant &amp;state, lsquic_conn *handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a3e0ef7b4e69bf69c7746eb2ad0bb610c</anchor>
      <arglist>(variant &amp;state, stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a96e2dbcd4c0b467caebacd51710f5cd3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stream_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a5fb7989c7bebe99cc68dd925e1ad67a8</anchor>
      <arglist>(variant &amp;state, stream_accept_operation &amp;op, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a59734da5ff1f0677401bbc8b28932cd3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>goaway</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a3c7b43e65c3ec9411efaaad3b0c7655d</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_remote_goaway</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ae27d2a540533f070c1e9a8d902d874c8</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>reset</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a51ab862355e8705fca3075256288ab3b</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa70dd8b3af0e83472cf08ecf51ab014b</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a467e8ffe3e014b4d6dc9cac4faa2ffe9</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_remote_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a69e86b9b8375586c8df50b16f569c892</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a9009995fdc07a1850ed601d0ec27327f</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>engine_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>engine__impl_8hpp.html</filename>
    <includes id="settings_8hpp" name="settings.hpp" local="no" imported="no">nexus/quic/settings.hpp</includes>
    <class kind="struct">nexus::quic::detail::engine_deleter</class>
    <class kind="struct">nexus::quic::detail::engine_impl</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="typedef">
      <type>std::unique_ptr&lt; lsquic_engine, engine_deleter &gt;</type>
      <name>lsquic_engine_ptr</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4f16121fba2f35a0a5808e84e5899d32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_ptr.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>handler__ptr_8hpp.html</filename>
    <class kind="struct">nexus::quic::detail::handler_ptr_deleter</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="typedef">
      <type>std::unique_ptr&lt; T, handler_ptr_deleter&lt; Handler &gt; &gt;</type>
      <name>handler_ptr</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a39efb6bf2ba7556bb36172d07f54b136</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>handler_allocate</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a5d65a33ff0688cff669dcf43dada3ad5</anchor>
      <arglist>(Handler &amp;handler, Args &amp;&amp;...args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>operation.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>operation_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <includes id="fields_8hpp" name="fields.hpp" local="no" imported="no">nexus/h3/fields.hpp</includes>
    <includes id="handler__ptr_8hpp" name="handler_ptr.hpp" local="no" imported="no">nexus/quic/detail/handler_ptr.hpp</includes>
    <class kind="struct">nexus::quic::detail::operation</class>
    <class kind="struct">nexus::quic::detail::sync_operation</class>
    <class kind="struct">nexus::quic::detail::async_operation</class>
    <class kind="struct">nexus::quic::detail::accept_operation</class>
    <class kind="struct">nexus::quic::detail::stream_connect_operation</class>
    <class kind="struct">nexus::quic::detail::stream_accept_operation</class>
    <class kind="struct">nexus::quic::detail::stream_data_operation</class>
    <class kind="struct">nexus::quic::detail::stream_header_read_operation</class>
    <class kind="struct">nexus::quic::detail::stream_header_write_operation</class>
    <class kind="struct">nexus::quic::detail::stream_close_operation</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="typedef">
      <type>sync_operation&lt; accept_operation &gt;</type>
      <name>accept_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a90748a3995032959a14d99bb2d1b6343</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; accept_operation, Handler, IoExecutor &gt;</type>
      <name>accept_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>aa179a6f217f61b81fbecafa85631079a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_connect_operation &gt;</type>
      <name>stream_connect_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4dfaa4aabbd9b73222741667524b9612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_connect_operation, Handler, IoExecutor &gt;</type>
      <name>stream_connect_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a92e915c5bdea2ab57ad09327545dbd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_accept_operation &gt;</type>
      <name>stream_accept_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>aa2eaae57de95851fbf0cab7be2702c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_accept_operation, Handler, IoExecutor &gt;</type>
      <name>stream_accept_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a9020a45ab036dc622c3359216b0c5c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_data_operation &gt;</type>
      <name>stream_data_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a3028e91708681af66a8708a684adbf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_data_operation, Handler, IoExecutor &gt;</type>
      <name>stream_data_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a3331d91d05b30d25ab2a5a6154f5f886</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_header_read_operation &gt;</type>
      <name>stream_header_read_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a99eec929f9f61d4bd229707fc9131a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_header_read_operation, Handler, IoExecutor &gt;</type>
      <name>stream_header_read_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>ab8822e5a6ec7406d8bd75b25f92e9ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_header_write_operation &gt;</type>
      <name>stream_header_write_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a52d72b248df7e0533050a48f3f1d1d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_header_write_operation, Handler, IoExecutor &gt;</type>
      <name>stream_header_write_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a305f8c0a4df92a27c6232feaf0b16518</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_close_operation &gt;</type>
      <name>stream_close_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a78e1432b0d6ce98496803d470937ee70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_close_operation, Handler, IoExecutor &gt;</type>
      <name>stream_close_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a035833ec1f43961991633bc369b544de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>completion_type</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a6cfef84c226eca77542ceb6f386c85d9</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9a42b90196b487c54069097a68fe98ab6f">post</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9ac9df09b4610bb43e290507a37c658ae8">defer</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9a9dddf2a4f7d94594ec2ea98407a410e1">dispatch</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9afb14982288108e1fbd6207ef55f05027">destroy</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>socket__impl_8hpp.html</filename>
    <includes id="ssl_8hpp" name="ssl.hpp" local="no" imported="no">nexus/ssl.hpp</includes>
    <includes id="connection__impl_8hpp" name="connection_impl.hpp" local="no" imported="no">nexus/quic/detail/connection_impl.hpp</includes>
    <class kind="union">nexus::quic::detail::sockaddr_union</class>
    <class kind="struct">nexus::quic::detail::socket_impl</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="typedef">
      <type>boost::intrusive::list&lt; connection_impl &gt;</type>
      <name>connection_list</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a127e6d8240dfd0eab36e0e155f9806f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_erase</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a293f05f78c11c5c7b1a815135f8b2768</anchor>
      <arglist>(connection_impl &amp;s, connection_list &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_transfer</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a86a8dee8d893ba8de561f589f85c76aa</anchor>
      <arglist>(connection_impl &amp;s, connection_list &amp;from, connection_list &amp;to)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stream_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>stream__impl_8hpp.html</filename>
    <includes id="operation_8hpp" name="operation.hpp" local="no" imported="no">nexus/quic/detail/operation.hpp</includes>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2detail_2service_8hpp" name="service.hpp" local="no" imported="no">nexus/quic/detail/service.hpp</includes>
    <includes id="stream__state_8hpp" name="stream_state.hpp" local="no" imported="no">nexus/quic/detail/stream_state.hpp</includes>
    <includes id="implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2error_8hpp" name="error.hpp" local="no" imported="no">nexus/quic/error.hpp</includes>
    <includes id="fields_8hpp" name="fields.hpp" local="no" imported="no">nexus/h3/fields.hpp</includes>
    <class kind="struct">nexus::quic::detail::stream_impl</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
  </compound>
  <compound kind="file">
    <name>stream_open_handler.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>stream__open__handler_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <class kind="struct">nexus::quic::detail::stream_factory</class>
    <class kind="struct">nexus::quic::detail::stream_open_handler</class>
    <class kind="struct">boost::asio::associated_executor&lt; nexus::quic::detail::stream_open_handler&lt; Stream, Handler &gt;, Executor &gt;</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>stream_state.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/detail/</path>
    <filename>stream__state_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <includes id="stream__id_8hpp" name="stream_id.hpp" local="no" imported="no">nexus/quic/stream_id.hpp</includes>
    <class kind="struct">nexus::quic::detail::sending_stream_state::expecting_header</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::header</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::expecting_body</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::body</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::shutdown</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::expecting_header</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::header</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::expecting_body</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::body</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::shutdown</class>
    <class kind="struct">nexus::quic::detail::stream_state::accepting</class>
    <class kind="struct">nexus::quic::detail::stream_state::connecting</class>
    <class kind="struct">nexus::quic::detail::stream_state::open</class>
    <class kind="struct">nexus::quic::detail::stream_state::open::quic_tag</class>
    <class kind="struct">nexus::quic::detail::stream_state::open::h3_tag</class>
    <class kind="struct">nexus::quic::detail::stream_state::closing</class>
    <class kind="struct">nexus::quic::detail::stream_state::error</class>
    <class kind="struct">nexus::quic::detail::stream_state::closed</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <namespace>nexus::quic::detail::sending_stream_state</namespace>
    <namespace>nexus::quic::detail::receiving_stream_state</namespace>
    <namespace>nexus::quic::detail::stream_state</namespace>
    <member kind="typedef">
      <type>stream_header_write_operation</type>
      <name>header_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ad1940d7b93dadbc37b0ddc31f2e1bb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stream_data_operation</type>
      <name>data_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>af2a9581c2b8f176574f7ae8fd29c0dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; expecting_header, header, expecting_body, body, shutdown &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a18294c02c8048708767dd0222257e269</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stream_header_read_operation</type>
      <name>header_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a7b5d792666d84c49880ef66a9c85eba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stream_data_operation</type>
      <name>data_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a7e5675572dcfe75c50858961b615ea36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; expecting_header, header, expecting_body, body, shutdown &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>ac899e88858dcc86a1ba63b60f53904ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; accepting, connecting, open, closing, error, closed &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a11386f2f0daf8239366c2e6dd5d85b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>transition</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aa2154b48927deefb012724ae2ba76820</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820ac95ebe00436f48ceedc3e756a04df0e1">accepting_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820a86079f68e63e586930185ecae90e17dd">connecting_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820ab47e9faf9b555990df6ca9635f53a85d">open_to_closing</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820abb305d7bd01c5fe482d2e3e925ae12be">open_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820af6d13bfc1f76cc030ddf2ad200e9fc10">open_to_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820ad3948986a0e02187ee7afed90c3596e7">closing_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820a6d44ff48b70e158c7166a00c2484d1d6">error_to_closed</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ae0e2f58749942f361f021bb284a88491</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a61cb6b3bdb422db259e0da6066b10a95</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a57ca758bb3b9b80cf0a3086782770ab3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a3852106518d8c1c65cd4885dbb7f5cf7</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ad0b7325e3db1b3d0c9f5b6497477cefb</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a5a9657bc0e3b464dfe873ad0f31be20b</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a5c6ca25bd251ff13c6480f3fe6b59978</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>ae440f2c297c11f1bd87877731cb343f8</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation *op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>ab3568363342030606370e9d4c264acbd</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation *op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a17b083820cb0e40d254855ca3843bd77</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a96146fc8256476160645847354c54454</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a55c987651046b7756de2f4a21b719915</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a65b9b84594ec0edba10870c21fdcc9c2</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a83281ef0c2b06ff49f045ca25699cc15</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a52823b239f2ccbb0df495ace0a37b86e</anchor>
      <arglist>(const variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>stream_id</type>
      <name>id</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a7b39f06f3d20aa21dc4a1f71370197e1</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a9ad68c3dddab8d08696584936d3aa264</anchor>
      <arglist>(variant &amp;state, stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>af64ec06bec53ac60b70cabf601bd2726</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ac16d776e3d8327985e23ad1ca737fc92</anchor>
      <arglist>(variant &amp;state, stream_accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a51fc8cb45cd8f2c42ea5d2771f0e9d0e</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aec2ec46cad4cc2df6df26854ed2048a2</anchor>
      <arglist>(variant &amp;state, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_headers</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aded21f906f9bc463dd0fe7badd028d8b</anchor>
      <arglist>(variant &amp;state, stream_header_read_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a2ba1c3a0894b81a17962327c2fc429f6</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>adaebbcfac388735ad32ea7a7de0c9c4d</anchor>
      <arglist>(variant &amp;state, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write_headers</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a11a1f6c65484b0336e115fa43a087f43</anchor>
      <arglist>(variant &amp;state, stream_header_write_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ad9d8c592d3c720eab7e59e8dcbf0706e</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a5186877276a3e04c7e2a855fc3085a5b</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>abf0ce6505c0eb5e1dfa6e7406f3476d9</anchor>
      <arglist>(variant &amp;state, int how, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a32c6a17e8946f9e79b3abcebd376fa98</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aea5896cb2ab2e7cb73439665c4a97118</anchor>
      <arglist>(variant &amp;state, stream_close_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a1ce8e570a6190188971b9c0365355df9</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_error</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ab4b4b067a7f857e793bc2a36c15f9726</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>reset</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aa7e9ab53e82248f213e0b3ee04dcb70b</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a51c3fe6da462e1930ee368983802c075</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>settings.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>settings_8hpp.html</filename>
    <class kind="struct">nexus::quic::bad_setting</class>
    <class kind="struct">nexus::quic::settings</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="function">
      <type>settings</type>
      <name>default_client_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a47cfec149ad958855e18d503b8767bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_server_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a6df58e021accf7433c613d471b87f071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_client_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aec7b3d0059d201ae84346d6728b9bb63</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_server_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac9f8c7f39f32478e2adc2c2718638e37</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4cfd04fa9077900424da0e164c7b98e2</anchor>
      <arglist>(settings &amp;out, const lsquic_engine_settings &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a90cc35651a3dc150242eeab08072adbb</anchor>
      <arglist>(const settings &amp;in, lsquic_engine_settings &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>socket_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <member kind="function">
      <type>void</type>
      <name>prepare_socket</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a402ce927d9a1ff6267bc73ad5fb1a613</anchor>
      <arglist>(udp::socket &amp;sock, bool is_server, error_code &amp;ec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stream_id.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/quic/</path>
    <filename>stream__id_8hpp.html</filename>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>stream_id</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a677eae7bede009176522d4d6f82dcc31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>client_initiated</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a517be5902ca4acf8d14a2431744ebea3</anchor>
      <arglist>(stream_id id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>server_initiated</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aa0c0a5a2789d4fdaee425146ca0aecfd</anchor>
      <arglist>(stream_id id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ssl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>ssl_8hpp.html</filename>
    <namespace>nexus</namespace>
  </compound>
  <compound kind="file">
    <name>udp.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/include/nexus/</path>
    <filename>udp_8hpp.html</filename>
    <includes id="error__code_8hpp" name="error_code.hpp" local="no" imported="no">nexus/error_code.hpp</includes>
    <class kind="class">nexus::detail::socket_option</class>
    <namespace>nexus</namespace>
    <namespace>nexus::detail</namespace>
    <member kind="typedef">
      <type>detail::socket_option&lt; IP_RECVTOS, IPV6_RECVTCLASS &gt;</type>
      <name>receive_ecn</name>
      <anchorfile>namespacenexus.html</anchorfile>
      <anchor>af5dc8b58d9b41587af37ee957aab8c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::socket_option&lt; IP_PKTINFO, IPV6_RECVPKTINFO &gt;</type>
      <name>receive_dstaddr</name>
      <anchorfile>namespacenexus.html</anchorfile>
      <anchor>a585cc2c2a312e2d6692e4a3d3bf2fc5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>set_option</name>
      <anchorfile>namespacenexus_1_1detail.html</anchorfile>
      <anchor>ab476f45949cc794ebb773fad13ff54bf</anchor>
      <arglist>(Socket &amp;sock, Option &amp;&amp;option)</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>set_options</name>
      <anchorfile>namespacenexus_1_1detail.html</anchorfile>
      <anchor>a6f8fc6357a36d8f36cce3d59d1c70c83</anchor>
      <arglist>(Socket &amp;sock, Options &amp;&amp;...options)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>client.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>client_8cc.html</filename>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/h3/client.hpp</includes>
    <includes id="h3_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/h3/stream.hpp</includes>
    <includes id="connection_8hpp" name="connection.hpp" local="no" imported="no">nexus/quic/connection.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>connection.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>connection_8cc.html</filename>
    <includes id="connection_8hpp" name="connection.hpp" local="no" imported="no">nexus/quic/connection.hpp</includes>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/quic/client.hpp</includes>
    <includes id="quic_2server_8hpp" name="server.hpp" local="no" imported="no">nexus/quic/server.hpp</includes>
    <includes id="quic_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/quic/stream.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
  </compound>
  <compound kind="file">
    <name>connection_state.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>connection__state_8cc.html</filename>
    <includes id="connection__state_8hpp" name="connection_state.hpp" local="no" imported="no">nexus/quic/detail/connection_state.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <namespace>nexus::quic::detail::connection_state</namespace>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa48c5579d994b91ec9554463241dde25</anchor>
      <arglist>(const variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>connection_id</type>
      <name>id</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6faf35652a91cbe3724972681130f32b</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remote_endpoint</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ad77fb5e6ad82a8a0ae58cd4bf7fa2a91</anchor>
      <arglist>(lsquic_conn *handle, sockaddr *remote)</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a65a40f0999f23204d49c129247fcbf88</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6becc857263b178fb268b7856f4a9457</anchor>
      <arglist>(variant &amp;state, lsquic_conn *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_handshake</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa908bc498ffb7f2f7efd9012ffe6c98f</anchor>
      <arglist>(variant &amp;state, int status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ace76225f602bdf3c2f6976e833bf2dd8</anchor>
      <arglist>(variant &amp;state, accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_incoming</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a72947637af0ac400577ea80ac205d08f</anchor>
      <arglist>(variant &amp;state, incoming_connection &amp;&amp;incoming)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a55b1efce474abae045feba791b4cf019</anchor>
      <arglist>(variant &amp;state, lsquic_conn *handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a3e0ef7b4e69bf69c7746eb2ad0bb610c</anchor>
      <arglist>(variant &amp;state, stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a07e5aca28bd20290ed408995efb9f28d</anchor>
      <arglist>(variant &amp;state, lsquic_stream_t *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stream_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a5fb7989c7bebe99cc68dd925e1ad67a8</anchor>
      <arglist>(variant &amp;state, stream_accept_operation &amp;op, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a59734da5ff1f0677401bbc8b28932cd3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>abort_streams</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a2df457b0058da521775fe92363ca2c2e</anchor>
      <arglist>(open &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>abort_streams</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6b28cf24cbe1ef8b8db7d320d111a656</anchor>
      <arglist>(going_away &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>goaway</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a3c7b43e65c3ec9411efaaad3b0c7655d</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_remote_goaway</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ae27d2a540533f070c1e9a8d902d874c8</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>reset</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a51ab862355e8705fca3075256288ab3b</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa70dd8b3af0e83472cf08ecf51ab014b</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a467e8ffe3e014b4d6dc9cac4faa2ffe9</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_remote_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a69e86b9b8375586c8df50b16f569c892</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a9009995fdc07a1850ed601d0ec27327f</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>engine.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>engine_8cc.html</filename>
    <includes id="connection__impl_8hpp" name="connection_impl.hpp" local="no" imported="no">nexus/quic/detail/connection_impl.hpp</includes>
    <includes id="engine__impl_8hpp" name="engine_impl.hpp" local="no" imported="no">nexus/quic/detail/engine_impl.hpp</includes>
    <includes id="socket__impl_8hpp" name="socket_impl.hpp" local="no" imported="no">nexus/quic/detail/socket_impl.hpp</includes>
    <includes id="stream__impl_8hpp" name="stream_impl.hpp" local="no" imported="no">nexus/quic/detail/stream_impl.hpp</includes>
    <includes id="socket_8hpp" name="socket.hpp" local="no" imported="no">nexus/quic/socket.hpp</includes>
    <includes id="recv__header__set_8hpp" name="recv_header_set.hpp" local="yes" imported="no">recv_header_set.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="function">
      <type>void</type>
      <name>on_goaway_received</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a64b2371bd2feef4f8d1f58bd8cfd72ae</anchor>
      <arglist>(lsquic_conn_t *conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_conncloseframe_received</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a0c2e2f73e32c5e2a1387894c81536e24</anchor>
      <arglist>(lsquic_conn_t *conn, int app_error, uint64_t code, const char *reason, int reason_len)</arglist>
    </member>
    <member kind="function">
      <type>ssl_ctx_st *</type>
      <name>api_peer_ssl_ctx</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a03ad16874f4e5f03a2ee5348e02932b0</anchor>
      <arglist>(void *peer_ctx, const sockaddr *local)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>error_8cc.html</filename>
    <includes id="implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2quic_2error_8hpp" name="error.hpp" local="no" imported="no">nexus/quic/error.hpp</includes>
    <includes id="implementation_2endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2error_8hpp" name="error.hpp" local="no" imported="no">nexus/h3/error.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::h3</namespace>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>connection_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>acc6f2074e08d9b4e633b06f1d25b5add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>stream_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a5f54e128a1746d885b2a7c42529f4416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>application_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a02fb38eca337d09f5a2e3677b1d6fe12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>transport_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a725191332443bad0b3a8665db8ef91c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>tls_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a013c707e331cccf43c93ed91fecfc013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>quic_category</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>a05de69240b1ea1443471f2cb6a58029f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>global.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>global_8cc.html</filename>
    <includes id="global__init_8hpp" name="global_init.hpp" local="no" imported="no">nexus/global_init.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::global</namespace>
    <namespace>nexus::global::detail</namespace>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>global_category</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac12d09cf525f29ed3b0761d4165574de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>log</name>
      <anchorfile>namespacenexus_1_1global_1_1detail.html</anchorfile>
      <anchor>ae76eac93e7892094c0b8549d95bd730a</anchor>
      <arglist>(void *ctx, const char *buf, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init</name>
      <anchorfile>namespacenexus_1_1global_1_1detail.html</anchorfile>
      <anchor>a05b6aa15412af102334c6b1670e45caa</anchor>
      <arglist>(int flags, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a20ba633987ab6d0cfa13f57b703f0904</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>afce60e27bd537d1e214cec9698e4c9e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a49a39125e8e230adf4d715770d5c6865</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac5fd50ec6807cfbac67943c477db41af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac4f9ba4be547d0620ac2c24529bec5e9</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>acb95d28c4aff821c45ea00d8dbfe5c2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>recv_header_set.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>recv__header__set_8hpp.html</filename>
    <includes id="fields_8hpp" name="fields.hpp" local="no" imported="no">nexus/h3/fields.hpp</includes>
    <class kind="struct">nexus::quic::detail::recv_header_set</class>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
  </compound>
  <compound kind="file">
    <name>server.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>server_8cc.html</filename>
    <includes id="h3_2server_8hpp" name="server.hpp" local="no" imported="no">nexus/h3/server.hpp</includes>
    <includes id="h3_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/h3/stream.hpp</includes>
    <includes id="connection_8hpp" name="connection.hpp" local="no" imported="no">nexus/quic/connection.hpp</includes>
    <includes id="udp_8hpp" name="udp.hpp" local="no" imported="no">nexus/udp.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>settings.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>settings_8cc.html</filename>
    <includes id="settings_8hpp" name="settings.hpp" local="no" imported="no">nexus/quic/settings.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="function">
      <type>void</type>
      <name>read_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4cfd04fa9077900424da0e164c7b98e2</anchor>
      <arglist>(settings &amp;out, const lsquic_engine_settings &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a90cc35651a3dc150242eeab08072adbb</anchor>
      <arglist>(const settings &amp;in, lsquic_engine_settings &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a2cc9f745b5534ebee5f73302b0cb3a98</anchor>
      <arglist>(const lsquic_engine_settings &amp;es, int flags, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_client_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a47cfec149ad958855e18d503b8767bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_server_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a6df58e021accf7433c613d471b87f071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_client_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aec7b3d0059d201ae84346d6728b9bb63</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_server_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac9f8c7f39f32478e2adc2c2718638e37</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>socket_8cc.html</filename>
    <includes id="socket_8hpp" name="socket.hpp" local="no" imported="no">nexus/quic/socket.hpp</includes>
    <includes id="engine__impl_8hpp" name="engine_impl.hpp" local="no" imported="no">nexus/quic/detail/engine_impl.hpp</includes>
    <includes id="socket__impl_8hpp" name="socket_impl.hpp" local="no" imported="no">nexus/quic/detail/socket_impl.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <member kind="function">
      <type>void</type>
      <name>prepare_socket</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a402ce927d9a1ff6267bc73ad5fb1a613</anchor>
      <arglist>(udp::socket &amp;sock, bool is_server, error_code &amp;ec)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>ecn_size</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a43546e5c2ab8785ebb692d69c4cbc265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>dstaddr4_size</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>adbd51c2db9a8519e35bc28dd28785773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>max_control_size</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>ae558b926f945773ebf6ccd82edc47d81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stream.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>stream_8cc.html</filename>
    <includes id="connection_8hpp" name="connection.hpp" local="no" imported="no">nexus/quic/connection.hpp</includes>
    <includes id="h3_2stream_8hpp" name="stream.hpp" local="no" imported="no">nexus/h3/stream.hpp</includes>
    <includes id="endpoints_2quic__adaptor_2nexus_2include_2nexus_2h3_2client_8hpp" name="client.hpp" local="no" imported="no">nexus/h3/client.hpp</includes>
    <includes id="h3_2server_8hpp" name="server.hpp" local="no" imported="no">nexus/h3/server.hpp</includes>
    <includes id="engine__impl_8hpp" name="engine_impl.hpp" local="no" imported="no">nexus/quic/detail/engine_impl.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <namespace>nexus::h3</namespace>
  </compound>
  <compound kind="file">
    <name>stream_state.cc</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/nexus/src/</path>
    <filename>stream__state_8cc.html</filename>
    <includes id="stream__state_8hpp" name="stream_state.hpp" local="no" imported="no">nexus/quic/detail/stream_state.hpp</includes>
    <includes id="connection__impl_8hpp" name="connection_impl.hpp" local="no" imported="no">nexus/quic/detail/connection_impl.hpp</includes>
    <includes id="socket__impl_8hpp" name="socket_impl.hpp" local="no" imported="no">nexus/quic/detail/socket_impl.hpp</includes>
    <includes id="engine__impl_8hpp" name="engine_impl.hpp" local="no" imported="no">nexus/quic/detail/engine_impl.hpp</includes>
    <includes id="recv__header__set_8hpp" name="recv_header_set.hpp" local="yes" imported="no">recv_header_set.hpp</includes>
    <namespace>nexus</namespace>
    <namespace>nexus::quic</namespace>
    <namespace>nexus::quic::detail</namespace>
    <namespace>nexus::quic::detail::sending_stream_state</namespace>
    <namespace>nexus::quic::detail::receiving_stream_state</namespace>
    <namespace>nexus::quic::detail::stream_state</namespace>
    <member kind="function">
      <type>void</type>
      <name>write_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ae0e2f58749942f361f021bb284a88491</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a61cb6b3bdb422db259e0da6066b10a95</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a57ca758bb3b9b80cf0a3086782770ab3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a3852106518d8c1c65cd4885dbb7f5cf7</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ad0b7325e3db1b3d0c9f5b6497477cefb</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a5a9657bc0e3b464dfe873ad0f31be20b</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a5c6ca25bd251ff13c6480f3fe6b59978</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a94e438bd29ab1d9ab3f382e3ae8b7151</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>abfe1b5d4aa232d8fe1a6f9bb1acb13a7</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>aea57477a4df0db5ae471d90d9c95cb78</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a63e8c7fd49ecbdb595d0dd2cde6f3beb</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a55c987651046b7756de2f4a21b719915</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a65b9b84594ec0edba10870c21fdcc9c2</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a83281ef0c2b06ff49f045ca25699cc15</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a52823b239f2ccbb0df495ace0a37b86e</anchor>
      <arglist>(const variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>stream_id</type>
      <name>id</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a7b39f06f3d20aa21dc4a1f71370197e1</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a9ad68c3dddab8d08696584936d3aa264</anchor>
      <arglist>(variant &amp;state, stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>af64ec06bec53ac60b70cabf601bd2726</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ac16d776e3d8327985e23ad1ca737fc92</anchor>
      <arglist>(variant &amp;state, stream_accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a51fc8cb45cd8f2c42ea5d2771f0e9d0e</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aec2ec46cad4cc2df6df26854ed2048a2</anchor>
      <arglist>(variant &amp;state, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_headers</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aded21f906f9bc463dd0fe7badd028d8b</anchor>
      <arglist>(variant &amp;state, stream_header_read_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a2ba1c3a0894b81a17962327c2fc429f6</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>adaebbcfac388735ad32ea7a7de0c9c4d</anchor>
      <arglist>(variant &amp;state, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write_headers</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a11a1f6c65484b0336e115fa43a087f43</anchor>
      <arglist>(variant &amp;state, stream_header_write_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ad9d8c592d3c720eab7e59e8dcbf0706e</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a5186877276a3e04c7e2a855fc3085a5b</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>abf0ce6505c0eb5e1dfa6e7406f3476d9</anchor>
      <arglist>(variant &amp;state, int how, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a32c6a17e8946f9e79b3abcebd376fa98</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aea5896cb2ab2e7cb73439665c4a97118</anchor>
      <arglist>(variant &amp;state, stream_close_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a1ce8e570a6190188971b9c0365355df9</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_error</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ab4b4b067a7f857e793bc2a36c15f9726</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>reset</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aa7e9ab53e82248f213e0b3ee04dcb70b</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a51c3fe6da462e1930ee368983802c075</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>quic_adaptor.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/quic_adaptor/</path>
    <filename>quic__adaptor_8hpp.html</filename>
    <class kind="class">quic_adaptor::quic_client_adaptor</class>
    <namespace>quic_adaptor</namespace>
  </compound>
  <compound kind="file">
    <name>client_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="client__endpoint__impl_8hpp" name="client_endpoint_impl.hpp" local="yes" imported="no">../include/client_endpoint_impl.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="quic__adaptor_8hpp" name="quic_adaptor.hpp" local="yes" imported="no">../quic_adaptor/quic_adaptor.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>credentials.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>credentials_8cpp.html</filename>
  </compound>
  <compound kind="file">
    <name>endpoint_definition.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>endpoint__definition_8cpp.html</filename>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>endpoint__impl_8cpp.html</filename>
    <includes id="stream__protocol__ext_8hpp" name="stream_protocol_ext.hpp" local="no" imported="no">boost/asio/local/stream_protocol_ext.hpp</includes>
    <includes id="udp__ext_8hpp" name="udp_ext.hpp" local="no" imported="no">boost/asio/ip/udp_ext.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="endpoint__impl_8hpp" name="endpoint_impl.hpp" local="yes" imported="no">../include/endpoint_impl.hpp</includes>
    <includes id="quic__adaptor_8hpp" name="quic_adaptor.hpp" local="yes" imported="no">../quic_adaptor/quic_adaptor.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>endpoint__manager__base_8cpp.html</filename>
    <includes id="endpoint__manager__base_8hpp" name="endpoint_manager_base.hpp" local="yes" imported="no">../include/endpoint_manager_base.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">../../routing/include/routing_manager_base.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="local__tcp__client__endpoint__impl_8hpp" name="local_tcp_client_endpoint_impl.hpp" local="yes" imported="no">../include/local_tcp_client_endpoint_impl.hpp</includes>
    <includes id="local__tcp__server__endpoint__impl_8hpp" name="local_tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_tcp_server_endpoint_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SERVER_PORT_OFFSET</name>
      <anchorfile>endpoint__manager__base_8cpp.html</anchorfile>
      <anchor>a3819ff824572066b02f85ae82f1bb24c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>endpoint_manager_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>endpoint__manager__impl_8cpp.html</filename>
    <includes id="endpoint__manager__impl_8hpp" name="endpoint_manager_impl.hpp" local="yes" imported="no">../include/endpoint_manager_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="local__tcp__server__endpoint__impl_8hpp" name="local_tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_tcp_server_endpoint_impl.hpp</includes>
    <includes id="udp__client__endpoint__impl_8hpp" name="udp_client_endpoint_impl.hpp" local="yes" imported="no">../include/udp_client_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../include/udp_server_endpoint_impl.hpp</includes>
    <includes id="tcp__client__endpoint__impl_8hpp" name="tcp_client_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_client_endpoint_impl.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="virtual__server__endpoint__impl_8hpp" name="virtual_server_endpoint_impl.hpp" local="yes" imported="no">../include/virtual_server_endpoint_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">../../routing/include/routing_manager_base.hpp</includes>
    <includes id="routing__manager__impl_8hpp" name="routing_manager_impl.hpp" local="yes" imported="no">../../routing/include/routing_manager_impl.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SD_LISTEN_FDS_START</name>
      <anchorfile>endpoint__manager__impl_8cpp.html</anchorfile>
      <anchor>ad91f989c8a2fc570846bb7b131ec3230</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>local_tcp_client_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>local__tcp__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="local__tcp__client__endpoint__impl_8hpp" name="local_tcp_client_endpoint_impl.hpp" local="yes" imported="no">../include/local_tcp_client_endpoint_impl.hpp</includes>
    <includes id="local__tcp__server__endpoint__impl_8hpp" name="local_tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_tcp_server_endpoint_impl.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>local_tcp_server_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>local__tcp__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="local__tcp__server__endpoint__impl_8hpp" name="local_tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_tcp_server_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl__receive__op_8hpp" name="local_server_endpoint_impl_receive_op.hpp" local="yes" imported="no">../include/local_server_endpoint_impl_receive_op.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="assign__client__command_8hpp" name="assign_client_command.hpp" local="yes" imported="no">../../protocol/include/assign_client_command.hpp</includes>
    <includes id="assign__client__ack__command_8hpp" name="assign_client_ack_command.hpp" local="yes" imported="no">../../protocol/include/assign_client_ack_command.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../../security/include/policy_manager_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>local_uds_client_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>local__uds__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="credentials_8hpp" name="credentials.hpp" local="yes" imported="no">../include/credentials.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="local__uds__client__endpoint__impl_8hpp" name="local_uds_client_endpoint_impl.hpp" local="yes" imported="no">../include/local_uds_client_endpoint_impl.hpp</includes>
    <includes id="local__uds__server__endpoint__impl_8hpp" name="local_uds_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_uds_server_endpoint_impl.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>local_uds_server_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>local__uds__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="credentials_8hpp" name="credentials.hpp" local="yes" imported="no">../include/credentials.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="local__uds__server__endpoint__impl_8hpp" name="local_uds_server_endpoint_impl.hpp" local="yes" imported="no">../include/local_uds_server_endpoint_impl.hpp</includes>
    <includes id="local__server__endpoint__impl__receive__op_8hpp" name="local_server_endpoint_impl_receive_op.hpp" local="yes" imported="no">../include/local_server_endpoint_impl_receive_op.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="assign__client__command_8hpp" name="assign_client_command.hpp" local="yes" imported="no">../../protocol/include/assign_client_command.hpp</includes>
    <includes id="assign__client__ack__command_8hpp" name="assign_client_ack_command.hpp" local="yes" imported="no">../../protocol/include/assign_client_ack_command.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../../security/include/policy_manager_impl.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>netlink_connector.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>netlink__connector_8cpp.html</filename>
  </compound>
  <compound kind="file">
    <name>quic_client_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>quic__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="quic__client__endpoint__impl_8hpp" name="quic_client_endpoint_impl.hpp" local="yes" imported="no">../include/quic_client_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>server_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>server__endpoint__impl_8cpp.html</filename>
    <includes id="stream__protocol__ext_8hpp" name="stream_protocol_ext.hpp" local="no" imported="no">boost/asio/local/stream_protocol_ext.hpp</includes>
    <includes id="udp__ext_8hpp" name="udp_ext.hpp" local="no" imported="no">boost/asio/ip/udp_ext.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="server__endpoint__impl_8hpp" name="server_endpoint_impl.hpp" local="yes" imported="no">../include/server_endpoint_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tcp_client_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>tcp__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="tcp__client__endpoint__impl_8hpp" name="tcp_client_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_client_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tcp_server_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>tcp__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>tp.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>tp_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>tp_message.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>tp__message_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="tp__message_8hpp" name="tp_message.hpp" local="yes" imported="no">../include/tp_message.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>tp_reassembler.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>tp__reassembler_8cpp.html</filename>
    <includes id="tp__reassembler_8hpp" name="tp_reassembler.hpp" local="yes" imported="no">../include/tp_reassembler.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::tp</namespace>
  </compound>
  <compound kind="file">
    <name>udp_client_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>udp__client__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="udp__client__endpoint__impl_8hpp" name="udp_client_endpoint_impl.hpp" local="yes" imported="no">../include/udp_client_endpoint_impl.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>udp_server_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>udp__server__endpoint__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../include/endpoint_definition.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../include/endpoint_host.hpp</includes>
    <includes id="tp_8hpp" name="tp.hpp" local="yes" imported="no">../include/tp.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../include/udp_server_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl__receive__op_8hpp" name="udp_server_endpoint_impl_receive_op.hpp" local="yes" imported="no">../include/udp_server_endpoint_impl_receive_op.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../../routing/include/routing_host.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>virtual_server_endpoint_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/endpoints/src/</path>
    <filename>virtual__server__endpoint__impl_8cpp.html</filename>
    <includes id="virtual__server__endpoint__impl_8hpp" name="virtual_server_endpoint_impl.hpp" local="yes" imported="no">../include/virtual_server_endpoint_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>basic_datagram_socket_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/</path>
    <filename>basic__datagram__socket__ext_8hpp.html</filename>
    <includes id="datagram__socket__service__ext_8hpp" name="datagram_socket_service_ext.hpp" local="no" imported="no">boost/asio/datagram_socket_service_ext.hpp</includes>
    <includes id="handler__type__requirements__ext_8hpp" name="handler_type_requirements_ext.hpp" local="no" imported="no">boost/asio/detail/handler_type_requirements_ext.hpp</includes>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_socket_acceptor_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/</path>
    <filename>basic__socket__acceptor__ext_8hpp.html</filename>
    <includes id="socket__acceptor__service__ext_8hpp" name="socket_acceptor_service_ext.hpp" local="no" imported="no">boost/asio/socket_acceptor_service_ext.hpp</includes>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>basic_stream_socket_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/</path>
    <filename>basic__stream__socket__ext_8hpp.html</filename>
    <includes id="handler__type__requirements__ext__local_8hpp" name="handler_type_requirements_ext_local.hpp" local="no" imported="no">boost/asio/detail/handler_type_requirements_ext_local.hpp</includes>
    <includes id="stream__socket__service__ext_8hpp" name="stream_socket_service_ext.hpp" local="no" imported="no">boost/asio/stream_socket_service_ext.hpp</includes>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>datagram_socket_service_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/</path>
    <filename>datagram__socket__service__ext_8hpp.html</filename>
    <includes id="reactive__socket__service__ext_8hpp" name="reactive_socket_service_ext.hpp" local="yes" imported="no">detail/reactive_socket_service_ext.hpp</includes>
    <class kind="class">boost::asio::datagram_socket_service_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>handler__type__requirements__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_UNUSED_TYPEDEF</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ab0eb5ce2950e36264981173b498b43ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a475b43deae177ad7ef02d87a0ff998a0</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a764e47b61f0cd2beb9bebfb5059c5b1f</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ACCEPT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2d8ef139e56d124b3d3b6d631b8578ef</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPOSED_CONNECT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a0b2946595427a0af196527121f315064</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>ad6008561c7ea467854b30b5f2a4d3272</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler_type_requirements_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>handler__type__requirements__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ENABLE_HANDLER_TYPE_REQUIREMENTS</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a6fca1c78ae7b504d8f7632002d2b6577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_UNUSED_TYPEDEF</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ab0eb5ce2950e36264981173b498b43ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDLER_TYPE_REQUIREMENTS_ASSERT</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a5c897fe9bede8106daa699dbf42653a9</anchor>
      <arglist>(expr, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPLETION_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a475b43deae177ad7ef02d87a0ff998a0</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_READ_HANDLER_CHECK_EXT_LOCAL</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ace6498603d87493135329cbce71b699b</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WRITE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad5f96d0b73a5b5b6aecb25de2eeee308</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_ACCEPT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2d8ef139e56d124b3d3b6d631b8578ef</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_CONNECT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a2fbeb71dfc459e33a66697ba5c66c884</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_COMPOSED_CONNECT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a0b2946595427a0af196527121f315064</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_RESOLVE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>ad6008561c7ea467854b30b5f2a4d3272</anchor>
      <arglist>(handler_type, handler, iter_type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_WAIT_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3abc5fafa677842c5d590719f484cbd3</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SIGNAL_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a42d64d2fbde5b7162c10dcc853078000</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>accc15c7365c835b29fc28170c65bae3e</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_BUFFERED_HANDSHAKE_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>af712c7d0d8b46db6f596db69d119a4ab</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_SHUTDOWN_HANDLER_CHECK</name>
      <anchorfile>handler__type__requirements__ext__local_8hpp.html</anchorfile>
      <anchor>a3a928086915184c52b1f6acba703df59</anchor>
      <arglist>(handler_type, handler)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.ipp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/impl/</path>
    <filename>reactive__socket__service__base__ext_8ipp.html</filename>
    <includes id="reactive__socket__service__base__ext_8hpp" name="reactive_socket_service_base_ext.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_service_base_ext.hpp</includes>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_IPP</name>
      <anchorfile>reactive__socket__service__base__ext_8ipp.html</anchorfile>
      <anchor>a780d4839eced668c526c5dcf19952266</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.ipp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/impl/</path>
    <filename>reactive__socket__service__base__ext__local_8ipp.html</filename>
    <includes id="reactive__socket__service__base__ext__local_8hpp" name="reactive_socket_service_base_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_service_base_ext_local.hpp</includes>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_EXT_LOCAL_IPP</name>
      <anchorfile>reactive__socket__service__base__ext__local_8ipp.html</anchorfile>
      <anchor>a8451183d29ec33bf4aa35f6be0782a85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.ipp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/impl/</path>
    <filename>socket__ops__ext_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_IPP</name>
      <anchorfile>socket__ops__ext_8ipp.html</anchorfile>
      <anchor>a92419c788c544309f61beb6985b56041</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.ipp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/impl/</path>
    <filename>socket__ops__ext__local_8ipp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BOOST_ASIO_DETAIL_SOCKET_OPS_EXT_LOCAL_IPP</name>
      <anchorfile>socket__ops__ext__local_8ipp.html</anchorfile>
      <anchor>ad7d50c21de8248ef91d2078309b14e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__recv__op__ext_8hpp.html</filename>
    <includes id="reactor__op__ext_8hpp" name="reactor_op_ext.hpp" local="no" imported="no">boost/asio/detail/reactor_op_ext.hpp</includes>
    <includes id="socket__ops__ext_8hpp" name="socket_ops_ext.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recv_op_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__recv__op__ext__local_8hpp.html</filename>
    <includes id="reactor__op__ext__local_8hpp" name="reactor_op_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactor_op_ext_local.hpp</includes>
    <includes id="socket__ops__ext__local_8hpp" name="socket_ops_ext_local.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext_local.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__recvfrom__op__ext_8hpp.html</filename>
    <includes id="reactor__op__ext_8hpp" name="reactor_op_ext.hpp" local="no" imported="no">boost/asio/detail/reactor_op_ext.hpp</includes>
    <includes id="socket__ops__ext_8hpp" name="socket_ops_ext.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvfrom_op_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__recvfrom__op__ext__local_8hpp.html</filename>
    <includes id="reactor__op__ext__local_8hpp" name="reactor_op_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactor_op_ext_local.hpp</includes>
    <includes id="socket__ops__ext__local_8hpp" name="socket_ops_ext_local.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext_local.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__recvmsg__op__ext_8hpp.html</filename>
    <includes id="reactor__op__ext_8hpp" name="reactor_op_ext.hpp" local="no" imported="no">boost/asio/detail/reactor_op_ext.hpp</includes>
    <includes id="socket__ops__ext_8hpp" name="socket_ops_ext.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_recvmsg_op_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__recvmsg__op__ext__local_8hpp.html</filename>
    <includes id="reactor__op__ext__local_8hpp" name="reactor_op_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactor_op_ext_local.hpp</includes>
    <includes id="socket__ops__ext__local_8hpp" name="socket_ops_ext_local.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext_local.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__service__base__ext_8hpp.html</filename>
    <includes id="reactive__socket__recv__op__ext_8hpp" name="reactive_socket_recv_op_ext.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_recv_op_ext.hpp</includes>
    <includes id="reactive__socket__recvmsg__op__ext_8hpp" name="reactive_socket_recvmsg_op_ext.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_recvmsg_op_ext.hpp</includes>
    <includes id="socket__ops__ext_8hpp" name="socket_ops_ext.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_base_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__service__base__ext__local_8hpp.html</filename>
    <includes id="reactive__socket__recv__op__ext__local_8hpp" name="reactive_socket_recv_op_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_recv_op_ext_local.hpp</includes>
    <includes id="reactive__socket__recvmsg__op__ext__local_8hpp" name="reactive_socket_recvmsg_op_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_recvmsg_op_ext_local.hpp</includes>
    <includes id="socket__ops__ext__local_8hpp" name="socket_ops_ext_local.hpp" local="no" imported="no">boost/asio/detail/socket_ops_ext_local.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__service__ext_8hpp.html</filename>
    <includes id="reactive__socket__recvfrom__op__ext_8hpp" name="reactive_socket_recvfrom_op_ext.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_recvfrom_op_ext.hpp</includes>
    <includes id="reactive__socket__service__base__ext_8hpp" name="reactive_socket_service_base_ext.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_service_base_ext.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactive_socket_service_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactive__socket__service__ext__local_8hpp.html</filename>
    <includes id="reactive__socket__recvfrom__op__ext__local_8hpp" name="reactive_socket_recvfrom_op_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_recvfrom_op_ext_local.hpp</includes>
    <includes id="reactive__socket__service__base__ext__local_8hpp" name="reactive_socket_service_base_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_service_base_ext_local.hpp</includes>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactor__op__ext_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>reactor_op_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>reactor__op__ext__local_8hpp.html</filename>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>socket__ops__ext_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>socket_ops_ext_local.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/detail/</path>
    <filename>socket__ops__ext__local_8hpp.html</filename>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>udp_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/ip/</path>
    <filename>udp__ext_8hpp.html</filename>
    <includes id="basic__datagram__socket__ext_8hpp" name="basic_datagram_socket_ext.hpp" local="no" imported="no">boost/asio/basic_datagram_socket_ext.hpp</includes>
    <class kind="class">boost::asio::ip::udp_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
    <namespace>boost::asio::ip</namespace>
  </compound>
  <compound kind="file">
    <name>stream_protocol_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/local/</path>
    <filename>stream__protocol__ext_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>socket_acceptor_service_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/</path>
    <filename>socket__acceptor__service__ext_8hpp.html</filename>
    <includes id="reactive__socket__service__ext_8hpp" name="reactive_socket_service_ext.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_service_ext.hpp</includes>
    <class kind="class">boost::asio::socket_acceptor_service_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>stream_socket_service_ext.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/helper/boost/asio/</path>
    <filename>stream__socket__service__ext_8hpp.html</filename>
    <includes id="reactive__socket__service__ext__local_8hpp" name="reactive_socket_service_ext_local.hpp" local="no" imported="no">boost/asio/detail/reactive_socket_service_ext_local.hpp</includes>
    <class kind="class">boost::asio::stream_socket_service_ext</class>
    <namespace>boost</namespace>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="file">
    <name>logger_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/logger/include/</path>
    <filename>logger__impl_8hpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <class kind="class">vsomeip_v3::logger::logger_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
  </compound>
  <compound kind="file">
    <name>logger_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/logger/src/</path>
    <filename>logger__impl_8cpp.html</filename>
    <includes id="logger__impl_8hpp" name="logger_impl.hpp" local="yes" imported="no">../include/logger_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
  </compound>
  <compound kind="file">
    <name>message.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/logger/src/</path>
    <filename>message_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="logger__impl_8hpp" name="logger_impl.hpp" local="yes" imported="no">../include/logger_impl.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/include/</path>
    <filename>message_2include_2deserializer_8hpp.html</filename>
    <class kind="class">vsomeip_v3::deserializer</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>service__discovery_2include_2deserializer_8hpp.html</filename>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <class kind="class">vsomeip_v3::sd::deserializer</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_header_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/include/</path>
    <filename>message__header__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::message_header_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serializer.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/include/</path>
    <filename>serializer_8hpp.html</filename>
    <class kind="class">vsomeip_v3::serializer</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/src/</path>
    <filename>message_2src_2deserializer_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>deserializer.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>service__discovery_2src_2deserializer_8cpp.html</filename>
    <includes id="service__discovery_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_header_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/src/</path>
    <filename>message__header__impl_8cpp.html</filename>
    <includes id="message_2include_2message__base__impl_8hpp" name="message_base_impl.hpp" local="yes" imported="no">../include/message_base_impl.hpp</includes>
    <includes id="message__header__impl_8hpp" name="message_header_impl.hpp" local="yes" imported="no">../include/message_header_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../include/serializer.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serializer.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/message/src/</path>
    <filename>serializer_8cpp.html</filename>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../include/serializer.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/plugin/include/</path>
    <filename>plugin__manager_8hpp.html</filename>
    <class kind="class">vsomeip_v3::plugin_manager</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/plugin/include/</path>
    <filename>plugin__manager__impl_8hpp.html</filename>
    <includes id="plugin__manager_8hpp" name="plugin_manager.hpp" local="yes" imported="no">../include/plugin_manager.hpp</includes>
    <class kind="class">vsomeip_v3::plugin_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/plugin/src/</path>
    <filename>plugin__manager_8cpp.html</filename>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../include/plugin_manager_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/plugin/src/</path>
    <filename>plugin__manager__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../include/plugin_manager_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>assign_client_ack_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>assign__client__ack__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::assign_client_ack_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>assign_client_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>assign__client__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::assign_client_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>command_8hpp.html</filename>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">protocol.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>command_size_t</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>acbc61f20deda0f11d1b4961b920a4c78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>deregister_application_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>deregister__application__command_8hpp.html</filename>
    <includes id="simple__command_8hpp" name="simple_command.hpp" local="yes" imported="no">simple_command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::deregister_application_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>distribute_security_policies_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>distribute__security__policies__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::distribute_security_policies_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>dummy_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>dummy__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::dummy_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>expire_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>expire__command_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <includes id="subscribe__command__base_8hpp" name="subscribe_command_base.hpp" local="yes" imported="no">subscribe_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::expire_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>multiple_services_command_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>multiple__services__command__base_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::multiple_services_command_base</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>offer_service_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>offer__service__command_8hpp.html</filename>
    <includes id="service__command__base_8hpp" name="service_command_base.hpp" local="yes" imported="no">service_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::offer_service_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>offered_services_request_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>offered__services__request__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::offered_services_request_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>offered_services_response_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>offered__services__response__command_8hpp.html</filename>
    <includes id="multiple__services__command__base_8hpp" name="multiple_services_command_base.hpp" local="yes" imported="no">multiple_services_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::offered_services_response_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>ping_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>ping__command_8hpp.html</filename>
    <includes id="simple__command_8hpp" name="simple_command.hpp" local="yes" imported="no">simple_command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::ping_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>pong_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>pong__command_8hpp.html</filename>
    <includes id="simple__command_8hpp" name="simple_command.hpp" local="yes" imported="no">simple_command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::pong_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>protocol.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>protocol_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::protocol::service</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>version_t</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>af8269196c710df6235c400d069aeaf11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>pending_id_t</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>abc679bc5cdaec18ea0cbc2d274855ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>id_e</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>aef318840e08dccb6f5bc465be27d58e8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a1ed0b91db36fee7bc6d4626cce5d6bc9">ASSIGN_CLIENT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ab2e138d10d95e18c58d614341a98ea2a">ASSIGN_CLIENT_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aab5307a5cce6b3d698c043d362ba5b45">REGISTER_APPLICATION_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a6d213fbb93a4c1bf1c64a0e33004a6f3">DEREGISTER_APPLICATION_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aa483e3552f794c4cf4adcde46a1ef3dc">ROUTING_INFO_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a082ef15d0fe4aba0917ef744a4d3b506">REGISTERED_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a801f595ef8b7429ddcf19d381745eed5">PING_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a042baff19cb466d6403798c6bf4aaad7">PONG_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a9fed144f5ea9f8831eb4f98cf5083c67">OFFER_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a2296fe8b237ee3674c2a26133458809a">STOP_OFFER_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a6bbf508c1fb43de3d70cfe595cac99a7">SUBSCRIBE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a2220b7f426b5de5d17b69eff157e8a39">UNSUBSCRIBE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a0f723a121fd5ccb3a5d42afefee66b55">REQUEST_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8abe736e6dac670241b61d80ac0a2ba809">RELEASE_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ac701fdbf710ca92661e1a360926f126f">SUBSCRIBE_NACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a99f04c7c341ddc90309ad528c329c608">SUBSCRIBE_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a27376b4f8a7503406dfc32a12b5f757f">SEND_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a10c9845f725d0799e87c8abd6ad6e6b3">NOTIFY_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a84d44bd5f0d50410bae4db7cda5fd599">NOTIFY_ONE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aabd83165b52f24e0087648a56bf584f9">REGISTER_EVENT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a5c040b1523b4306b16bf277a0c1e8d0f">UNREGISTER_EVENT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aef33e97c09d0cbae56ace59f6f0d9f0a">ID_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8abc12a41db46b5bc4e2a7be7666189695">ID_REQUEST_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a72834309f8572ae9f79de08d4e39b53f">OFFERED_SERVICES_REQUEST_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a666806014d5aef27c3029033d93a4e8c">OFFERED_SERVICES_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8af087d95ab3292721f92580a467a96be7">UNSUBSCRIBE_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ac69236c5daabe1d152d4d9345ca75597">RESEND_PROVIDED_EVENTS_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ac7acd75705ace2de43a234e37f8f5e6b">UPDATE_SECURITY_POLICY_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ae76ad776f7c8e43904778c2c6b8f4a6e">UPDATE_SECURITY_POLICY_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a9f3ee6066d5db264d426ce757de83704">REMOVE_SECURITY_POLICY_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8abb8529fd4140f6f77b4ca002ae5596cd">REMOVE_SECURITY_POLICY_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8adb587d4dd0408e236a475bbd6e5c37af">UPDATE_SECURITY_CREDENTIALS_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a03211a177cf25df274725d93d508e5d9">DISTRIBUTE_SECURITY_POLICIES_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a5739739fd1e03134822c31ccc2669f0b">UPDATE_SECURITY_POLICY_INT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a608e7b35dacac842327e87df17b048af">EXPIRE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a81be78f0057ac396f156748a1cbf6b5c">SUSPEND_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a3f5ab1c7fd2be668e8c9a55bd73616b0">UNKNOWN_ID</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>error_e</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>a146e1b9ce083a956011ceb2aa71efa49</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a116bc13a641cb83da5b58aa4c4bf36af">ERROR_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a54af33a7a465862345a7e500321e0cbf">ERROR_NOT_ENOUGH_BYTES</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a5f89835081283aa7332964ffe94e0ace">ERROR_MAX_COMMAND_SIZE_EXCEEDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a2319c4de4d710219745cc613435e0d5b">ERROR_MISMATCH</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a70f6b5dfffbfbe4ba3df428c69e9d038">ERROR_MALFORMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49ac0f2080ee88859d1833da7813e886eab">ERROR_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a0a306e577f7923ac78d86a60bee66966">ERROR_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>a021d529d77feeef28aeb0e30f23eb7e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6a9f3b3d0437a987598f0fb2649e086fa6">RIE_ADD_CLIENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6a2a0899344a0745e6b75848a8fe9077ff">RIE_DELETE_CLIENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6a3a918320277b74cb5b0727d0e18a1549">RIE_ADD_SERVICE_INSTANCE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6ad54803ba88a9b09f8e72e55a54e4aefc">RIE_DELETE_SERVICE_INSTANCE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6aa3132199267bc181a8cbd8f8a173f32a">RIE_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>register_application_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>register__application__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::register_application_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>register_event.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>register__event_8hpp.html</filename>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">protocol.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::register_event</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>register_events_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>register__events__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <includes id="register__event_8hpp" name="register_event.hpp" local="yes" imported="no">register_event.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::register_events_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>registered_ack_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>registered__ack__command_8hpp.html</filename>
    <includes id="simple__command_8hpp" name="simple_command.hpp" local="yes" imported="no">simple_command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::registered_ack_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>release_service_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>release__service__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::release_service_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>remove_security_policy_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>remove__security__policy__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::remove_security_policy_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>remove_security_policy_response_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>remove__security__policy__response__command_8hpp.html</filename>
    <includes id="security__policy__response__command__base_8hpp" name="security_policy_response_command_base.hpp" local="yes" imported="no">security_policy_response_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::remove_security_policy_response_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>request_service_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>request__service__command_8hpp.html</filename>
    <includes id="multiple__services__command__base_8hpp" name="multiple_services_command_base.hpp" local="yes" imported="no">multiple_services_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::request_service_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>resend_provided_events_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>resend__provided__events__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::resend_provided_events_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>routing_info_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>routing__info__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <includes id="routing__info__entry_8hpp" name="routing_info_entry.hpp" local="yes" imported="no">routing_info_entry.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::routing_info_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>routing_info_entry.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>routing__info__entry_8hpp.html</filename>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">protocol.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::routing_info_entry</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>security_policy_response_command_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>security__policy__response__command__base_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::security_policy_response_command_base</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>send_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>send__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::send_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>service_command_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>service__command__base_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::service_command_base</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>simple_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>simple__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::simple_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>stop_offer_service_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>stop__offer__service__command_8hpp.html</filename>
    <includes id="service__command__base_8hpp" name="service_command_base.hpp" local="yes" imported="no">service_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::stop_offer_service_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_ack_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>subscribe__ack__command_8hpp.html</filename>
    <includes id="subscribe__ack__command__base_8hpp" name="subscribe_ack_command_base.hpp" local="yes" imported="no">subscribe_ack_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::subscribe_ack_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_ack_command_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>subscribe__ack__command__base_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::subscribe_ack_command_base</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>subscribe__command_8hpp.html</filename>
    <includes id="subscribe__command__base_8hpp" name="subscribe_command_base.hpp" local="yes" imported="no">subscribe_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::subscribe_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_command_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>subscribe__command__base_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::subscribe_command_base</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_nack_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>subscribe__nack__command_8hpp.html</filename>
    <includes id="subscribe__ack__command__base_8hpp" name="subscribe_ack_command_base.hpp" local="yes" imported="no">subscribe_ack_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::subscribe_nack_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>suspend_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>suspend__command_8hpp.html</filename>
    <includes id="simple__command_8hpp" name="simple_command.hpp" local="yes" imported="no">simple_command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::suspend_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>unregister_event_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>unregister__event__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::unregister_event_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>unsubscribe_ack_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>unsubscribe__ack__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::unsubscribe_ack_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>unsubscribe_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>unsubscribe__command_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <includes id="subscribe__command__base_8hpp" name="subscribe_command_base.hpp" local="yes" imported="no">subscribe_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::unsubscribe_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>update_security_credentials_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>update__security__credentials__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::update_security_credentials_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>update_security_policy_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>update__security__policy__command_8hpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">command.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::update_security_policy_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>update_security_policy_response_command.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/include/</path>
    <filename>update__security__policy__response__command_8hpp.html</filename>
    <includes id="security__policy__response__command__base_8hpp" name="security_policy_response_command_base.hpp" local="yes" imported="no">security_policy_response_command_base.hpp</includes>
    <class kind="class">vsomeip_v3::protocol::update_security_policy_response_command</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>assign_client_ack_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>assign__client__ack__command_8cpp.html</filename>
    <includes id="assign__client__ack__command_8hpp" name="assign_client_ack_command.hpp" local="yes" imported="no">../include/assign_client_ack_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>assign_client_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>assign__client__command_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="assign__client__command_8hpp" name="assign_client_command.hpp" local="yes" imported="no">../include/assign_client_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>command_8cpp.html</filename>
    <includes id="command_8hpp" name="command.hpp" local="yes" imported="no">../include/command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>deregister_application_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>deregister__application__command_8cpp.html</filename>
    <includes id="deregister__application__command_8hpp" name="deregister_application_command.hpp" local="yes" imported="no">../include/deregister_application_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>distribute_security_policies_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>distribute__security__policies__command_8cpp.html</filename>
    <includes id="distribute__security__policies__command_8hpp" name="distribute_security_policies_command.hpp" local="yes" imported="no">../include/distribute_security_policies_command.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>dummy_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>dummy__command_8cpp.html</filename>
    <includes id="dummy__command_8hpp" name="dummy_command.hpp" local="yes" imported="no">../include/dummy_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>expire_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>expire__command_8cpp.html</filename>
    <includes id="expire__command_8hpp" name="expire_command.hpp" local="yes" imported="no">../include/expire_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>multiple_services_command_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>multiple__services__command__base_8cpp.html</filename>
    <includes id="multiple__services__command__base_8hpp" name="multiple_services_command_base.hpp" local="yes" imported="no">../include/multiple_services_command_base.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>offer_service_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>offer__service__command_8cpp.html</filename>
    <includes id="offer__service__command_8hpp" name="offer_service_command.hpp" local="yes" imported="no">../include/offer_service_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>offered_services_request_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>offered__services__request__command_8cpp.html</filename>
    <includes id="offered__services__request__command_8hpp" name="offered_services_request_command.hpp" local="yes" imported="no">../include/offered_services_request_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>offered_services_response_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>offered__services__response__command_8cpp.html</filename>
    <includes id="offered__services__response__command_8hpp" name="offered_services_response_command.hpp" local="yes" imported="no">../include/offered_services_response_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>ping_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>ping__command_8cpp.html</filename>
    <includes id="ping__command_8hpp" name="ping_command.hpp" local="yes" imported="no">../include/ping_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>pong_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>pong__command_8cpp.html</filename>
    <includes id="pong__command_8hpp" name="pong_command.hpp" local="yes" imported="no">../include/pong_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>register_application_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>register__application__command_8cpp.html</filename>
    <includes id="register__application__command_8hpp" name="register_application_command.hpp" local="yes" imported="no">../include/register_application_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>register_event.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>register__event_8cpp.html</filename>
    <includes id="register__event_8hpp" name="register_event.hpp" local="yes" imported="no">../include/register_event.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>register_events_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>register__events__command_8cpp.html</filename>
    <includes id="register__events__command_8hpp" name="register_events_command.hpp" local="yes" imported="no">../include/register_events_command.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>registered_ack_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>registered__ack__command_8cpp.html</filename>
    <includes id="registered__ack__command_8hpp" name="registered_ack_command.hpp" local="yes" imported="no">../include/registered_ack_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>release_service_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>release__service__command_8cpp.html</filename>
    <includes id="release__service__command_8hpp" name="release_service_command.hpp" local="yes" imported="no">../include/release_service_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>remove_security_policy_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>remove__security__policy__command_8cpp.html</filename>
    <includes id="remove__security__policy__command_8hpp" name="remove_security_policy_command.hpp" local="yes" imported="no">../include/remove_security_policy_command.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>remove_security_policy_response_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>remove__security__policy__response__command_8cpp.html</filename>
    <includes id="remove__security__policy__response__command_8hpp" name="remove_security_policy_response_command.hpp" local="yes" imported="no">../include/remove_security_policy_response_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>request_service_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>request__service__command_8cpp.html</filename>
    <includes id="request__service__command_8hpp" name="request_service_command.hpp" local="yes" imported="no">../include/request_service_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>resend_provided_events_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>resend__provided__events__command_8cpp.html</filename>
    <includes id="resend__provided__events__command_8hpp" name="resend_provided_events_command.hpp" local="yes" imported="no">../include/resend_provided_events_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>routing_info_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>routing__info__command_8cpp.html</filename>
    <includes id="routing__info__command_8hpp" name="routing_info_command.hpp" local="yes" imported="no">../include/routing_info_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>routing_info_entry.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>routing__info__entry_8cpp.html</filename>
    <includes id="routing__info__entry_8hpp" name="routing_info_entry.hpp" local="yes" imported="no">../include/routing_info_entry.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>security_policy_response_command_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>security__policy__response__command__base_8cpp.html</filename>
    <includes id="security__policy__response__command__base_8hpp" name="security_policy_response_command_base.hpp" local="yes" imported="no">../include/security_policy_response_command_base.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>send_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>send__command_8cpp.html</filename>
    <includes id="send__command_8hpp" name="send_command.hpp" local="yes" imported="no">../include/send_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>service_command_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>service__command__base_8cpp.html</filename>
    <includes id="service__command__base_8hpp" name="service_command_base.hpp" local="yes" imported="no">../include/service_command_base.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>simple_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>simple__command_8cpp.html</filename>
    <includes id="simple__command_8hpp" name="simple_command.hpp" local="yes" imported="no">../include/simple_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>stop_offer_service_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>stop__offer__service__command_8cpp.html</filename>
    <includes id="stop__offer__service__command_8hpp" name="stop_offer_service_command.hpp" local="yes" imported="no">../include/stop_offer_service_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_ack_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>subscribe__ack__command_8cpp.html</filename>
    <includes id="subscribe__ack__command_8hpp" name="subscribe_ack_command.hpp" local="yes" imported="no">../include/subscribe_ack_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_ack_command_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>subscribe__ack__command__base_8cpp.html</filename>
    <includes id="subscribe__ack__command__base_8hpp" name="subscribe_ack_command_base.hpp" local="yes" imported="no">../include/subscribe_ack_command_base.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>subscribe__command_8cpp.html</filename>
    <includes id="subscribe__command_8hpp" name="subscribe_command.hpp" local="yes" imported="no">../include/subscribe_command.hpp</includes>
    <includes id="debounce__filter__impl_8hpp" name="debounce_filter_impl.hpp" local="yes" imported="no">../../configuration/include/debounce_filter_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_command_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>subscribe__command__base_8cpp.html</filename>
    <includes id="subscribe__command__base_8hpp" name="subscribe_command_base.hpp" local="yes" imported="no">../include/subscribe_command_base.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>subscribe_nack_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>subscribe__nack__command_8cpp.html</filename>
    <includes id="subscribe__nack__command_8hpp" name="subscribe_nack_command.hpp" local="yes" imported="no">../include/subscribe_nack_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>suspend_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>suspend__command_8cpp.html</filename>
    <includes id="suspend__command_8hpp" name="suspend_command.hpp" local="yes" imported="no">../include/suspend_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>unregister_event_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>unregister__event__command_8cpp.html</filename>
    <includes id="unregister__event__command_8hpp" name="unregister_event_command.hpp" local="yes" imported="no">../include/unregister_event_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>unsubscribe_ack_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>unsubscribe__ack__command_8cpp.html</filename>
    <includes id="unsubscribe__ack__command_8hpp" name="unsubscribe_ack_command.hpp" local="yes" imported="no">../include/unsubscribe_ack_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>unsubscribe_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>unsubscribe__command_8cpp.html</filename>
    <includes id="unsubscribe__command_8hpp" name="unsubscribe_command.hpp" local="yes" imported="no">../include/unsubscribe_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>update_security_credentials_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>update__security__credentials__command_8cpp.html</filename>
    <includes id="update__security__credentials__command_8hpp" name="update_security_credentials_command.hpp" local="yes" imported="no">../include/update_security_credentials_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>update_security_policy_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>update__security__policy__command_8cpp.html</filename>
    <includes id="update__security__policy__command_8hpp" name="update_security_policy_command.hpp" local="yes" imported="no">../include/update_security_policy_command.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>update_security_policy_response_command.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/protocol/src/</path>
    <filename>update__security__policy__response__command_8cpp.html</filename>
    <includes id="update__security__policy__response__command_8hpp" name="update_security_policy_response_command.hpp" local="yes" imported="no">../include/update_security_policy_response_command.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroupinfo.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>eventgroupinfo_8hpp.html</filename>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">remote_subscription.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::eventgroupinfo</class>
    <class kind="struct">vsomeip_v3::eventgroupinfo::subscription_t</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>function_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>implementation_2routing_2include_2function__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)&gt;</type>
      <name>remote_subscription_callback_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aeae38dc6731cdbc54ee5da00e0684908</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>function_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2function__types_8hpp.html</filename>
    <namespace>vsomeip</namespace>
    <member kind="typedef">
      <type>std::function&lt; bool(const std::shared_ptr&lt; payload &gt; &amp;, const std::shared_ptr&lt; payload &gt; &amp;) &gt;</type>
      <name>epsilon_change_func_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2164b482d86f9722cb8cc228782e09a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>function_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2function__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>remote__subscription_8hpp.html</filename>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::remote_subscription</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>const remote_subscription_id_t</type>
      <name>PENDING_SUBSCRIPTION_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a237277afbce9b6ac0469a20b314f6c92</anchor>
      <arglist>(0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>routing_host.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__host_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <class kind="class">vsomeip_v3::routing_host</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager_8hpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="debounce__filter__impl_8hpp" name="debounce_filter_impl.hpp" local="yes" imported="no">../../configuration/include/debounce_filter_impl.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>routing__manager_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>routing_manager_adapter.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__adapter_8hpp.html</filename>
    <class kind="class">vsomeip_v3::routing_manager_adapter</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__base_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">event.hpp</includes>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">serviceinfo.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">routing_host.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">eventgroupinfo.hpp</includes>
    <includes id="routing__manager_8hpp" name="routing_manager.hpp" local="yes" imported="no">routing_manager.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">routing_manager_host.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint__manager__base_8hpp" name="endpoint_manager_base.hpp" local="yes" imported="no">../../endpoints/include/endpoint_manager_base.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_base</class>
    <class kind="struct">vsomeip_v3::routing_manager_base::subscription_data_t</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_client.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__client_8hpp.html</filename>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">routing_manager_base.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_client</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_host.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__host_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <class kind="class">vsomeip_v3::routing_manager_host</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>routing__manager__host_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>routing_manager_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__impl_8hpp.html</filename>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">routing_manager_base.hpp</includes>
    <includes id="routing__manager__stub__host_8hpp" name="routing_manager_stub_host.hpp" local="yes" imported="no">routing_manager_stub_host.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="netlink__connector_8hpp" name="netlink_connector.hpp" local="yes" imported="no">../../endpoints/include/netlink_connector.hpp</includes>
    <includes id="service__discovery__host_8hpp" name="service_discovery_host.hpp" local="yes" imported="no">../../service_discovery/include/service_discovery_host.hpp</includes>
    <includes id="endpoint__manager__impl_8hpp" name="endpoint_manager_impl.hpp" local="yes" imported="no">../../endpoints/include/endpoint_manager_impl.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_stub.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__stub_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <includes id="routing__host_8hpp" name="routing_host.hpp" local="yes" imported="no">../include/routing_host.hpp</includes>
    <includes id="endpoint__host_8hpp" name="endpoint_host.hpp" local="yes" imported="no">../../endpoints/include/endpoint_host.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <includes id="routing__info__entry_8hpp" name="routing_info_entry.hpp" local="yes" imported="no">../../protocol/include/routing_info_entry.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_stub</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>routing__manager__stub_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>routing_manager_stub_host.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>routing__manager__stub__host_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">types.hpp</includes>
    <class kind="class">vsomeip_v3::routing_manager_stub_host</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>routing__manager__stub__host_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>serviceinfo.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>serviceinfo_8hpp.html</filename>
    <class kind="class">vsomeip_v3::serviceinfo</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/include/</path>
    <filename>types_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::msg_statistic_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt; &gt;</type>
      <name>services_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>add7f39a626cd3b3fccf8f246529b6869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroupinfo &gt; &gt; &gt; &gt;</type>
      <name>eventgroups_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1df98b4f5a1c523993232e38326a6289</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>remote_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ade71c41d9e426efbac70fb3c21526197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>registration_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a682d6c3fff9c7a46de81c5d234cf5179</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ad17455cfcb88a53f1603fb817e09c2d6">REGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ae0d28f8aa6e4d8744f37b7c358649374">DEREGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179a71f612d19c691b481cd9c9b1ca67cba7">DEREGISTER_ON_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>remote_subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39ec9877abaeb38f64db02fb301e189a</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa66e4694eb60b73ae43dda48a14466e0c">SUBSCRIPTION_PENDING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa70b53341292194e1dc93d6ccfacfe765">SUBSCRIPTION_ACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aab2fd439b480e15252e6d51af337f9892">SUBSCRIPTION_NACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa934bfa695a08c4a28d19053dcc33902b">SUBSCRIPTION_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aad6dfa4f648f641337fcb2f9291c94c22">SUBSCRIPTION_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>event.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>event_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="routing__manager_8hpp" name="routing_manager.hpp" local="yes" imported="no">../include/routing_manager.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="message_2include_2payload__impl_8hpp" name="payload_impl.hpp" local="yes" imported="no">../../message/include/payload_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroupinfo.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>eventgroupinfo_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">../include/eventgroupinfo.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>remote__subscription_8cpp.html</filename>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_base.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>routing__manager__base_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing__manager__base_8hpp" name="routing_manager_base.hpp" local="yes" imported="no">../include/routing_manager_base.hpp</includes>
    <includes id="debounce__filter__impl_8hpp" name="debounce_filter_impl.hpp" local="yes" imported="no">../../configuration/include/debounce_filter_impl.hpp</includes>
    <includes id="send__command_8hpp" name="send_command.hpp" local="yes" imported="no">../../protocol/include/send_command.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../../security/include/policy_manager_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_client.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>routing__manager__client_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">../include/routing_manager_host.hpp</includes>
    <includes id="routing__manager__client_8hpp" name="routing_manager_client.hpp" local="yes" imported="no">../include/routing_manager_client.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="netlink__connector_8hpp" name="netlink_connector.hpp" local="yes" imported="no">../../endpoints/include/netlink_connector.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="assign__client__command_8hpp" name="assign_client_command.hpp" local="yes" imported="no">../../protocol/include/assign_client_command.hpp</includes>
    <includes id="assign__client__ack__command_8hpp" name="assign_client_ack_command.hpp" local="yes" imported="no">../../protocol/include/assign_client_ack_command.hpp</includes>
    <includes id="deregister__application__command_8hpp" name="deregister_application_command.hpp" local="yes" imported="no">../../protocol/include/deregister_application_command.hpp</includes>
    <includes id="distribute__security__policies__command_8hpp" name="distribute_security_policies_command.hpp" local="yes" imported="no">../../protocol/include/distribute_security_policies_command.hpp</includes>
    <includes id="dummy__command_8hpp" name="dummy_command.hpp" local="yes" imported="no">../../protocol/include/dummy_command.hpp</includes>
    <includes id="expire__command_8hpp" name="expire_command.hpp" local="yes" imported="no">../../protocol/include/expire_command.hpp</includes>
    <includes id="offer__service__command_8hpp" name="offer_service_command.hpp" local="yes" imported="no">../../protocol/include/offer_service_command.hpp</includes>
    <includes id="offered__services__request__command_8hpp" name="offered_services_request_command.hpp" local="yes" imported="no">../../protocol/include/offered_services_request_command.hpp</includes>
    <includes id="offered__services__response__command_8hpp" name="offered_services_response_command.hpp" local="yes" imported="no">../../protocol/include/offered_services_response_command.hpp</includes>
    <includes id="ping__command_8hpp" name="ping_command.hpp" local="yes" imported="no">../../protocol/include/ping_command.hpp</includes>
    <includes id="pong__command_8hpp" name="pong_command.hpp" local="yes" imported="no">../../protocol/include/pong_command.hpp</includes>
    <includes id="register__application__command_8hpp" name="register_application_command.hpp" local="yes" imported="no">../../protocol/include/register_application_command.hpp</includes>
    <includes id="register__events__command_8hpp" name="register_events_command.hpp" local="yes" imported="no">../../protocol/include/register_events_command.hpp</includes>
    <includes id="registered__ack__command_8hpp" name="registered_ack_command.hpp" local="yes" imported="no">../../protocol/include/registered_ack_command.hpp</includes>
    <includes id="release__service__command_8hpp" name="release_service_command.hpp" local="yes" imported="no">../../protocol/include/release_service_command.hpp</includes>
    <includes id="remove__security__policy__command_8hpp" name="remove_security_policy_command.hpp" local="yes" imported="no">../../protocol/include/remove_security_policy_command.hpp</includes>
    <includes id="remove__security__policy__response__command_8hpp" name="remove_security_policy_response_command.hpp" local="yes" imported="no">../../protocol/include/remove_security_policy_response_command.hpp</includes>
    <includes id="request__service__command_8hpp" name="request_service_command.hpp" local="yes" imported="no">../../protocol/include/request_service_command.hpp</includes>
    <includes id="resend__provided__events__command_8hpp" name="resend_provided_events_command.hpp" local="yes" imported="no">../../protocol/include/resend_provided_events_command.hpp</includes>
    <includes id="routing__info__command_8hpp" name="routing_info_command.hpp" local="yes" imported="no">../../protocol/include/routing_info_command.hpp</includes>
    <includes id="send__command_8hpp" name="send_command.hpp" local="yes" imported="no">../../protocol/include/send_command.hpp</includes>
    <includes id="stop__offer__service__command_8hpp" name="stop_offer_service_command.hpp" local="yes" imported="no">../../protocol/include/stop_offer_service_command.hpp</includes>
    <includes id="subscribe__ack__command_8hpp" name="subscribe_ack_command.hpp" local="yes" imported="no">../../protocol/include/subscribe_ack_command.hpp</includes>
    <includes id="subscribe__command_8hpp" name="subscribe_command.hpp" local="yes" imported="no">../../protocol/include/subscribe_command.hpp</includes>
    <includes id="subscribe__nack__command_8hpp" name="subscribe_nack_command.hpp" local="yes" imported="no">../../protocol/include/subscribe_nack_command.hpp</includes>
    <includes id="unregister__event__command_8hpp" name="unregister_event_command.hpp" local="yes" imported="no">../../protocol/include/unregister_event_command.hpp</includes>
    <includes id="unsubscribe__ack__command_8hpp" name="unsubscribe_ack_command.hpp" local="yes" imported="no">../../protocol/include/unsubscribe_ack_command.hpp</includes>
    <includes id="unsubscribe__command_8hpp" name="unsubscribe_command.hpp" local="yes" imported="no">../../protocol/include/unsubscribe_command.hpp</includes>
    <includes id="update__security__credentials__command_8hpp" name="update_security_credentials_command.hpp" local="yes" imported="no">../../protocol/include/update_security_credentials_command.hpp</includes>
    <includes id="update__security__policy__command_8hpp" name="update_security_policy_command.hpp" local="yes" imported="no">../../protocol/include/update_security_policy_command.hpp</includes>
    <includes id="update__security__policy__response__command_8hpp" name="update_security_policy_response_command.hpp" local="yes" imported="no">../../protocol/include/update_security_policy_response_command.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../../service_discovery/include/runtime.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../../security/include/policy.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../../security/include/policy_manager_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>routing__manager__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../include/event.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">../include/eventgroupinfo.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="routing__manager__host_8hpp" name="routing_manager_host.hpp" local="yes" imported="no">../include/routing_manager_host.hpp</includes>
    <includes id="routing__manager__impl_8hpp" name="routing_manager_impl.hpp" local="yes" imported="no">../include/routing_manager_impl.hpp</includes>
    <includes id="routing__manager__stub_8hpp" name="routing_manager_stub.hpp" local="yes" imported="no">../include/routing_manager_stub.hpp</includes>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../include/serviceinfo.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="tcp__client__endpoint__impl_8hpp" name="tcp_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/tcp_client_endpoint_impl.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="udp__client__endpoint__impl_8hpp" name="udp_client_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/udp_client_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/udp_server_endpoint_impl.hpp</includes>
    <includes id="virtual__server__endpoint__impl_8hpp" name="virtual_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/virtual_server_endpoint_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="message_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../../message/include/message_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../../plugin/include/plugin_manager_impl.hpp</includes>
    <includes id="protocol_8hpp" name="protocol.hpp" local="yes" imported="no">../../protocol/include/protocol.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../service_discovery/include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../service_discovery/include/defines.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../../service_discovery/include/runtime.hpp</includes>
    <includes id="service__discovery_8hpp" name="service_discovery.hpp" local="yes" imported="no">../../service_discovery/include/service_discovery.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <includes id="e2e__protection_2include_2buffer_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../e2e_protection/include/buffer/buffer.hpp</includes>
    <includes id="config_8hpp" name="config.hpp" local="yes" imported="no">../../e2e_protection/include/e2exf/config.hpp</includes>
    <includes id="e2e__provider_8hpp" name="e2e_provider.hpp" local="yes" imported="no">../../e2e_protection/include/e2e/profile/e2e_provider.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>routing_manager_stub.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>routing__manager__stub_8cpp.html</filename>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="routing__manager__stub_8hpp" name="routing_manager_stub.hpp" local="yes" imported="no">../include/routing_manager_stub.hpp</includes>
    <includes id="routing__manager__stub__host_8hpp" name="routing_manager_stub_host.hpp" local="yes" imported="no">../include/routing_manager_stub_host.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../include/remote_subscription.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint__manager__impl_8hpp" name="endpoint_manager_impl.hpp" local="yes" imported="no">../../endpoints/include/endpoint_manager_impl.hpp</includes>
    <includes id="netlink__connector_8hpp" name="netlink_connector.hpp" local="yes" imported="no">../../endpoints/include/netlink_connector.hpp</includes>
    <includes id="deregister__application__command_8hpp" name="deregister_application_command.hpp" local="yes" imported="no">../../protocol/include/deregister_application_command.hpp</includes>
    <includes id="distribute__security__policies__command_8hpp" name="distribute_security_policies_command.hpp" local="yes" imported="no">../../protocol/include/distribute_security_policies_command.hpp</includes>
    <includes id="dummy__command_8hpp" name="dummy_command.hpp" local="yes" imported="no">../../protocol/include/dummy_command.hpp</includes>
    <includes id="expire__command_8hpp" name="expire_command.hpp" local="yes" imported="no">../../protocol/include/expire_command.hpp</includes>
    <includes id="offer__service__command_8hpp" name="offer_service_command.hpp" local="yes" imported="no">../../protocol/include/offer_service_command.hpp</includes>
    <includes id="offered__services__request__command_8hpp" name="offered_services_request_command.hpp" local="yes" imported="no">../../protocol/include/offered_services_request_command.hpp</includes>
    <includes id="offered__services__response__command_8hpp" name="offered_services_response_command.hpp" local="yes" imported="no">../../protocol/include/offered_services_response_command.hpp</includes>
    <includes id="ping__command_8hpp" name="ping_command.hpp" local="yes" imported="no">../../protocol/include/ping_command.hpp</includes>
    <includes id="pong__command_8hpp" name="pong_command.hpp" local="yes" imported="no">../../protocol/include/pong_command.hpp</includes>
    <includes id="register__application__command_8hpp" name="register_application_command.hpp" local="yes" imported="no">../../protocol/include/register_application_command.hpp</includes>
    <includes id="register__events__command_8hpp" name="register_events_command.hpp" local="yes" imported="no">../../protocol/include/register_events_command.hpp</includes>
    <includes id="registered__ack__command_8hpp" name="registered_ack_command.hpp" local="yes" imported="no">../../protocol/include/registered_ack_command.hpp</includes>
    <includes id="release__service__command_8hpp" name="release_service_command.hpp" local="yes" imported="no">../../protocol/include/release_service_command.hpp</includes>
    <includes id="remove__security__policy__command_8hpp" name="remove_security_policy_command.hpp" local="yes" imported="no">../../protocol/include/remove_security_policy_command.hpp</includes>
    <includes id="remove__security__policy__response__command_8hpp" name="remove_security_policy_response_command.hpp" local="yes" imported="no">../../protocol/include/remove_security_policy_response_command.hpp</includes>
    <includes id="request__service__command_8hpp" name="request_service_command.hpp" local="yes" imported="no">../../protocol/include/request_service_command.hpp</includes>
    <includes id="resend__provided__events__command_8hpp" name="resend_provided_events_command.hpp" local="yes" imported="no">../../protocol/include/resend_provided_events_command.hpp</includes>
    <includes id="routing__info__command_8hpp" name="routing_info_command.hpp" local="yes" imported="no">../../protocol/include/routing_info_command.hpp</includes>
    <includes id="send__command_8hpp" name="send_command.hpp" local="yes" imported="no">../../protocol/include/send_command.hpp</includes>
    <includes id="stop__offer__service__command_8hpp" name="stop_offer_service_command.hpp" local="yes" imported="no">../../protocol/include/stop_offer_service_command.hpp</includes>
    <includes id="subscribe__ack__command_8hpp" name="subscribe_ack_command.hpp" local="yes" imported="no">../../protocol/include/subscribe_ack_command.hpp</includes>
    <includes id="subscribe__command_8hpp" name="subscribe_command.hpp" local="yes" imported="no">../../protocol/include/subscribe_command.hpp</includes>
    <includes id="subscribe__nack__command_8hpp" name="subscribe_nack_command.hpp" local="yes" imported="no">../../protocol/include/subscribe_nack_command.hpp</includes>
    <includes id="suspend__command_8hpp" name="suspend_command.hpp" local="yes" imported="no">../../protocol/include/suspend_command.hpp</includes>
    <includes id="unregister__event__command_8hpp" name="unregister_event_command.hpp" local="yes" imported="no">../../protocol/include/unregister_event_command.hpp</includes>
    <includes id="unsubscribe__ack__command_8hpp" name="unsubscribe_ack_command.hpp" local="yes" imported="no">../../protocol/include/unsubscribe_ack_command.hpp</includes>
    <includes id="unsubscribe__command_8hpp" name="unsubscribe_command.hpp" local="yes" imported="no">../../protocol/include/unsubscribe_command.hpp</includes>
    <includes id="update__security__credentials__command_8hpp" name="update_security_credentials_command.hpp" local="yes" imported="no">../../protocol/include/update_security_credentials_command.hpp</includes>
    <includes id="update__security__policy__command_8hpp" name="update_security_policy_command.hpp" local="yes" imported="no">../../protocol/include/update_security_policy_command.hpp</includes>
    <includes id="update__security__policy__response__command_8hpp" name="update_security_policy_response_command.hpp" local="yes" imported="no">../../protocol/include/update_security_policy_response_command.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../../security/include/policy_manager_impl.hpp</includes>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../../security/include/security.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serviceinfo.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/routing/src/</path>
    <filename>serviceinfo_8cpp.html</filename>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../include/serviceinfo.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/include/</path>
    <filename>policy_8hpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <class kind="struct">vsomeip_v3::policy</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85130498b085e6e14a750c392732154a</anchor>
      <arglist>(const boost::icl::discrete_interval&lt; T_ &gt; &amp;_interval, T_ &amp;_lower, T_ &amp;_upper)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>policy_manager_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/include/</path>
    <filename>policy__manager__impl_8hpp.html</filename>
    <includes id="policy__manager_8hpp" name="policy_manager.hpp" local="no" imported="no">vsomeip/internal/policy_manager.hpp</includes>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../include/policy.hpp</includes>
    <class kind="class">vsomeip_v3::policy_manager_impl</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>security.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/include/</path>
    <filename>security_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <class kind="class">vsomeip_v3::security</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/src/</path>
    <filename>policy_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="policy_8hpp" name="policy.hpp" local="yes" imported="no">../include/policy.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy_manager.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/src/</path>
    <filename>policy__manager_8cpp.html</filename>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../include/policy_manager_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>policy_manager_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/src/</path>
    <filename>policy__manager__impl_8cpp.html</filename>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../include/policy_manager_impl.hpp</includes>
    <includes id="configuration__element_8hpp" name="configuration_element.hpp" local="yes" imported="no">../../configuration/include/configuration_element.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../../utility/include/utility.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="function">
      <type>void</type>
      <name>read_data</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac59b4dc82db4f7c7721e988f91e63d24</anchor>
      <arglist>(const std::string &amp;_in, T_ &amp;_out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>security.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/security/src/</path>
    <filename>security_8cpp.html</filename>
    <includes id="security_8hpp" name="security.hpp" local="yes" imported="no">../include/security.hpp</includes>
    <includes id="policy__manager__impl_8hpp" name="policy_manager_impl.hpp" local="yes" imported="no">../include/policy_manager_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="internal_8hpp" name="internal.hpp" local="yes" imported="no">../../configuration/include/internal.hpp</includes>
    <includes id="plugin__manager_8hpp" name="plugin_manager.hpp" local="yes" imported="no">../../plugin/include/plugin_manager.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEC_POLICY_SYMDEF</name>
      <anchorfile>security_8cpp.html</anchorfile>
      <anchor>a1b298a9a26a80c734b04f7f0130e9f6a</anchor>
      <arglist>(sym)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEC_SYMDEF</name>
      <anchorfile>security_8cpp.html</anchorfile>
      <anchor>a0b0ad69084d2512c43b48eaac18828ef</anchor>
      <arglist>(sym)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>configuration__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::configuration_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>constants.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2constants_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <namespace>vsomeip_v3::sd::protocol</namespace>
    <member kind="variable">
      <type>const service_t</type>
      <name>service</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aa2a4b491728e2388739c38955d93a663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>instance</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a108c41316ccf8a6f58781b4fbfbb72f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>method</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a9672260623da6a9ec36666d77624c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>client</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a4301fedba81c7bbcc971714312d3191c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>protocol_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ac12cd8e7d5bd267aba48e6f9927c7e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>interface_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a671093c1f6fc5fbf7f149bff14e13af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>message_type</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aec38071e3274c6a1e8b9decd67c9b7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>return_code</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab83b958bde23b3ff10be09b4aa7b4e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>reserved_byte</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a03dc9d80fe666e04fb8afb9a19607321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>reserved_word</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab671b814e4ac2ca632a40263faf4ad22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32_t</type>
      <name>reserved_long</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab7095f65a99ed25abd9d78ee8d9fbb1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>tcp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a807c6ff750c63e9e420eee7c6da2e7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>udp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>af1cf186cad7101f9b40c3cbfbbf80666</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constants.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2constants_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../compat/vsomeip/enumeration_types.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <namespace>vsomeip</namespace>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>DEFAULT_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f2b7b5616e47a6991e02235acd3e3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>DEFAULT_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a914f2b51da8df58d43b8aa5e162fe31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ttl_t</type>
      <name>DEFAULT_TTL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a44b7287ec4b2276c13cc32b429ffd4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>DEFAULT_MULTICAST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1dfd55967348536b962d3259a31f94cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>DEFAULT_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5c6c490cc1583fe38af30b0cf4c1a967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ILLEGAL_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae1e873b4fbfd2b49b73bddf0b936b3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>NO_TRACE_FILTER_EXPRESSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39f544082ffed0ea0506ca12b0fcc035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const service_t</type>
      <name>ANY_SERVICE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adce6ed20385f8cd186b9f82086351651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>ANY_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a97cec69887056455ee978cc3a50dec15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>ANY_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa81c85715d8713f0b977d2c4e6c670cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>ANY_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a80aa773571156d6c8d6315fdb1131ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>ANY_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9be62aeb5875b257d33a34ab638a1938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const eventgroup_t</type>
      <name>DEFAULT_EVENTGROUP</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae3a9af84a72838c170f304b45604f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ILLEGAL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a347481da1fbdeae875c987e8d18ed8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aab691e5d96de4055ec9fb78e614525a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab5f16721542eaf1020af95fd7abaa1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const length_t</type>
      <name>MAGIC_COOKIE_SIZE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aea8ae408d12586b521d770b0814a17fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const request_t</type>
      <name>MAGIC_COOKIE_REQUEST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9b91bbdc92d781ab839c8e3fb2977fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_NETWORK_BYTE_ORDER</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0874e45e3f37be1f69d40a861db73fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>MAGIC_COOKIE_PROTOCOL_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aabbfece5b1aad839016ea2339ac307a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>MAGIC_COOKIE_INTERFACE_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4bf667b9e83075cf22762423e393dc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adf2818d9ee2613b716210f68cada1b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c4ece5170ac1f26dc2c6eabc8feb28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>MAGIC_COOKIE_RETURN_CODE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab0c5872098eb80f1918a1cc298db7778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>CLIENT_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2443bc33f4987cc981c33c119adf2124</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>SERVICE_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a23f1ccc0cd6072b6b69077dec6575e99</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const event_t</type>
      <name>ANY_EVENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8bee2b7ec8cfc271c4eb472a01b93286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ANY_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1d4d4a1e58e40cafd2be7730c1733411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_subscription_id_t</type>
      <name>DEFAULT_SUBSCRIPTION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac8aa72362edafefabb0db273a8449521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_security_update_id_t</type>
      <name>DEFAULT_SECURITY_UPDATE_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a787fe58d9718fedd3dd8c53d390192</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constants.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2constants_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ANY_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a05de3fc19b0289d1872cfea55700a952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const eventgroup_t</type>
      <name>ANY_EVENTGROUP</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa2dad12652429b15600f924ec9a45b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>INVALID_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4b561e3efdc12f157f5a8fc45a8204dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab9b5b94b12d67d3aead148a533dd4f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>VSOMEIP_ALL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab39336d9a0e528a506d19edc40473282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_SD_PAYLOAD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a755934d52c8ba7fd2269ea1f2ec9878b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_UDP_SD_PAYLOAD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a1cbb4c2e25720926fa1941eadf4a026e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_DATA_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a103de3bafc98dc901772dfc34f6a33cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_ENTRY_LENGTH_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a22524c22c99c6d0819801a1437126eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_ENTRY_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a5161c646823ef0f290dbf767ae9f0a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_IPV3_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ad9f89d97e07b300d4a4cd14ada116c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_IPV6_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a8c78e60fca197d9c812178ce56a30ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_LOAD_BALANCING_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>abfd25e2989eedbd06d661bf782ea0e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_PROTECTION_OPTION_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ad7aab416f8232b0dbf89a2af3356aed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_OPTION_LENGTH_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ab34dab83d25bdf6bd1b7078321bf0fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_OPTION_HEADER_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>aef1430aac3e1b1d328623bd2979f3422</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_EMPTY_MESSAGE_SIZE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>aeba9e5c961b922f01e3787062fd7c917</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_SD_SPACE_FOR_PAYLOAD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>af733f5ee6b4031e8c026fe7bd8137415</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_IPV4_OPTION_LENGTH</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a944b2392f3f548f8705e8fdda02cb43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_IPV6_OPTION_LENGTH</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a3cca4895b767d873301e8b9aefdeadcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_SERVICE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a80497b1fa84c4aaa91dadb1894c2d013</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_INSTANCE</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>aedfd03e332d224a69e6e32fbf25e9b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_METHOD</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a77bb6167323baf3bcfac4f7283927a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_CLIENT</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a60e0209326687bb848cc7722b0c7b3be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_ENABLED</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>abcea1475c46d55ee2d7a1d8fa3652026</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_PROTOCOL</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a3d88500c2ab9182e83fb5f14c076e715</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_MULTICAST</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a51ea5511f5f94feaa8f78379fe59b940</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_PORT</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a7f56e0fd30809cf364f6cbada963aff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_INITIAL_DELAY_MIN</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a08fdf549edcd5d5e16d4c7a92b0ce9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_INITIAL_DELAY_MAX</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a5d3cb961831cccc27d0b48401232d768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_REPETITIONS_BASE_DELAY</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>ac1ac18c92777ff8f0da632f211a5d63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_REPETITIONS_MAX</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a74c0de5c25d387df0f9b7b4cc894f5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_TTL</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a0fa60e3249cccf0c625e3e58da94a0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_CYCLIC_OFFER_DELAY</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a4c4a48f28efe0bb41d9711649631052b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_REQUEST_RESPONSE_DELAY</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a917b5a5098c8fa2cf273ac6c3db6b244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_OFFER_DEBOUNCE_TIME</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a96ccf00dce545be9b4b3956e6c63ef8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SD_DEFAULT_FIND_DEBOUNCE_TIME</name>
      <anchorfile>implementation_2service__discovery_2include_2defines_8hpp.html</anchorfile>
      <anchor>a7983045f1a2af0e5ad19889a2e0dda81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/include/</path>
    <filename>implementation_2tracing_2include_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_NAME</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>ad211989b1c81cf965cbc26f4733e0214</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_DEFAULT_FILTER_TYPE</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>a638152a3cb849a542f94ee20557ec409</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_INSTANCE_POS_MIN</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>a652324135c50b8d9cb386d0a6444f4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TC_INSTANCE_POS_MAX</name>
      <anchorfile>implementation_2tracing_2include_2defines_8hpp.html</anchorfile>
      <anchor>a3270c60da29c5e16ab867fd4561c5380</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2defines_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PROTOCOL_VERSION</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a17d450a088a297c93ad31c859aee9334</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_LOCAL_MESSAGE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aee0b8b2dc5b95028cbc4de69dbe39401</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_TCP_MESSAGE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac3ec8a8d5671ec002c94e26e5d850ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_UDP_MESSAGE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5ca4978e825bb01cbbcf6637532f504e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PACKET_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a115e45daca8530394cf712eb9838ab6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_HEADER_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a7e2b7ae5a5f388e5ef044f350305a22b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SOMEIP_MAGIC_COOKIE_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aa3b9055e76e6fea791fea7d4a9735022</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_FULL_HEADER_SIZE</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a362027429bbdebd340fc2484d01cf4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SERVICE_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5e0137c54b57a5758098b67876bbdbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SERVICE_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a9797c9542c3219e9746555df786e348d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_METHOD_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a6ad3021af0942cdab317a3800e37eae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_METHOD_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a83f5d8d717b1e01476bb45436062648f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EVENT_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab34242aed44ea02ce65da116d0652e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EVENT_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac666a8de682461bbfe58a4414e8067b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LENGTH_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>af89e22d592873c426444449652912168</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LENGTH_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a3c67201245e7c12c34b354dce35e79c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a127bd7e22b756f55e91f93218a5ad225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_CLIENT_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab738627828d6dfc56c4b7e82f4b2a376</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SESSION_POS_MIN</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a25c138a6a4d985e84ac4acb5a6a04092</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SESSION_POS_MAX</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5e01d31aa58995a71e313d0f98e269ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PROTOCOL_VERSION_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a098697135f02001a7d68a0b47a4e3175</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_INTERFACE_VERSION_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a5d495968c90580521c10a309820d0bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MESSAGE_TYPE_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a12c681f79943dd35b8939a00575360bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_RETURN_CODE_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a728481e9aa162a4af2336c52f0e1c63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PAYLOAD_POS</name>
      <anchorfile>interface_2compat_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a0773530a91d64e13566c6326304bde16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>defines.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2defines_8hpp.html</filename>
    <member kind="variable">
      <type>constexpr std::uint8_t</type>
      <name>VSOMEIP_PROTOCOL_VERSION</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>adb41ee036a714ab39f212376ddf88f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_MAX_LOCAL_MESSAGE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a413466e67bef0bda56d97594869e7cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_MAX_TCP_MESSAGE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a1b605a8875c211c8cd0a0e602098f2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_MAX_UDP_MESSAGE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a417ee7b0580d52055928a9e65620232c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_PACKET_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a6953d475bcc6fae04ce1733264ac09e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_SOMEIP_MAGIC_COOKIE_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>abd2444d9a5b7575b803a4aefbef30e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::uint32_t</type>
      <name>VSOMEIP_SOMEIP_HEADER_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a2d199b18bdd4b789378916776a848f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::uint32_t</type>
      <name>VSOMEIP_FULL_HEADER_SIZE</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a4ed928ee62314def71525ef682102ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_SERVICE_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a691cbff1713cea42c7d08bb00241084b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_SERVICE_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ad5dc258a7ab35c9f50ee1a1e14bc1e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_METHOD_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>abbb48fb37731432c5dd754dad0a9e026</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_METHOD_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a582e9babda2e1707d00a2fe084cdd06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_EVENT_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>afd5464369cdd5b6d838d2a8e2af6d957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_EVENT_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aaa7be2a27b26cbd716882ec555e323a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_LENGTH_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a501b2457f6e884b382e62f65d9c1813d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_LENGTH_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac5436d1050fa4761a1c59dce748e8d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_CLIENT_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a03f1ecf5f73064f9545acdfc7225c87a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_CLIENT_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ab6cc1a335ef7c3d025cf34b418af579e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_SESSION_POS_MIN</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a0475a532e81fe09a71ffb1c57e8e7a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_SESSION_POS_MAX</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>aca4edb2255047934e23a134e7378559e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_PROTOCOL_VERSION_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a464d69c9ccb39a00c5fb9680176de63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_INTERFACE_VERSION_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a24b69e59adfb0d183bfcac722cf0fe2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_MESSAGE_TYPE_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>ac99879a2bfee7c8f51f4b4f64583d1a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_RETURN_CODE_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a2d1bd4baa79e70933d82881d4408cb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr std::size_t</type>
      <name>VSOMEIP_PAYLOAD_POS</name>
      <anchorfile>interface_2vsomeip_2defines_8hpp.html</anchorfile>
      <anchor>a1bda1a03290ef6a8fb5f93775414948a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>entry_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>entry__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <includes id="message__element__impl_8hpp" name="message_element_impl.hpp" local="yes" imported="no">message_element_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::entry_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_MAX_OPTION_RUN</name>
      <anchorfile>entry__impl_8hpp.html</anchorfile>
      <anchor>a811cd92a55d9096eaa1a4a5a06df7949</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="enumeration">
      <type></type>
      <name>option_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a1b095ff9063385699acb46879d760a3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad08e68ea80bc3bf47a03757579c11900">CONFIGURATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9f72b3ee74e29c627de58a4d92767907">LOAD_BALANCING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fae4fa5555709453166935ef887d97dad6">PROTECTION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad99bcd855e28a58a0ffb17fb7bc3672c">IP4_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa656f2d9488fd473cd5c87fc0d0c671d3">IP6_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9aa4bece16c8028c887d528022ece58f">IP4_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa3e52334a97f7b6951548b1f3a8a63512">IP6_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa45582b83fead3a0cbc52efa59d6ba4c5">SELECTIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entry_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a5ee6f34e50b9155a337f0eb07d706200</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a324f25871f90b3bd46a9a60e1957cfbb">FIND_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6906e2a8c179777590bbed7d0316e21a">OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ac517d1ab174237d369a8d8a10a3c98f3">STOP_OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a093a6e7f7885f91c09fa7f9478edd209">REQUEST_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ae5b65dcf08a837c03fa789dba01dc7a4">FIND_EVENT_GROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6e85554fa1249e1c5b86afde6b18700b">PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200addbf5099413ff5c80c0793834054340d">STOP_PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a99209c30c3e49367e4faaa8f895e92d6">SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a59221d1438ac23e21204f54c26dc3a1d">STOP_SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200accc382dc381a1b3f403b9e274a265275">SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a0efd8428d44a0d6dd6127a5b2280d85f">STOP_SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>layer_four_protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab28b10cdfdc46bc21d39f6b67c41e66c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66cab136ef5f6a01d816991fe3cf7a6ac763">TCP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66caf5ef036b4d8b630721e51fe23489fbc9">UDP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66ca696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/include/</path>
    <filename>implementation_2tracing_2include_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="enumeration">
      <type></type>
      <name>filter_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>aad08deaf2c9d2b4567b1d323d890acfd</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfda50546bf973283065b6ccf09faf7a580a">NEGATIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfdaab6c31432785221bae58327ef5f6ea58">POSITIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfdaa3066ddd39e832bb72365a1fb86299fa">HEADER_ONLY</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip</namespace>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a86896851ba1e40f6f0734612d990e9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>enumeration_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2enumeration__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>event_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afffd745bcf53bf88a06b4a42da68e9e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a491ebf10d74cafbc4f92c6060e0659d8">ET_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a4101e5665ca41d40d1c72e1b59a7ccd5">ET_SELECTIVE_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6ad0c76974d395561dcd5addd17025caca">ET_FIELD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a622bf80e22546ba409b0ee1f1f765b06">ET_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_mode_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6f6cf174f2fb1215e15535d34a582b4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fae6ea3fc38b5dd378da5fd9982d07a906">SM_OFF</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa1e206a41b2e7227f48cf6d239412ab0c">SM_ON</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa2f6bfcbc8033cafb45764771ea737c12">SM_AUDIT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>reliability_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a3d53b0e729d0788e14cdbcc3c9941d5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba26b55ae0f42b75bb199d8ae7bf071fe9">RT_RELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5baf6782e4fee43f2927a875e2e76912518">RT_UNRELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba8cdb04af539d2e16a915e7b27236ba59">RT_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5bab3fa977816ea6fabb8b123bc67ee0bea">RT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>availability_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9bbce438b678c5c429abc02448cde945</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945aab20cc2fb560d7f9b5efe83288fae673">AS_UNAVAILABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945a430db5fefef033d4315a55a61c4c121d">AS_OFFERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945a835954dd352c2471baa3b309758d4ef3">AS_AVAILABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945ad5923291302dd82376895ece36653eb6">AS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>handler_registration_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a50e03d3ff9dbcd24c24a6266a414ae9c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9ca8e54c81230ad9d63305f3a422ca1a9fc">HRT_REPLACE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9cac0ba4c449caf89df3f4df677e2e43959">HRT_PREPEND</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9ca1ad9d260a00c942dde73a6ed75308b54">HRT_APPEND</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9ca1b4c0c32a9b4c210ff9e2158459302ea">HRT_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>eventgroupentry_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>eventgroupentry__impl_8hpp.html</filename>
    <includes id="entry__impl_8hpp" name="entry_impl.hpp" local="yes" imported="no">entry_impl.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">message_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::eventgroupentry_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ip_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>ip__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::ip_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv4_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>ipv4__option__impl_8hpp.html</filename>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">ip_option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::ipv4_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv6_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>ipv6__option__impl_8hpp.html</filename>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">ip_option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::ipv6_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>load_balancing_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>load__balancing__option__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">primitive_types.hpp</includes>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::load_balancing_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_element_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>message__element__impl_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::message_element_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>option__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <includes id="message__element__impl_8hpp" name="message_element_impl.hpp" local="yes" imported="no">message_element_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>primitive_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2primitive__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>priority_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a03ec7ff05c35cc282087aab5f6acbabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>weight_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab41c3c76dfe5e70beb62aaa5084269bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>alive_counter_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ae83eb26fe7ea1fd2886097606bae3cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>crc_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a418896956300726222443ce4990e25c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>flags_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a665b7bf45c5002c16224ddfaa8fac84d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>primitive_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2primitive__types_8hpp.html</filename>
    <namespace>vsomeip</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>message_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aed4ab5253b17bc217e1d970d32e5b9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>service_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab439d8b69368f376c1671ddc31e515d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>method_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85a1d735ad9ad8dc0e10c57e66a3de2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>event_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad9c76ce8278d899bf04d836bfc3a7b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>instance_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a38ba3163c3baa90f9adbdaa5a1550a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>eventgroup_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adb3707afb830a56fc151afae8d3a4a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>major_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a60dd902439aa9e3353079bb19e173eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>minor_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a42ecfae92498c1706f42b98ccaa85a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>ttl_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2997ff0ab3ed962de2b3bac11eb0acb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>request_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a72d761400f7e540f2890eccf8a4b4869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>client_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa18c5d8fd10b3df25994711409acf8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>session_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>acabf6d89a5f8232b82031d7e03ca86d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>length_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac71906150d5a544c870a734956c1f867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>protocol_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa1cb109c2e75eceab17deb467e0049aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>interface_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2134c346999fb510057bc8d16c8cbc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>byte_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85c0aa53badeca5d318f8e1351552072</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 4 &gt;</type>
      <name>ipv4_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a9c53f8ef0a2477376d9bfa732dcff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 16 &gt;</type>
      <name>ipv6_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a14706387c9b65556d738a0f084b8aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_channel_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad672b2d5348970784c9476e58417e348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_filter_type_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a673602d80ad64071cf219a3ededa2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>pending_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa03b7aa63bdf2c81833a4a8ee17c8acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_remote_offer_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab27bd7168daa9731d59e54c8a916238d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_security_update_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a553b7cd6e0ddbb531d670ef9011e2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>uid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a89e8b6dc52a19420d56b66ba69ae31d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>gid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f69df0d98384cc0c98e964ef1db6420</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>primitive_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2primitive__types_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>diagnosis_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5009758353b9c739033d01366ee1c9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>port_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a17c3006f302bb15a56a7b515ace4b940</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>protection_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>protection__option__impl_8hpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../include/primitive_types.hpp</includes>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">../include/option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::protection_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription_ack.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>remote__subscription__ack_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::remote_subscription_ack</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>request.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>request_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::request</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>implementation_2service__discovery_2include_2runtime_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::runtime</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>interface_2compat_2vsomeip_2runtime_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../compat/vsomeip/export.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::runtime</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>runtime.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>interface_2vsomeip_2runtime_8hpp.html</filename>
    <class kind="class">vsomeip_v3::runtime</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>selective_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>selective__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::selective_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>service__discovery_8hpp.html</filename>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../../routing/include/serviceinfo.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="service__discovery__host_8hpp" name="service_discovery_host.hpp" local="yes" imported="no">../include/service_discovery_host.hpp</includes>
    <class kind="class">vsomeip_v3::sd::service_discovery</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery_host.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>service__discovery__host_8hpp.html</filename>
    <includes id="implementation_2routing_2include_2function__types_8hpp" name="function_types.hpp" local="yes" imported="no">../../routing/include/function_types.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">../../routing/include/types.hpp</includes>
    <class kind="class">vsomeip_v3::sd::service_discovery_host</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="define">
      <type>#define</type>
      <name>io_context</name>
      <anchorfile>service__discovery__host_8hpp.html</anchorfile>
      <anchor>a2b1cff20ac18e058f673f4cba1ef2e53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>service_discovery_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>service__discovery__impl_8hpp.html</filename>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="types_8hpp" name="types.hpp" local="yes" imported="no">../../routing/include/types.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../../routing/include/remote_subscription.hpp</includes>
    <includes id="service__discovery_8hpp" name="service_discovery.hpp" local="yes" imported="no">service_discovery.hpp</includes>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">ip_option_impl.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">ipv6_option_impl.hpp</includes>
    <includes id="service__discovery_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">deserializer.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">message_impl.hpp</includes>
    <class kind="struct">vsomeip_v3::sd::entry_data_t</class>
    <class kind="class">vsomeip_v3::sd::service_discovery_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; request &gt; &gt; &gt;</type>
      <name>requests_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a479bb43b7e65f780b2fdbe9f3b2615e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>serviceentry_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>serviceentry__impl_8hpp.html</filename>
    <includes id="entry__impl_8hpp" name="entry_impl.hpp" local="yes" imported="no">entry_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::serviceentry_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>subscription.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>subscription_8hpp.html</filename>
    <class kind="class">vsomeip_v3::sd::subscription</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a44d6e76ec7a3229de97bd8b99723074e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea3bdddbcca7a01b8a1e6ea1483b398e6c">ST_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea27185adbc4a022e762d4d07f1bae4a31">ST_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea9e3393acb9ba884e9ecfcf1acd696525">ST_RESUBSCRIBING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea8dcdb2ca996e32272605de24f3b63990">ST_RESUBSCRIBING_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea0ce3a5f229eb18947e3d3973f173a613">ST_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>unknown_option_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/include/</path>
    <filename>unknown__option__impl_8hpp.html</filename>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">option_impl.hpp</includes>
    <class kind="class">vsomeip_v3::sd::unknown_option_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>configuration_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>configuration__option__impl_8cpp.html</filename>
    <includes id="configuration__option__impl_8hpp" name="configuration_option_impl.hpp" local="yes" imported="no">../include/configuration_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>entry_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>entry__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="entry__impl_8hpp" name="entry_impl.hpp" local="yes" imported="no">../include/entry_impl.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>eventgroupentry_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>eventgroupentry__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="eventgroupentry__impl_8hpp" name="eventgroupentry_impl.hpp" local="yes" imported="no">../include/eventgroupentry_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ip_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>ip__option__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="ip__option__impl_8hpp" name="ip_option_impl.hpp" local="yes" imported="no">../include/ip_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv4_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>ipv4__option__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>ipv6_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>ipv6__option__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>load_balancing_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>load__balancing__option__impl_8cpp.html</filename>
    <includes id="load__balancing__option__impl_8hpp" name="load_balancing_option_impl.hpp" local="yes" imported="no">../include/load_balancing_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>message_element_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>message__element__impl_8cpp.html</filename>
    <includes id="message__element__impl_8hpp" name="message_element_impl.hpp" local="yes" imported="no">../include/message_element_impl.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>option__impl_8cpp.html</filename>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="option__impl_8hpp" name="option_impl.hpp" local="yes" imported="no">../include/option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>protection_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>protection__option__impl_8cpp.html</filename>
    <includes id="protection__option__impl_8hpp" name="protection_option_impl.hpp" local="yes" imported="no">../include/protection_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>remote_subscription_ack.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>remote__subscription__ack_8cpp.html</filename>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="remote__subscription__ack_8hpp" name="remote_subscription_ack.hpp" local="yes" imported="no">../include/remote_subscription_ack.hpp</includes>
    <includes id="remote__subscription_8hpp" name="remote_subscription.hpp" local="yes" imported="no">../../routing/include/remote_subscription.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>request.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>request_8cpp.html</filename>
    <includes id="request_8hpp" name="request.hpp" local="yes" imported="no">../include/request.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>selective_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>selective__option__impl_8cpp.html</filename>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>service_discovery_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>service__discovery__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../include/constants.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="service__discovery_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../include/deserializer.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../include/enumeration_types.hpp</includes>
    <includes id="eventgroupentry__impl_8hpp" name="eventgroupentry_impl.hpp" local="yes" imported="no">../include/eventgroupentry_impl.hpp</includes>
    <includes id="ipv4__option__impl_8hpp" name="ipv4_option_impl.hpp" local="yes" imported="no">../include/ipv4_option_impl.hpp</includes>
    <includes id="ipv6__option__impl_8hpp" name="ipv6_option_impl.hpp" local="yes" imported="no">../include/ipv6_option_impl.hpp</includes>
    <includes id="selective__option__impl_8hpp" name="selective_option_impl.hpp" local="yes" imported="no">../include/selective_option_impl.hpp</includes>
    <includes id="service__discovery_2include_2message__impl_8hpp" name="message_impl.hpp" local="yes" imported="no">../include/message_impl.hpp</includes>
    <includes id="remote__subscription__ack_8hpp" name="remote_subscription_ack.hpp" local="yes" imported="no">../include/remote_subscription_ack.hpp</includes>
    <includes id="request_8hpp" name="request.hpp" local="yes" imported="no">../include/request.hpp</includes>
    <includes id="implementation_2service__discovery_2include_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../include/runtime.hpp</includes>
    <includes id="service__discovery__host_8hpp" name="service_discovery_host.hpp" local="yes" imported="no">../include/service_discovery_host.hpp</includes>
    <includes id="service__discovery__impl_8hpp" name="service_discovery_impl.hpp" local="yes" imported="no">../include/service_discovery_impl.hpp</includes>
    <includes id="serviceentry__impl_8hpp" name="serviceentry_impl.hpp" local="yes" imported="no">../include/serviceentry_impl.hpp</includes>
    <includes id="subscription_8hpp" name="subscription.hpp" local="yes" imported="no">../include/subscription.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">../../endpoints/include/client_endpoint.hpp</includes>
    <includes id="endpoint__definition_8hpp" name="endpoint_definition.hpp" local="yes" imported="no">../../endpoints/include/endpoint_definition.hpp</includes>
    <includes id="tcp__server__endpoint__impl_8hpp" name="tcp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/tcp_server_endpoint_impl.hpp</includes>
    <includes id="udp__server__endpoint__impl_8hpp" name="udp_server_endpoint_impl.hpp" local="yes" imported="no">../../endpoints/include/udp_server_endpoint_impl.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <includes id="plugin__manager__impl_8hpp" name="plugin_manager_impl.hpp" local="yes" imported="no">../../plugin/include/plugin_manager_impl.hpp</includes>
    <includes id="routing_2include_2event_8hpp" name="event.hpp" local="yes" imported="no">../../routing/include/event.hpp</includes>
    <includes id="eventgroupinfo_8hpp" name="eventgroupinfo.hpp" local="yes" imported="no">../../routing/include/eventgroupinfo.hpp</includes>
    <includes id="serviceinfo_8hpp" name="serviceinfo.hpp" local="yes" imported="no">../../routing/include/serviceinfo.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>serviceentry_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>serviceentry__impl_8cpp.html</filename>
    <includes id="serviceentry__impl_8hpp" name="serviceentry_impl.hpp" local="yes" imported="no">../include/serviceentry_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <includes id="serializer_8hpp" name="serializer.hpp" local="yes" imported="no">../../message/include/serializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>subscription.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>subscription_8cpp.html</filename>
    <includes id="subscription_8hpp" name="subscription.hpp" local="yes" imported="no">../include/subscription.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>unknown_option_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/service_discovery/src/</path>
    <filename>unknown__option__impl_8cpp.html</filename>
    <includes id="unknown__option__impl_8hpp" name="unknown_option_impl.hpp" local="yes" imported="no">../include/unknown_option_impl.hpp</includes>
    <includes id="message_2include_2deserializer_8hpp" name="deserializer.hpp" local="yes" imported="no">../../message/include/deserializer.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::sd</namespace>
  </compound>
  <compound kind="file">
    <name>channel_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/include/</path>
    <filename>channel__impl_8hpp.html</filename>
    <includes id="implementation_2tracing_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <class kind="class">vsomeip_v3::trace::channel_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="typedef">
      <type>std::function&lt; bool(service_t, instance_t, method_t)&gt;</type>
      <name>filter_func_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a1fea2d7b56016b1dea4035038b1a70fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>connector_impl.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/include/</path>
    <filename>connector__impl_8hpp.html</filename>
    <includes id="implementation_2tracing_2include_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">enumeration_types.hpp</includes>
    <includes id="header_8hpp" name="header.hpp" local="yes" imported="no">header.hpp</includes>
    <includes id="endpoints_2include_2buffer_8hpp" name="buffer.hpp" local="yes" imported="no">../../endpoints/include/buffer.hpp</includes>
    <class kind="class">vsomeip_v3::trace::connector_impl</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::cfg</namespace>
    <namespace>vsomeip_v3::trace</namespace>
  </compound>
  <compound kind="file">
    <name>header.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/include/</path>
    <filename>header_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::trace::header</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TRACE_HEADER_SIZE</name>
      <anchorfile>header_8hpp.html</anchorfile>
      <anchor>ad72d2b811cdc9a46326974214d08e08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a2ba767a205c2042308c808a2e5bb3bd4</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4af5ddaf0ca7929578b408c909429f68f2">local</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4a84864c1fe095359bc9c5ac068e24e781">udp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4ae20bb202b1d5537b1415e3263a37ed78">tcp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4aad921d60486366258809553a3db49a4a">unknown</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>channel_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/src/</path>
    <filename>channel__impl_8cpp.html</filename>
    <includes id="channel__impl_8hpp" name="channel_impl.hpp" local="yes" imported="no">../include/channel_impl.hpp</includes>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="function">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>ab270b722efbcbf125d648925c83d40b0</anchor>
      <arglist>(0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>connector_impl.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/src/</path>
    <filename>connector__impl_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="channel__impl_8hpp" name="channel_impl.hpp" local="yes" imported="no">../include/channel_impl.hpp</includes>
    <includes id="connector__impl_8hpp" name="connector_impl.hpp" local="yes" imported="no">../include/connector_impl.hpp</includes>
    <includes id="implementation_2tracing_2include_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../include/defines.hpp</includes>
    <includes id="implementation_2configuration_2include_2trace_8hpp" name="trace.hpp" local="yes" imported="no">../../configuration/include/trace.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a18a8a00a132973615e29ff0e88c4f22c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>header.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/tracing/src/</path>
    <filename>header_8cpp.html</filename>
    <includes id="header_8hpp" name="header.hpp" local="yes" imported="no">../include/header.hpp</includes>
    <includes id="endpoint_8hpp" name="endpoint.hpp" local="yes" imported="no">../../endpoints/include/endpoint.hpp</includes>
    <includes id="client__endpoint_8hpp" name="client_endpoint.hpp" local="yes" imported="no">../../endpoints/include/client_endpoint.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../../utility/include/byteorder.hpp</includes>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::trace</namespace>
  </compound>
  <compound kind="file">
    <name>byteorder.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/include/</path>
    <filename>byteorder_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BYTES_TO_WORD</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>ad5a0480874c83c2b9f395aec2f6824a0</anchor>
      <arglist>(x0, x1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BYTES_TO_LONG</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a4104d06e2629ebd9d02cdc6d4d9fbc52</anchor>
      <arglist>(x0, x1, x2, x3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_BYTES_TO_LONG_LONG</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>aba20d2f2758acb658d2408ff4168e093</anchor>
      <arglist>(x0, x1, x2, x3, x4, x5, x6, x7)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WORDS_TO_LONG</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>af131bd4d889fef52301d81f7d1b1fa78</anchor>
      <arglist>(x0, x1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WORD_BYTE0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>acc56ae8955b8b47aac9b8578beef3b91</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WORD_BYTE1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a148441aa2d823cf3ee541d5775c1df38</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>aedafa327b6e204b7c01ae051f79a70c7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a56d0cdb91b418fa2354545ed708baadb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE2</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>ad5ba17d49c3ae9e4075f4af24592d077</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_BYTE3</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a4b7af8cb99db596f50d3ff6476891ed9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>aab6170c44d476c8be7091c37fb42313a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a3a74d79c3e0b81c2de8e2c3c6d21af7b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE2</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a90b6208f215ec0405840521c2485508e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE3</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a6bbfda0db567d71d4ba49e1dc9371a90</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE4</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>ac592a1c089b91f994ec80e8da272d21a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE5</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>ad26806f9a5ba35fb2543f9d438ef28da</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE6</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a6d727428dcbfac37da4b9638267d9076</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_LONG_BYTE7</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a61b12812fead81c8df57672343a561e0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_WORD0</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a48a4797fb081eb55d4889013c888fad6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LONG_WORD1</name>
      <anchorfile>byteorder_8hpp.html</anchorfile>
      <anchor>a8589e2681a1de1178b6db835e3789cb8</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>criticalsection.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/include/</path>
    <filename>criticalsection_8hpp.html</filename>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::mutex</type>
      <name>CriticalSection</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad47ec96defa1d7249fd613470a2eb4b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utility.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/include/</path>
    <filename>utility_8hpp.html</filename>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <includes id="criticalsection_8hpp" name="criticalsection.hpp" local="yes" imported="no">criticalsection.hpp</includes>
    <class kind="class">vsomeip_v3::utility</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>criticalsection.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/src/</path>
    <filename>criticalsection_8cpp.html</filename>
    <includes id="criticalsection_8hpp" name="criticalsection.hpp" local="yes" imported="no">../include/criticalsection.hpp</includes>
  </compound>
  <compound kind="file">
    <name>utility.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/src/</path>
    <filename>utility_8cpp.html</filename>
    <includes id="logger_8hpp" name="logger.hpp" local="no" imported="no">vsomeip/internal/logger.hpp</includes>
    <includes id="byteorder_8hpp" name="byteorder.hpp" local="yes" imported="no">../include/byteorder.hpp</includes>
    <includes id="utility_8hpp" name="utility.hpp" local="yes" imported="no">../include/utility.hpp</includes>
    <includes id="configuration_8hpp" name="configuration.hpp" local="yes" imported="no">../../configuration/include/configuration.hpp</includes>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>wrappers.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/src/</path>
    <filename>wrappers_8cpp.html</filename>
  </compound>
  <compound kind="file">
    <name>wrappers_qnx.cpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/implementation/utility/src/</path>
    <filename>wrappers__qnx_8cpp.html</filename>
  </compound>
  <compound kind="file">
    <name>application.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2application_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../compat/vsomeip/constants.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../compat/vsomeip/enumeration_types.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2function__types_8hpp" name="function_types.hpp" local="yes" imported="no">../../compat/vsomeip/function_types.hpp</includes>
    <includes id="compat_2vsomeip_2handler_8hpp" name="handler.hpp" local="yes" imported="no">../../compat/vsomeip/handler.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::application</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>application.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2application_8hpp.html</filename>
    <includes id="deprecated_8hpp" name="deprecated.hpp" local="no" imported="no">vsomeip/deprecated.hpp</includes>
    <includes id="structured__types_8hpp" name="structured_types.hpp" local="no" imported="no">vsomeip/structured_types.hpp</includes>
    <class kind="class">vsomeip_v3::application</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>export.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2export_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EXPORT</name>
      <anchorfile>compat_2vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a096aa179ae11e83e0eec48b6126ed45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT</name>
      <anchorfile>compat_2vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a12a39fac817a9206c4bc47db16a1339e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_CONFIG</name>
      <anchorfile>compat_2vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a642d4c9ac8c9586117b0b9b210b7d29f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>export.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2export_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_EXPORT</name>
      <anchorfile>vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a096aa179ae11e83e0eec48b6126ed45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT</name>
      <anchorfile>vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a12a39fac817a9206c4bc47db16a1339e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_CONFIG</name>
      <anchorfile>vsomeip_2export_8hpp.html</anchorfile>
      <anchor>a642d4c9ac8c9586117b0b9b210b7d29f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2handler_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="struct">vsomeip::ip_address_t</class>
    <namespace>vsomeip</namespace>
    <member kind="typedef">
      <type>std::function&lt; void(state_type_e) &gt;</type>
      <name>state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aaaa3f291807d88e94809eef7359c2ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; message &gt; &amp;) &gt;</type>
      <name>message_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8cce472e7560a3a6cdb00bcae22b01f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(service_t, instance_t, bool) &gt;</type>
      <name>availability_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a227b0afaf3bd28575d79864c78063392</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(client_t, bool) &gt;</type>
      <name>subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab0dc5929630c27a9d3de6d675185a909</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const uint16_t) &gt;</type>
      <name>error_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae5269a22da27c8eb353162cf4b0e2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const service_t, const instance_t, const eventgroup_t, const event_t, const uint16_t) &gt;</type>
      <name>subscription_status_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a71ee64a10ba064c1b50b7b20fe0cbed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(client_t, bool, std::function&lt; void(const bool) &gt;)&gt;</type>
      <name>async_subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4de0319ad33b049b41bd3ae0a0fcc7a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::vector&lt; std::pair&lt; service_t, instance_t &gt;&gt; &amp;_services) &gt;</type>
      <name>offered_services_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9a0aa03bd4e86336db9b75a4784af214</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void() &gt;</type>
      <name>watchdog_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae36ba755d2b18a3a8128c7c1ce3f7344</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const ip_address_t &amp;)&gt;</type>
      <name>offer_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a015433a2f8cf63087bacc83e53334d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const ip_address_t &amp;)&gt;</type>
      <name>reboot_notification_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a70cbd3764a3179a79bb8388442a9d522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>routing_ready_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0277434fda0f0114d91d02a987ec7076</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(routing_state_e)&gt;</type>
      <name>routing_state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aba8cd17d6364361b4c04a38e5aff0428</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(security_update_state_e)&gt;</type>
      <name>security_update_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a74c8367b8a280bfebf473bbc3cbe5627</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>handler.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2handler_8hpp.html</filename>
    <includes id="deprecated_8hpp" name="deprecated.hpp" local="no" imported="no">vsomeip/deprecated.hpp</includes>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <class kind="struct">vsomeip_v3::ip_address_t</class>
    <class kind="struct">vsomeip_v3::remote_info_t</class>
    <class kind="struct">vsomeip_v3::message_acceptance_t</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="typedef">
      <type>std::function&lt; void(service_t, instance_t, availability_state_e) &gt;</type>
      <name>availability_state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aee08397af82d872d16f5fd6ff1b6eeb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(client_t, const vsomeip_sec_client_t *, const std::string &amp;, bool)&gt;</type>
      <name>subscription_handler_sec_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a32848ea9eb155daf9288a1421eae190c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(client_t, const vsomeip_sec_client_t *, const std::string &amp;, bool, std::function&lt; void(bool)&gt;)&gt;</type>
      <name>async_subscription_handler_sec_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a7e0adb2309710ba2eee3376674960dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const remote_info_t &amp;)&gt;</type>
      <name>sd_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0c6ab7603f9a47ff36234c1cf22c78aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const message_acceptance_t &amp;)&gt;</type>
      <name>message_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac0fbda693d117d22a405bc5def0e6a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VSOMEIP_DEPRECATED_UID_GID typedef std::function&lt; bool(client_t, uid_t, gid_t, const std::string &amp;, bool) &gt;</type>
      <name>subscription_handler_ext_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a7819face52fd002d209976440f3b2cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VSOMEIP_DEPRECATED_UID_GID typedef std::function&lt; void(client_t, uid_t, gid_t, const std::string &amp;, bool, std::function&lt; void(const bool) &gt;)&gt;</type>
      <name>async_subscription_handler_ext_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f10e832d6f6c3fe49c652e264152a8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>deserializable.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/internal/</path>
    <filename>compat_2vsomeip_2internal_2deserializable_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::deserializable</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>deserializable.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/internal/</path>
    <filename>vsomeip_2internal_2deserializable_8hpp.html</filename>
    <class kind="class">vsomeip_v3::deserializable</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>serializable.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/internal/</path>
    <filename>compat_2vsomeip_2internal_2serializable_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::serializable</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>serializable.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/internal/</path>
    <filename>vsomeip_2internal_2serializable_8hpp.html</filename>
    <class kind="class">vsomeip_v3::serializable</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2message_8hpp.html</filename>
    <includes id="compat_2vsomeip_2message__base_8hpp" name="message_base.hpp" local="yes" imported="no">../../compat/vsomeip/message_base.hpp</includes>
    <class kind="class">vsomeip::message</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2message_8hpp.html</filename>
    <includes id="deprecated_8hpp" name="deprecated.hpp" local="no" imported="no">vsomeip/deprecated.hpp</includes>
    <includes id="vsomeip__sec_8h" name="vsomeip_sec.h" local="no" imported="no">vsomeip/vsomeip_sec.h</includes>
    <class kind="class">vsomeip_v3::message</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>message_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2message__base_8hpp.html</filename>
    <includes id="interface_2compat_2vsomeip_2enumeration__types_8hpp" name="enumeration_types.hpp" local="yes" imported="no">../../compat/vsomeip/enumeration_types.hpp</includes>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../compat/vsomeip/export.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2deserializable_8hpp" name="deserializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/deserializable.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2serializable_8hpp" name="serializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/serializable.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::message_base</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>message_base.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2message__base_8hpp.html</filename>
    <class kind="class">vsomeip_v3::message_base</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>payload.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2payload_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../compat/vsomeip/export.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2deserializable_8hpp" name="deserializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/deserializable.hpp</includes>
    <includes id="compat_2vsomeip_2internal_2serializable_8hpp" name="serializable.hpp" local="yes" imported="no">../../compat/vsomeip/internal/serializable.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2primitive__types_8hpp" name="primitive_types.hpp" local="yes" imported="no">../../compat/vsomeip/primitive_types.hpp</includes>
    <class kind="class">vsomeip::payload</class>
    <namespace>vsomeip</namespace>
  </compound>
  <compound kind="file">
    <name>payload.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2payload_8hpp.html</filename>
    <class kind="class">vsomeip_v3::payload</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2plugin_8hpp.html</filename>
    <class kind="class">vsomeip::plugin</class>
    <class kind="class">vsomeip::plugin_impl</class>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_PLUGIN</name>
      <anchorfile>compat_2vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>af16e77982b62ded21679ed7c59633d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN_INIT_SYMBOL</name>
      <anchorfile>compat_2vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>a8da24b9f43d2da2a76bbb6fe093dff4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN</name>
      <anchorfile>compat_2vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>ab0f837409bed80730a79fe06fef49ec4</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; plugin &gt;(*</type>
      <name>create_plugin_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a453845ec84f23c9c4e4495dc2fab00a3</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>create_plugin_func(*</type>
      <name>plugin_init_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae39557b5d78d0c6fb0d46a522db80092</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::plugin</class>
    <class kind="class">vsomeip_v3::plugin_impl</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_IMPORT_EXPORT_PLUGIN</name>
      <anchorfile>vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>af16e77982b62ded21679ed7c59633d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN_INIT_SYMBOL</name>
      <anchorfile>vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>a8da24b9f43d2da2a76bbb6fe093dff4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PLUGIN</name>
      <anchorfile>vsomeip_2plugin_8hpp.html</anchorfile>
      <anchor>ab0f837409bed80730a79fe06fef49ec4</anchor>
      <arglist>(class_name)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>application_plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/plugins/</path>
    <filename>compat_2vsomeip_2plugins_2application__plugin_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::application_plugin</class>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_APPLICATION_PLUGIN_VERSION</name>
      <anchorfile>compat_2vsomeip_2plugins_2application__plugin_8hpp.html</anchorfile>
      <anchor>aef06458d789996a3da8d3f9a112bfb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>application_plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/plugins/</path>
    <filename>vsomeip_2plugins_2application__plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::application_plugin</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_APPLICATION_PLUGIN_VERSION</name>
      <anchorfile>vsomeip_2plugins_2application__plugin_8hpp.html</anchorfile>
      <anchor>aef06458d789996a3da8d3f9a112bfb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>pre_configuration_plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/plugins/</path>
    <filename>compat_2vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</filename>
    <includes id="compat_2vsomeip_2export_8hpp" name="export.hpp" local="yes" imported="no">../../../compat/vsomeip/export.hpp</includes>
    <class kind="class">vsomeip::pre_configuration_plugin</class>
    <namespace>vsomeip</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PRE_CONFIGURATION_PLUGIN_VERSION</name>
      <anchorfile>compat_2vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</anchorfile>
      <anchor>ab586aba6ce3e46ebd1da26a2ef93716e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pre_configuration_plugin.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/plugins/</path>
    <filename>vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</filename>
    <class kind="class">vsomeip_v3::pre_configuration_plugin</class>
    <namespace>vsomeip_v3</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_PRE_CONFIGURATION_PLUGIN_VERSION</name>
      <anchorfile>vsomeip_2plugins_2pre__configuration__plugin_8hpp.html</anchorfile>
      <anchor>ab586aba6ce3e46ebd1da26a2ef93716e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vsomeip.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/compat/vsomeip/</path>
    <filename>compat_2vsomeip_2vsomeip_8hpp.html</filename>
    <includes id="compat_2vsomeip_2application_8hpp" name="application.hpp" local="yes" imported="no">../../compat/vsomeip/application.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2constants_8hpp" name="constants.hpp" local="yes" imported="no">../../compat/vsomeip/constants.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2defines_8hpp" name="defines.hpp" local="yes" imported="no">../../compat/vsomeip/defines.hpp</includes>
    <includes id="compat_2vsomeip_2message_8hpp" name="message.hpp" local="yes" imported="no">../../compat/vsomeip/message.hpp</includes>
    <includes id="compat_2vsomeip_2payload_8hpp" name="payload.hpp" local="yes" imported="no">../../compat/vsomeip/payload.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2runtime_8hpp" name="runtime.hpp" local="yes" imported="no">../../compat/vsomeip/runtime.hpp</includes>
    <includes id="interface_2compat_2vsomeip_2trace_8hpp" name="trace.hpp" local="yes" imported="no">../../compat/vsomeip/trace.hpp</includes>
  </compound>
  <compound kind="file">
    <name>vsomeip.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip_2vsomeip_8hpp.html</filename>
  </compound>
  <compound kind="file">
    <name>deprecated.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>deprecated_8hpp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEPRECATED_UID_GID</name>
      <anchorfile>deprecated_8hpp.html</anchorfile>
      <anchor>adc7310cfb233562171bd41fdec1ed968</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>logger.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/internal/</path>
    <filename>logger_8hpp.html</filename>
    <class kind="class">vsomeip_v3::logger::message</class>
    <namespace>vsomeip_v3</namespace>
    <namespace>vsomeip_v3::logger</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_FATAL</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>abc5934372b22c8045d3472167e120ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_ERROR</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a18bce98f7ee6cc3026f40472a6502c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_WARNING</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>abc1ce0dda71532fdbc30a4844dda83c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_INFO</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a5ef24a765255ae199ce3c5e029035e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_DEBUG</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a661df4414e53f7ff78dcbe187a9e3d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_TRACE</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a3db772adc918f6ebc59cef6e9adf556b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOG_DEFAULT_APPLICATION_ID</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a425a955c474354b0808b0cfdc399469e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_LOG_DEFAULT_APPLICATION_NAME</name>
      <anchorfile>logger_8hpp.html</anchorfile>
      <anchor>a82d302e8da26b0d5afb1a78bcc441f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>level_e</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>af19b0f174f174e494d4cdeb6b9f140c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_FATAL</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abe1620a06072715114c470105c372efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abfddb3047122bbae740f88f47d4d39eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_WARNING</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b81cb93e1bd604c2e0d7cb74cd7b02c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_INFO</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b35e17a110c5323b007c1015f5a062b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_DEBUG</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a88acccf741c76e4f81b618cc5201b2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_VERBOSE</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a863ead09626fc9409830856e6cbecd51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>policy_manager.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/internal/</path>
    <filename>policy__manager_8hpp.html</filename>
    <includes id="deprecated_8hpp" name="deprecated.hpp" local="no" imported="no">vsomeip/deprecated.hpp</includes>
    <class kind="class">vsomeip_v3::policy_manager</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>structured_types.hpp</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>structured__types_8hpp.html</filename>
    <class kind="struct">vsomeip_v3::debounce_filter_t</class>
    <namespace>vsomeip_v3</namespace>
  </compound>
  <compound kind="file">
    <name>vsomeip_sec.h</name>
    <path>/home/haswell/Projects/vsomeip-quic/interface/vsomeip/</path>
    <filename>vsomeip__sec_8h.html</filename>
    <class kind="struct">vsomeip_sec_client_t</class>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEC_PORT_UNUSED</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>ae05774d64583e40ab3a73d4f91decdc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VSOMEIP_SEC_PORT_UNSET</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a960925bdd4b1b940b356a178b35c5dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>vsomeip_sec_service_id_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a971b4f60fb6a5f6b114a9f0b1a438169</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>vsomeip_sec_instance_id_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>acc0378a1911f376601f4abfed13ea632</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>vsomeip_sec_member_id_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a6d16c1d19b8b7290e6efcdca150f8ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>vsomeip_sec_ip_addr_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>ab6740d080bfffe2d8feed40fc3cd43bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>vsomeip_sec_network_port_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a7882147d67ae0719e70c67b7f00bcd1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uid_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>af2306308627701b66dc6f3babe821ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>gid_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>aa7352f1065fe606194d792e2b292cf83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>vsomeip_sec_acl_result_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a6a72db801325dcd4fc166f67470a68b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VSOMEIP_SEC_OK</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a6a72db801325dcd4fc166f67470a68b3ad30c703d40458e08c68946dced55a36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VSOMEIP_SEC_PERM_DENIED</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a6a72db801325dcd4fc166f67470a68b3a60b2c21c92040574558397491d381f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>vsomeip_sec_policy_result_t</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>aaeaded594160e919fecdd1fa2682f989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VSOMEIP_SEC_POLICY_OK</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>aaeaded594160e919fecdd1fa2682f989a4647b71425b8eb00a06112a25c4121eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VSOMEIP_SEC_POLICY_NOT_FOUND</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>aaeaded594160e919fecdd1fa2682f989ab6a03baa2c1f464cc693d3d200442755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VSOMEIP_SEC_POLICY_INVALID</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>aaeaded594160e919fecdd1fa2682f989a4e2513d1199f235d443e5f965af198f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>vsomeip_sec_policy_result_t</type>
      <name>vsomeip_sec_policy_initialize</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a46d23cc42bd092dc18d7c9fd3fbb8d1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_sec_acl_result_t</type>
      <name>vsomeip_sec_policy_authenticate_router</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>aaac0560804896a1853a8f4db47c18586</anchor>
      <arglist>(const vsomeip_sec_client_t *router)</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_sec_acl_result_t</type>
      <name>vsomeip_sec_policy_is_client_allowed_to_offer</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>ab31e190beb26aef3a73f1b24e7bf39ac</anchor>
      <arglist>(const vsomeip_sec_client_t *server, vsomeip_sec_service_id_t service, vsomeip_sec_instance_id_t instance)</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_sec_acl_result_t</type>
      <name>vsomeip_sec_policy_is_client_allowed_to_request</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a321ad65546428032f092687f77b60d9e</anchor>
      <arglist>(const vsomeip_sec_client_t *client, vsomeip_sec_service_id_t service, vsomeip_sec_instance_id_t instance)</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_sec_acl_result_t</type>
      <name>vsomeip_sec_policy_is_client_allowed_to_access_member</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>abb1e4ee023836b42d68d55b9a0040408</anchor>
      <arglist>(const vsomeip_sec_client_t *client, vsomeip_sec_service_id_t service, vsomeip_sec_instance_id_t instance, vsomeip_sec_member_id_t member)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vsomeip_sec_sync_client</name>
      <anchorfile>vsomeip__sec_8h.html</anchorfile>
      <anchor>a244b0d884028f465f7a6ff86c3ca8ca9</anchor>
      <arglist>(vsomeip_sec_client_t *client)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::accept_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1accept__operation.html</filename>
    <base>operation&lt; error_code &gt;</base>
    <member kind="function">
      <type></type>
      <name>accept_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1accept__operation.html</anchorfile>
      <anchor>a98d99d65d14a81906c0c55faecc182ce</anchor>
      <arglist>(complete_fn complete) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_state::accepting</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__state_1_1accepting.html</filename>
    <member kind="variable">
      <type>accept_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1accepting.html</anchorfile>
      <anchor>a4e88435b233055bdb03ad5383a729baf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::accepting</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1accepting.html</filename>
    <member kind="variable">
      <type>stream_accept_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1accepting.html</anchorfile>
      <anchor>a819c11193e86d333e4a220730827d37a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::acceptor</name>
    <filename>classnexus_1_1h3_1_1acceptor.html</filename>
    <member kind="typedef">
      <type>quic::detail::socket_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a36f7a579797ab859a3ac534299734a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a61da00ce19305921c9eaac83f7e35e20</anchor>
      <arglist>(server &amp;s, udp::socket &amp;&amp;socket, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a860a816985e9c0896c0f650a7b09b333</anchor>
      <arglist>(server &amp;s, const udp::endpoint &amp;endpoint, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a33503483696faacf0255c8bbf98bc4b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>local_endpoint</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a0cd20fb0951ff4d8385f498a3102e647</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>ad9aa0835e4174dfc24d0d547f13fbff9</anchor>
      <arglist>(int backlog)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_accept</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>aa0fd7e868457577aab7e2b368ec58df6</anchor>
      <arglist>(server_connection &amp;conn, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a4ec4b2d4179e590c15b115d5bfac0530</anchor>
      <arglist>(server_connection &amp;conn, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>ab7dcba38e23625235f3427bf6844614e</anchor>
      <arglist>(server_connection &amp;conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a6c484e9a15a0ce887d2765e529a77a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>server_connection</name>
      <anchorfile>classnexus_1_1h3_1_1acceptor.html</anchorfile>
      <anchor>a270a6e9922976c6ce43de74425c9cd52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::acceptor</name>
    <filename>classnexus_1_1quic_1_1acceptor.html</filename>
    <member kind="typedef">
      <type>detail::socket_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>afc9abd7ae0978725ebcf7a7f611ed833</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>a03ef84f6f5e1d5cc58bec5f8ad788026</anchor>
      <arglist>(server &amp;s, udp::socket &amp;&amp;socket, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>a273e52128c34a797e838b8040e25513d</anchor>
      <arglist>(server &amp;s, const udp::endpoint &amp;endpoint, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>accb43dc7b20480765ca72a61944cd414</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>local_endpoint</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>af05c5bf8384f9025297b02ef303ac43f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>ad174ae57ea72dc8a6054ff6415163299</anchor>
      <arglist>(int backlog)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_accept</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>a6f3aec8dab0b8c4c1bde4f1fd03afcf2</anchor>
      <arglist>(connection &amp;conn, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>a276bb5adfade5db7aa15bdae73c5c865</anchor>
      <arglist>(connection &amp;conn, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>a8a741589740196a6ef3381a7945c1372</anchor>
      <arglist>(connection &amp;conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>a63b8e40a8692ad918b5307db620792c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>connection</name>
      <anchorfile>classnexus_1_1quic_1_1acceptor.html</anchorfile>
      <anchor>adb115488bb4890f7fc705ee527ad71e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::application</name>
    <filename>classvsomeip_1_1application.html</filename>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; major_version_t, minor_version_t &gt; &gt; &gt;</type>
      <name>available_t</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad1ab5674b0bf63b07a10524f005d8097</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; ip_address_t, std::string &gt;</type>
      <name>offer_acceptance_map_type_t</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a16fbb8370d92f78da2ed192b99e78b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aac62a81a528f8c1e915ed5882daed8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a70e10ed972b959c6e87636c5b46c809b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a90a0ed2e4c259af1703f69053d80e048</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>afcecd2562a59e4b52fd5db8f2993517d</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; _configuration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>af3e793e3b7e305c722279adebafcb2ae</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a7d7d17763e65ba5235ce89ceddbc7926</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad747e3973ff37206da3d64add948c462</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aff5ea704dba08a9eb65ad08e1e3552c7</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a4aac7f522a9471050a2aaa6500a1c1be</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a218181bac39eb3c3efddb44ea5cb48a6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a1ac12fc590c19a541bc0922608b257b8</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a1c86b5e8983c87e655a36eadb8cec80e</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR, bool _use_exclusive_proxy=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aedb066c408395ad4347a59d32b96b24d</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ab6f369a1e2f9a0e874ae0cce76317b7d</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a9ad8b4cd656a7d91f8a928681c97655d</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a869279b593b4b7fb4fab497233af026e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major=DEFAULT_MAJOR, subscription_type_e _subscription_type=subscription_type_e::SU_RELIABLE_AND_UNRELIABLE, event_t _event=ANY_EVENT)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a8fd757a864dacb99a3469a1111693659</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a8eaa6f0b26ee15f815dd69d675dafe86</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a160deb2493f3267c5820e1dc786a8585</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message, bool _flush=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a20465ba007ae4a866f35269ea178ffe5</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a795c77e7f807048af460a8fdb91631db</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a90766c085b0a07337288b48d6a7091af</anchor>
      <arglist>(state_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a0c050cbd46593a99e2adc901718ff04f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a3de8b8ee3fd7b3224e67a08ba012adad</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, message_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a17134ae1d754fd4f74469eb9551ac286</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a5146910ea69e3c99a5a7a133c969115b</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_handler_t _handler, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad1b7d018383eb833a9db517d6f8eae5d</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ad09cb06f90776a0114302f52c2ba761d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, subscription_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a0c13f4d5a15dc5787fd0fc9a18010a91</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>aea694043dbfad739015c5eadf5e8bb73</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, error_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a6ac56226b72aee23be6a605fad03e3c8</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a72089e5a8ecadb951a22eaa1c495632b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a3b2be0667c0921e840879312d4362623</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a695fd70699d0f93cde01d034dd6bdcb5</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field, std::chrono::milliseconds _cycle, bool _change_resets_cycle, const epsilon_change_func_t &amp;_epsilon_change_func)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a2fb8cc244b6ec082f06715d7506c2f5f</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a4a15aaf49661771b835b9edb45f65d45</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a78106b3a87d28b39bff559c4d5fa2d54</anchor>
      <arglist>(available_t &amp;_available, service_t _service=ANY_SERVICE, instance_t _instance=ANY_INSTANCE, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a852bc268f36b2dfd4e43f49d563d2261</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force, bool _flush) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>abb1964371299bfded086276ebabb8ca0</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force, bool _flush) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a1319fc1cb1b008bd6bbfa0176107c120</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a5825ac5db1125885131d7d10122ccf32</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>afe7f26ba08e9ee4d06df8d2679eee18e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a2a75e5188727542eeafd13c2dd000a7c</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a5cf75041f9c7b251c2ffd45839ddfd35</anchor>
      <arglist>(offer_type_e _offer_type, offered_services_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a8641dc294bacae530e48a2589835cf0a</anchor>
      <arglist>(watchdog_handler_t _handler, std::chrono::seconds _interval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a085cd6a2056c79c09471ea37736ef854</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ac62a5f4b9fee80b8fe77286d2e1753da</anchor>
      <arglist>(ip_address_t _address, const std::string _path, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual offer_acceptance_map_type_t</type>
      <name>get_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a51f77cd2ea1b577f7500a24716a03c89</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_offer_acceptance_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a85eaa0f71db7638918c791004d66eee9</anchor>
      <arglist>(offer_acceptance_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a7ed8ea4153dd226aa74f358d36fabdfc</anchor>
      <arglist>(reboot_notification_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a751d73500d077e3143faff9ca9cbab1e</anchor>
      <arglist>(routing_ready_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a463b79ed15ff195bd2c4361139ccd37a</anchor>
      <arglist>(routing_state_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a07da14015cdd089060923d6dea4fa225</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>a84a4bfb51748e4397afc058a63939f6a</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, security_update_handler_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application.html</anchorfile>
      <anchor>ae6f9c793f01edcc12e6abec1ff4c2eb6</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, security_update_handler_t _handler)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::application</name>
    <filename>classvsomeip__v3_1_1application.html</filename>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; major_version_t, minor_version_t &gt; &gt; &gt;</type>
      <name>available_t</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4010c36a9d9a167b1a731886ab1c0ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; remote_info_t, std::string &gt;</type>
      <name>sd_acceptance_map_type_t</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aaba602c93c8737b7bf4ec8006735e978</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a34855aa4e6e7d88ff0f148660c929431</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ac4fd261dfb7d18136a4d5c65012d98d9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab4a5068c29679bb58aeb7ec9ff44462b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual diagnosis_t</type>
      <name>get_diagnosis</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a15dd8512307c1dcce4834bfd5844c44d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a053bb3b1ebdb142eae820b135c79e860</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab60a53c3183073ace4076805cb68e3eb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a0745c5c704256bdc29a93c42d6c54c0a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>process</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a254cec915ac96aacc593431677815c69</anchor>
      <arglist>(int _number=VSOMEIP_ALL)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual security_mode_e</type>
      <name>get_security_mode</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4e5e96bb54fba8e255a6de904c988462</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a9aa3ede83c77bd2fd5f05d28c53946b3</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aa220a441110b042cd0a5f04413081e47</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>abe52c42940216c6ba11ce111eff52ec8</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type=event_type_e::ET_EVENT, std::chrono::milliseconds _cycle=std::chrono::milliseconds::zero(), bool _change_resets_cycle=false, bool _update_on_change=true, const epsilon_change_func_t &amp;_epsilon_change_func=nullptr, reliability_type_e _reliability=reliability_type_e::RT_UNKNOWN)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>add269b653d339e3bd76a79dc0d7e136c</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a7c0923a15d27d2d26e99942fc684583e</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aaca58eed126c023c5dc2e279b0ee1d0b</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a655f07b44bed30de8086c56114365221</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type=event_type_e::ET_EVENT, reliability_type_e _reliability=reliability_type_e::RT_UNKNOWN)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1b569834ad049f4c2f88bdc468a9cdaf</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a11a3d15baeb8ecfc1bc99a2772baab8d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major=DEFAULT_MAJOR, event_t _event=ANY_EVENT)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a62433249bcb229ad02cc275a64b19185</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1c8f1613d9a46af2a0ba9e3244f70507</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aba67c7f2d69c5e1415a7dcc7c6823a3e</anchor>
      <arglist>(available_t &amp;_available, service_t _service=ANY_SERVICE, instance_t _instance=ANY_INSTANCE, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4b5b65d25e928362362596710e478886</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>add9f2e3cd2a78eb6f1ede01b96274af9</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af55b68dd95f3a47de61d5064f471b505</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af81f122e26b2d98a4a74f44d25a49e70</anchor>
      <arglist>(const state_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a2b25c85186dd44745904d267cb1e9e04</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a2fe981ad769810829c970ea8bb463fbc</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, const message_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a21618c7b697424a4f36d1f3f2574ad1f</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a7d8eaa8e6f24c2f44916b5cabcc84b22</anchor>
      <arglist>(service_t _service, instance_t _instance, const availability_handler_t &amp;_handler, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>adf2acb46d1e54ce0d873810c34907110</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_DEPRECATED_UID_GID void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a41b440a2597b675f25d36a1c02e7de38</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const subscription_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_DEPRECATED_UID_GID void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a364be474aa5a385995e6bb554aef3d52</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const async_subscription_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a55fbd3c628fef81e6e72a2282a62c081</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a24b7c06da39416d888691334ab38c04e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a8a65b2d6143875566ab36b3a838c9b85</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af3a2a18700955404c29e8ff6abd402e0</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ab6cd4ad804134615d15d3e36558f5452</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a3ee13365fd9e30e81a683979fb73d5e2</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1cee1318798c97ef33ef3fe0e9767479</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ac3a8217972a6d9ce01c671b3851097f3</anchor>
      <arglist>(offer_type_e _offer_type, const offered_services_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>af5d0e136ed13cf1c413ab3aeb35df1a6</anchor>
      <arglist>(const watchdog_handler_t &amp;_handler, std::chrono::seconds _interval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ad52d38485d8b9b84fcfc46d2cafcd109</anchor>
      <arglist>(const remote_info_t &amp;_remote, const std::string &amp;_path, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a395191d4d94d5e22be8fce8e9afb1ebf</anchor>
      <arglist>(const sd_acceptance_map_type_t &amp;_remotes, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual sd_acceptance_map_type_t</type>
      <name>get_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a0e215b86e114151e9275c6bdec25e820</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a08852703b51ce284bb5981fe10875e8c</anchor>
      <arglist>(const sd_acceptance_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ae6ac890e2423e85c320a16ea0b88005e</anchor>
      <arglist>(const reboot_notification_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a06a2b7de068757aa6e6e5bde68ec6c3a</anchor>
      <arglist>(const routing_ready_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4bdad753cf6664ceea170b4b5dd85b6e</anchor>
      <arglist>(const routing_state_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a67b59c477418479abebea2f64497e354</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a77994b5d3c0fda5384d20518056f7669</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, const security_update_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a4522f51613e8b4257f527f639e30ca99</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const security_update_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_DEPRECATED_UID_GID void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a68e654148a820fd7381cf503c741decb</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const subscription_handler_ext_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_DEPRECATED_UID_GID void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a949b8ab1dbd9faf95b435810723ec0cb</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const async_subscription_handler_ext_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe_with_debounce</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a1725aea00325c983581218ac1c7f01c2</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const debounce_filter_t &amp;_filter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_message_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>aa3ec92d6e46a9b56e6b7389cdfec8c08</anchor>
      <arglist>(const message_acceptance_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; std::string, std::string &gt;</type>
      <name>get_additional_data</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a516c2ad9f162dd5df8dc12b97182f130</anchor>
      <arglist>(const std::string &amp;_plugin_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a37bcaac458596267cbe08e6fe6871c53</anchor>
      <arglist>(service_t _service, instance_t _instance, const availability_state_handler_t &amp;_handler, major_version_t _major=ANY_MAJOR, minor_version_t _minor=ANY_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a154c5ffed2d7ca4b49c1b6a3b83d8692</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const subscription_handler_sec_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>a0f8c937af25b371a52a1341c2f458dda</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_sec_t _handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_message_handler_ext</name>
      <anchorfile>classvsomeip__v3_1_1application.html</anchorfile>
      <anchor>ad8eaa140211ccd5f882668479935422a</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, const message_handler_t &amp;_handler, handler_registration_type_e _type)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::application_configuration</name>
    <filename>structvsomeip__v3_1_1cfg_1_1application__configuration.html</filename>
    <member kind="variable">
      <type>client_t</type>
      <name>client_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>a7ab8067cc26334d6a5c8716b6acca030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>max_dispatchers_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>ac724d230d1f6646aa553b5f6fbcd26d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>max_dispatch_time_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>a55822970f1fc97794ed7efd3b8329f8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>thread_count_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>aa95878cd6550bdd3edac26fa6ecb75fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>request_debouncing_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>a0795170314fca35f49e5c5fa07116ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; plugin_type_e, std::set&lt; std::string &gt; &gt;</type>
      <name>plugins_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>acb39a95bc3d70d1c5d268dbe131a4ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nice_level_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>a99508792b519fdb5f64741a13342f6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>debounce_configuration_t</type>
      <name>debounces_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>a24a54adad956fc950fe88c41d9f2be45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>has_session_handling_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1application__configuration.html</anchorfile>
      <anchor>af095cc548901ff8e070a6441612bdea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::application_impl</name>
    <filename>classvsomeip_1_1application__impl.html</filename>
    <base>vsomeip_v3::application</base>
    <member kind="function">
      <type></type>
      <name>application_impl</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a2ab313376d14e630bf15d929000d0436</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~application_impl</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a7c32cfb6767560461a476a264f8e06c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>af1967a41620993ab8888cff834dbd713</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a68bb208ff12c11812c195bd00abc98f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8abb94446e23373672e55d620880ae53</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; _configuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a0d47278a6304604e50b33b3f8c8b241d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a613d36eae6a766535602a804290475cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>acefe52617bb819a82ecb984c808adb7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a5f2738e8a7bc15cf74db5dd46c565136</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a65f497de3e2e971ae647298de135df19</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9d062bf1eeb3562de6736213d2fe7bea</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a37a41dd4fb686045ab11c95b329920c0</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aefdba2150dff883d76ba91465e68ef11</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, bool _use_exclusive_proxy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ac07c098c495d5540c500d92d6e5035e2</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad3997c98fda3f1ead8a5bd64acf68056</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>afbee8455f12f74448e792c8f2018ed81</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>abe0e9794acc3ce4058729c17889e3dbf</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, subscription_type_e _subscription_type, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a21503dc68925017d8b8fb532b1b6d632</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8e09d8cd1a2bf7ea631b8e71bfc687b6</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aa7a5b4bde09a3f42182f173266f46bf5</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message, bool _flush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a013db003cf546a1d478d332e1fa046fc</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad5756141c4c214d376319ef0d88aa50b</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9a3e23613fa2796b3751a7b06969d109</anchor>
      <arglist>(state_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a689db7170235377294d34fff5a7bc81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a27b22c451c1fcca592b03abbfb99a794</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, message_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9bafc6a5d318d473e145c165b31cfff8</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a189ba1115dad410387a1969a39926ce4</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_handler_t _handler, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>af4b1e4b9236e5a8520c8ac358a3f4818</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>adaf2e727e2758a4d8e639aa5d48f0c6a</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, subscription_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a5d379ce7331beb83466d4335c240f5d5</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a93135ddd3eb3360cafa729ed8c13f335</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, error_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_subscription_error_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a3a02702239b6a506c09a2e40b70d3e5f</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a106c5bc08a45e3ec211670033a33668e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a88a6f2a494e12f251661b6b7fcb66f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a68ba760cfccd8b580bcd683aaeec4c76</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, bool _is_field, std::chrono::milliseconds _cycle, bool _change_resets_cycle, const epsilon_change_func_t &amp;_epsilon_change_func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ac3c8211f7c8ee5debcb7a56b95f52ea2</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>acff7f84a704a66370a9ad464a0d55945</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a352bd9a5b950cc55201705f52500b4b3</anchor>
      <arglist>(available_t &amp;_available, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a22c04d4142a9b76a64b1379572d40f18</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force, bool _flush) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a1d22a7ad412ac5af54b5bc9a7a3778dc</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force, bool _flush) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a9701e63c90a7e5d0d84ffe7d01b736ce</anchor>
      <arglist>(routing_state_e _routing_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aae8bcab2be1941c0a2e46efe25332b74</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ac974f38048cfa0d7238ba4239cd752e7</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a7cb483935be43d19b8e1dda8e818afed</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ae4bc393e14f111cf867b428cb3a3e8da</anchor>
      <arglist>(offer_type_e _offer_type, offered_services_handler_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8bd4b1073adc201deb837d788ef3962e</anchor>
      <arglist>(watchdog_handler_t _handler, std::chrono::seconds _interval)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a22a334c7810141e1c1494bcade575617</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a40793ba2988b5d7a03da1f0477454c8c</anchor>
      <arglist>(ip_address_t _address, const std::string _path, bool _enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual offer_acceptance_map_type_t</type>
      <name>get_offer_acceptance_required</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a8fbfd008cb1c32ea53a59ea33086288b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_offer_acceptance_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a925486067be0c63c35d6d6a40ad2d847</anchor>
      <arglist>(offer_acceptance_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>aa35b2b5a1842b7725ec3a828b9be5869</anchor>
      <arglist>(reboot_notification_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a19a610abcdff0ce6cefa5f4dd9133cc4</anchor>
      <arglist>(routing_ready_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad64aee4b609d6b7ec0b3f0aef9f5bacc</anchor>
      <arglist>(routing_state_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a55b6fd6470b09e850c92d13bd356b6dd</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>a80f0f90d4da517b15abc5ff337e3745c</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, security_update_handler_t _handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip_1_1application__impl.html</anchorfile>
      <anchor>ad0e3d886e3a77b12fd2ee14cea28b626</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, security_update_handler_t _handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::application_impl</name>
    <filename>classvsomeip__v3_1_1application__impl.html</filename>
    <base>vsomeip_v3::application</base>
    <base>vsomeip_v3::routing_manager_host</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>application_impl</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ace18bf1ead67861bef64d45702c7e962</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~application_impl</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab398af9566626493ee21e54b8804e36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a871a131a16bbe4505ea4a9929edfb355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0fae7353fe2d472323141a0584aac052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0541e3ee78a5dd8978ea8d34c0da2e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>process</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a2c0a4b9d51a16f958a23c2718dd946ea</anchor>
      <arglist>(int _number)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT security_mode_e</type>
      <name>get_security_mode</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9c2ba23f3c5e991d8d37f3b02ff29190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a5596383cc2fc0702add858ff3b63edd4</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a73ccd48801bf1e7f8b6d4cf89d5269e3</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a489cb0386fd1cb3793f8e0c3bde56f23</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, const epsilon_change_func_t &amp;_epsilon_change_func, reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>stop_offer_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a11cdfd50051128cff45f911fb61bde80</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af0b5dcc6fb5e57f7cec707549965d9cb</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab926ce544449a8b1fd1e5c94aa976ee8</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>request_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aa7d5f6558d8fa4386860efa1bd7f32c6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>release_event</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a09abe57742878ef8d37f52d3a1ea3b32</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a3cb0b7fa00258c15d84fc5273824041e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>subscribe_with_debounce</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aba62568e0ee87d72f86083dc0fb4ba1c</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const debounce_filter_t &amp;_filter)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ac30c6405d916c94cc44806dbf495c075</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a16711b8b8f056b910f46e79c8dada94b</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a27e54ddb0579d2f42f2111a6a3e87deb</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a6ce9cd6719f5127e1c6cd5ec0fcadd3f</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>afb97269cda7216511a45ba70653254e6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aba02a924bbe32614b7ff85630923a9e7</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0b599cad9d21ac229c9f55d3042d12fb</anchor>
      <arglist>(const state_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab978000beea22935b93606a1e64a3f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ada6ef31bab45a33294f8cdd515863fcb</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, const message_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_message_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a49da06aed82ffe5a380382a9501f160b</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a912198da292e56b52b85fe04811343aa</anchor>
      <arglist>(service_t _service, instance_t _instance, const availability_handler_t &amp;_handler, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a34da8dbb61ce856cff02c17065953013</anchor>
      <arglist>(service_t _service, instance_t _instance, const availability_state_handler_t &amp;_handler, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_availability_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a556601ec642cdcf60f6b9bcd8fb6ff19</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aeea92b43797415b8e326068786e5f0e2</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const subscription_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ac247127631e2460702576c9d47e83c00</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const subscription_handler_ext_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a87d3215b7a4bdf9e1b41afb23bcce3bb</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad5494ddc3652f627beb808b222345ca5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af1d8ccff7794080797042056181baa45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a75368393947aaf17b2f35ac091e1d1e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>afa2c0e8991c03abf0ead74634d76224b</anchor>
      <arglist>(const client_t &amp;_client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a043cd266b2ade259473c141fa8d64cf2</anchor>
      <arglist>(bool _is_request)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const vsomeip_sec_client_t *</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a11b15c30c48273599beea00291c2c17f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sec_client_port</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a3a4db174e4bd494959a8921ac4a79760</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT diagnosis_t</type>
      <name>get_diagnosis</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a304bbf55a90750999f6eab70e7a76a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad8bd3f14e98751e7d424b7d6e040ea79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; configuration_public &gt;</type>
      <name>get_public_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a12d648c1a42a42253f827a7cff8bb4d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a2d174e6c74b947f3999b1051467ba19a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_state</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a80547c72efa06919a9edc5638f98e6f7</anchor>
      <arglist>(state_type_e _state)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a040efb0c158b5c963e838c2fdcaf0bd2</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_state_e _state, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9b08037552ef71218687e8270d1b11cc</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; &amp;&amp;_message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_subscription</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a828f6420678440a639822cb4bf9283c1</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client, const vsomeip_sec_client_t *_sec_client, const std::string &amp;_env, bool _subscribed, const std::function&lt; void(bool)&gt; &amp;_accepted_cb)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_subscription_status</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aed21b4bdf38ea74bbb3970be945207e5</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, uint16_t _error)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a204ad2306b4900e4574744c8cb40b3e1</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, subscription_status_handler_t _handler, bool _is_selective)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unregister_subscription_status_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>af11551502585c43d173a8104b8435c60</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT routing_manager *</type>
      <name>get_routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aef05b83f0b5c360ef749a466dc208455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>are_available</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ae72c43aa5e95fb803945ae6e445d2053</anchor>
      <arglist>(available_t &amp;_available, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>abc2f6e4da3b50ee827436b5650baca2f</anchor>
      <arglist>(routing_state_e _routing_state)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>clear_all_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a0e2c06652e0f0117c8bf517cd27e7ff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_offered_services_async</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a313a59a3ea12f0a6dd85778ff05039b1</anchor>
      <arglist>(offer_type_e _offer_type, const offered_services_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>on_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a2327edc62bc9013973fbd6bca9e1368f</anchor>
      <arglist>(std::vector&lt; std::pair&lt; service_t, instance_t &gt;&gt; &amp;_services)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_watchdog_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a4de88622e3eecee44df5d6cc1f8c69a1</anchor>
      <arglist>(const watchdog_handler_t &amp;_handler, std::chrono::seconds _interval)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab7ea4b0df8458ad539726f537c89f07d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const async_subscription_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a65c9c3e2f78d0ec47bd95cfc0f0bfb9f</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const async_subscription_handler_ext_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aa0663119b8ed533d47ba6f60cdf1d6be</anchor>
      <arglist>(const remote_info_t &amp;_remote, const std::string &amp;_path, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ad6846c8285289c4034dc3215ced72c87</anchor>
      <arglist>(const sd_acceptance_map_type_t &amp;_remotes, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT sd_acceptance_map_type_t</type>
      <name>get_sd_acceptance_required</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a1f69f6d13e35fed2d25ad00efb3fd956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a720a61ae66682857d66e68c07b0d6fc9</anchor>
      <arglist>(const sd_acceptance_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a995f4d86182d11121e08cf1e26b415aa</anchor>
      <arglist>(const reboot_notification_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>aa36e7cfd183d88a18f68351b40031410</anchor>
      <arglist>(const routing_ready_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a7d985a504ee1640236626318fde6148f</anchor>
      <arglist>(const routing_state_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>update_service_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a799eaf017b47a550b52b7c6a2cf0dd13</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool _offer)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab07a0751bc5fd4f6d85b80269b3d657f</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, std::shared_ptr&lt; policy &gt; _policy, std::shared_ptr&lt; payload &gt; _payload, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a3c62dfb0b862e0ffcf891e87f734cbfd</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_message_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a320fe2378f6d546b9fac900d706f84c5</anchor>
      <arglist>(const message_acceptance_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::map&lt; std::string, std::string &gt;</type>
      <name>get_additional_data</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9ea26a79360e73cf2d780e72c8282a50</anchor>
      <arglist>(const std::string &amp;_plugin_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a9ee3ce5c0e5179b3fdfb2ba48d7d0c84</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const subscription_handler_sec_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_async_subscription_handler</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>ab79a407a85f128c6336c59a89f59d6ba</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, async_subscription_handler_sec_t _handler)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>register_message_handler_ext</name>
      <anchorfile>classvsomeip__v3_1_1application__impl.html</anchorfile>
      <anchor>a80cfb93cf380b13df69b70dd01afd72c</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, const message_handler_t &amp;_handler, handler_registration_type_e _type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::application_plugin</name>
    <filename>classvsomeip_1_1application__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application_plugin</name>
      <anchorfile>classvsomeip_1_1application__plugin.html</anchorfile>
      <anchor>ab6a0e6e008e0e8b76166eed0652c946e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_application_state_change</name>
      <anchorfile>classvsomeip_1_1application__plugin.html</anchorfile>
      <anchor>ad921f9b71b32a0446ce12148f1d3d981</anchor>
      <arglist>(const std::string _application_name, const application_plugin_state_e _app_state)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::application_plugin</name>
    <filename>classvsomeip__v3_1_1application__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~application_plugin</name>
      <anchorfile>classvsomeip__v3_1_1application__plugin.html</anchorfile>
      <anchor>a0aac406ca6d31c43c928595172320bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_application_state_change</name>
      <anchorfile>classvsomeip__v3_1_1application__plugin.html</anchorfile>
      <anchor>ade664afd2f49a869ba694aa77e968d88</anchor>
      <arglist>(const std::string _application_name, const application_plugin_state_e _app_state)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::assign_client_ack_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1assign__client__ack__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>assign_client_ack_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__ack__command.html</anchorfile>
      <anchor>a75c1287cde5ec9ded938af11904707eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__ack__command.html</anchorfile>
      <anchor>abf34e84155558b261b0c481024d96ced</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__ack__command.html</anchorfile>
      <anchor>a9043cee33731ab3204a8edaa69d85bea</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_assigned</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__ack__command.html</anchorfile>
      <anchor>ab20d725088ec84cb99a323c0e4a0c0fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_assigned</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__ack__command.html</anchorfile>
      <anchor>af20bc1450f0d129feebf10017439bf45</anchor>
      <arglist>(client_t _assigned)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::assign_client_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>assign_client_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</anchorfile>
      <anchor>a700910ea210178e40b13ce6be46ae768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>id_e</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</anchorfile>
      <anchor>a00c1f86b03c79b7d322d36308b5638a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</anchorfile>
      <anchor>acf5ae3eb8f07c6b74004b5bee1396ed6</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</anchorfile>
      <anchor>a10204ef3abcb0ee543f3398cf6ed15f6</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</anchorfile>
      <anchor>a5a0d165c007a6b3111e5cab035612ef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1assign__client__command.html</anchorfile>
      <anchor>aacebf0d077cc10ad3e50bbd93a2b828e</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::associated_executor&lt; nexus::quic::detail::stream_open_handler&lt; Stream, Handler &gt;, Executor &gt;</name>
    <filename>structboost_1_1asio_1_1associated__executor_3_01nexus_1_1quic_1_1detail_1_1stream__open__handler5ab4bdb79b8657fdb8b64afc9b8be0b1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>associated_executor_t&lt; Handler, Executor &gt;</type>
      <name>type</name>
      <anchorfile>structboost_1_1asio_1_1associated__executor_3_01nexus_1_1quic_1_1detail_1_1stream__open__handler5ab4bdb79b8657fdb8b64afc9b8be0b1.html</anchorfile>
      <anchor>a98f9eeb2603ff096e907cc17193870da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static type</type>
      <name>get</name>
      <anchorfile>structboost_1_1asio_1_1associated__executor_3_01nexus_1_1quic_1_1detail_1_1stream__open__handler5ab4bdb79b8657fdb8b64afc9b8be0b1.html</anchorfile>
      <anchor>adc71d6b941bf858a2c59bcf95c955f84</anchor>
      <arglist>(const nexus::quic::detail::stream_open_handler&lt; Stream, Handler &gt; &amp;handler, const Executor &amp;ex=Executor()) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::async_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1async__operation.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename Operation::operation_type</type>
      <name>operation_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a103e61ee986712911868c5600d717242</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Operation::tuple_type</type>
      <name>tuple_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a540486e9c454a1934deae130de8435fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::asio::associated_executor_t&lt; Handler, IoExecutor &gt;</type>
      <name>Executor</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a95366b6381d2a24be600316f09a10375</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename boost::asio::prefer_result&lt; Executor, boost::asio::execution::outstanding_work_t::tracked_t &gt;::type</type>
      <name>Work</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a1731191d6cd8148b02b7e353f30e315e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename boost::asio::prefer_result&lt; IoExecutor, boost::asio::execution::outstanding_work_t::tracked_t &gt;::type</type>
      <name>IoWork</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a847d52265b91bb1471b0375c348839a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>async_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a07be8fdee09269746cd229883e45505d</anchor>
      <arglist>(Handler &amp;&amp;handler, const IoExecutor &amp;io_ex, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a7ffcd16eac430d958c615e0ffb22d35a</anchor>
      <arglist>(completion_type type, operation_type *op, tuple_type &amp;&amp;args)</arglist>
    </member>
    <member kind="variable">
      <type>Handler</type>
      <name>handler</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a5a90ab528728f6cb6cbbc19868a09ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; Work, IoWork &gt;</type>
      <name>ex</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1async__operation.html</anchorfile>
      <anchor>a253caffd9c95f96d06b0e104eafe1d92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::bad_setting</name>
    <filename>structnexus_1_1quic_1_1bad__setting.html</filename>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</filename>
    <member kind="variable">
      <type>socket_type</type>
      <name>socket_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</anchorfile>
      <anchor>aee0c592f19baff67fe14904045094ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>socket_ops::state_type</type>
      <name>state_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</anchorfile>
      <anchor>a8281bdee30b287020a1780a70c8f08bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>reactor::per_descriptor_data</type>
      <name>reactor_data_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext_1_1base__implementation__type.html</anchorfile>
      <anchor>a4f3c13c891ca6399ec8a0f7f112c174f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</filename>
    <member kind="variable">
      <type>socket_type</type>
      <name>socket_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</anchorfile>
      <anchor>aa77b07dd80af13dde9ae979b836a88e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>socket_ops::state_type</type>
      <name>state_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</anchorfile>
      <anchor>ae33b9ddda69f4b997638aefa50d8c7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>reactor::per_descriptor_data</type>
      <name>reactor_data_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local_1_1base__implementation__type.html</anchorfile>
      <anchor>a946879561402070193b2bbfbd82cecd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_datagram_socket_ext</name>
    <filename>classboost_1_1asio_1_1basic__datagram__socket__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>DatagramSocketService::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad5b23892613b75552c522ecee6cea3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DatagramSocketService::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa73b99ba733265009a4dee37f92f60c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a53e0359fdfd6ef996ed3fb5834f8832a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a44e780e5e28df352e12cfc174bd7479f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>acd38f7b6d6662f7525e56270f785d270</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae231f30e4c92bdd8ee5579d5d9c53468</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a31773a3a042f7aef2f58c9f3b828b49d</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_datagram_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a24872bd95603da877ff93b4a1f2040fa</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a37797e8f3a59f106a390ab68e9caeb80</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2a94bec8a1f2c0d13fbf4f4819e1ed96</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a17c8bc23c0a7dbe675b7e1275fadfef1</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a1c98d0ce897f15e6b6c5ef8d10d22d53</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af8619ed60d11fbfebc7c445d13433b9f</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ad817699382b8c9bf47d19c3ae865fd0e</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aaf6894f2dcb159a01735ad1cb6fc7d34</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a19d26a5edc55640da5c58a5a4ed7a8d6</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a475bda4b64da77476a706297fcb6d4b9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9b38730f9ce4f96a130a7afff4168b02</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a00a92ac6c3091a940446856787874740</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a2e53c752d773cecc6ddf551b5c6b6af1</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a6f79ae61d6991bbcd36ee9d1b69a9212</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8ee6ca7c5158691939d043a5b32ab1e2</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a487adba60bad3ddabae7b8653b5cc4f9</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aae47920dad9d2888d5eafc51f948d086</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>abb829743cd40e55b42f36a3fc656aee5</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aae47920dad9d2888d5eafc51f948d086</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ae35998cb2df288d299ca58eda994c4fb</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a955b02626216169c854c06e44741013f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a07816bd6567396fc9233fac01e9aa012</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8e6c24ecd2e709290bdae5414cce82d1</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>afc77825df88309611a1fd3d7cc4312d3</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af4ebef08c4324747005eb701582c545d</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>ab034483b270b85ae7d276b621d2129b7</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>af7bdc3571f0b0bce264f2d1f64e32472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type &amp;</type>
      <name>destination</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a9f615ec611c35cdd2d50665100979d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a41b19a12ef18d7d759f90735cd237fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>endpoint_type &amp;</type>
      <name>sender_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>a8000812211ac72946c3443141b339f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__datagram__socket__ext.html</anchorfile>
      <anchor>aa880be43c0c1f1522094a992e59c6c47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_socket_acceptor_ext</name>
    <filename>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>SocketAcceptorService::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad04382cacf461e76efac1a7d673cc76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SocketAcceptorService::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a43df59d248953f0b16f5fca24505a6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa981a25008a4188d7a7d739f59da25d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acd3c7037a84c9bcd7baba26290e89f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa805032d1656512f8fc0f25a9d7e6d35</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a57dc702ce6429fc437646c667727226e</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aaf99da30d73066a355a1e7560316b956</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const endpoint_type &amp;endpoint, bool reuse_addr=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_socket_acceptor_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a809609268fcbf92871851ce19f8e2d44</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab142e435249bdcae56b561bdec875f43</anchor>
      <arglist>(const protocol_type &amp;protocol=protocol_type())</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a20f7bbafac3db473d2c2da57e407f4ef</anchor>
      <arglist>(const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a88c9aad77fa21a1b231d24c281333261</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a0e3e006f42308e677a5d1821b7ceeec7</anchor>
      <arglist>(const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1d0d300b7ecc8ab9bd9b29b24bd0f22f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a5a142914d48f8b7ef1e191dc8d483452</anchor>
      <arglist>(const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1aac4424889919467eb5bace9d8f2044</anchor>
      <arglist>(const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a933e6fc25acb4f5ca02834b78fbc09fc</anchor>
      <arglist>(int backlog=socket_base::max_connections)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9489af3f713fd7e5d594af6779a4af3e</anchor>
      <arglist>(int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a924d9b44c645b57697f40b4c063f219e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a272c7d21217c96e39306a82d9401dfca</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a25946755f0d2d617588b5d6d089f76d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ad2864277f65427dbc1d19ded4fe0e8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a018c9f68c05ee49299f4ca483955ad45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac7d0f3da96ddef7a799289a7850a9065</anchor>
      <arglist>(boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aadf8f0a9c934988a4b0dba3b2cb1aeaa</anchor>
      <arglist>(const SettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1060d6b238f5a35640986b920426d1f1</anchor>
      <arglist>(const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>acff77329fbebaebac4a98fa7f23feb38</anchor>
      <arglist>(GettableSocketOption &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a2a857a4e43e8a71307fadc5514d063ee</anchor>
      <arglist>(GettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>aa331523861641a715ef7bdab6454b804</anchor>
      <arglist>(IoControlCommand &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a31e9058f90f0ac865370cff8dc744750</anchor>
      <arglist>(IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>af9b0e0c7a6ee763be10ec7b44a6889dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a137f962b730aef3f47c636f8bca3379c</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9a188fad6330b4234aa02fe3e609987a</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a4675acb94056817ab8da1ebe6105d46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ada33c82ad89584a5a97029be6a22af06</anchor>
      <arglist>(bool mode)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a166a669ce650b6ba28411c9b71f3f93d</anchor>
      <arglist>(bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a6d05ca8ef916facb10b76b52c80791fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a07f6440e9f7a5da7cdcc547566c9ea32</anchor>
      <arglist>(boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a1b0fc793990da2fb3730dba3e5138808</anchor>
      <arglist>(basic_socket&lt; Protocol1, SocketService &gt; &amp;peer, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ab83924c6ce80f155f386309808ef13d1</anchor>
      <arglist>(basic_socket&lt; Protocol1, SocketService &gt; &amp;peer, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9581c11d08dae34e6c19a63eb7d79350</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket&lt; Protocol1</arglist>
    </member>
    <member kind="function">
      <type>SocketService</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a46ff255018d79ec438849e8a24477c6e</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="function">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler</type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a134f9e53f88f0b65c9fc6b25f9078949</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(basic_socket&lt; protocol_type</arglist>
    </member>
    <member kind="function">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler SocketService endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9c6b7fb04599bf839e84f41dae0f5658</anchor>
      <arglist>(AcceptHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>SocketService &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>ac6a305082c69436d3fe04b06d3827e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler SocketService &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>afdf465304049fd57b856daf9649f29e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SocketService enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type AcceptHandler SocketService endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1basic__socket__acceptor__ext.html</anchorfile>
      <anchor>a9a6adf09fffd11869bb03712e351b4d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::basic_stream_socket_ext</name>
    <filename>classboost_1_1asio_1_1basic__stream__socket__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>StreamSocketService::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee7da23a7c17404aad623ac3acf3c373</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StreamSocketService::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a56f931e3229c55cb1feed34b537c108a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>acb7fee6298b0eade8b661f45794fa62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a68e251836a02ad2cdcac324fc103f212</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aab7ff27b654600418909e28b7bd9adce</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aba244c925a13b661af07a95ef50b4db1</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a53059bdf86c59cbc9ceda7c4e4de6183</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const endpoint_type &amp;endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_stream_socket_ext</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2bd07fedc5ac52d78027f91661128b41</anchor>
      <arglist>(boost::asio::io_service &amp;io_service, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a153a0cda8324e969765a34dd0ea3594f</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aee487957fc34583b492d194c78587f60</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ad1cd742db01eddf2d45a1f73442456e0</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a13f8d19306af107bbd73bd49361943fd</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af729ec8dae0a9ab341d0f5e439556926</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a692e285afa4cd525fb8afbd07a1d81c3</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aa2ff016b0efc3b44736f6608414ab682</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a07d920930d6af623a7275290e5b19c9a</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aad4e5b23a4b509a683727f11e2cdd046</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type>socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13ce2010ba883cdcde74846a6eab856</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a187811b15e72abc965f8eca1dfb99bc3</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>write_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>af3b867868fae198e755a2bbab224efc9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>ae13f5deed9b79e8c22a637cae5501398</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_write_some(const ConstBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a9c6fcfbe9c1315ad477e2d0b90460393</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2e17d7e961c60c6120a38cbca9989236</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>read_some</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a2501887c3118dd7c40a86845483176e5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>adb0ff89e20e828f91821c26c4c138ed1</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_read_some(const MutableBufferSequence &amp;buffers</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>a1fe515e59f1048ea2fa7351e070ab3b2</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1basic__stream__socket__ext.html</anchorfile>
      <anchor>aca859db8169d63e2b573c9c9af069c54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::receiving_stream_state::body</name>
    <filename>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1body.html</filename>
    <member kind="variable">
      <type>data_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1body.html</anchorfile>
      <anchor>a8495cb4f94b24ea95daeebe758481c5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::sending_stream_state::body</name>
    <filename>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1body.html</filename>
    <member kind="variable">
      <type>data_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1body.html</anchorfile>
      <anchor>a46f72e9adfb250a72efb335cf8fd3205</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::buffer_view</name>
    <filename>classvsomeip__v3_1_1buffer__view.html</filename>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a4bd1a558e4df788cc80a6dd1e19278b2</anchor>
      <arglist>(const uint8_t *_data_ptr, size_t _data_length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>ac4c1e8585ea0c62298f2cfdd1d68c283</anchor>
      <arglist>(const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>aa2b2f363f736845285ba95c1b6502b15</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, size_t _length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>buffer_view</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a6831d83e60f755dd8991c89225e43a06</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, size_t _begin, size_t _end)</arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>begin</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a8ff06f9916786292cf0948ee4370d1db</anchor>
      <arglist>(void) const</arglist>
    </member>
    <member kind="function">
      <type>const uint8_t *</type>
      <name>end</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>ad01f1033ca74fe566c4c8aa0d4041ed4</anchor>
      <arglist>(void) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>data_length</name>
      <anchorfile>classvsomeip__v3_1_1buffer__view.html</anchorfile>
      <anchor>a31b3f114af6d19943d1af16e56f0f847</anchor>
      <arglist>(void) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::trace::channel</name>
    <filename>classvsomeip_1_1trace_1_1channel.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>ab8e8f4cea6eaca1252506d9ba15839fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_id</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>ac2729cef669d075fc7c15442f3bc14a6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>a23b93d7ea9f165f3dab3bd1567377d0c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>aef4a57bb16111979b0312f95aa745e5c</anchor>
      <arglist>(const match_t &amp;_match, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>aff444185eeef104a9ab2b080c1138cdf</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>aa8a753e1a51301a5f4196198ed78f994</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_filter</name>
      <anchorfile>classvsomeip_1_1trace_1_1channel.html</anchorfile>
      <anchor>a5e39302ea0e6d36c1767ed44ada65b4f</anchor>
      <arglist>(filter_id_t _id)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::channel</name>
    <filename>classvsomeip__v3_1_1trace_1_1channel.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>a4ae1b016a4c8d4c86b197dd9c653717e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>af3a52c3f158c84cdd9c317390036228b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>a88ba5f6b4360d7036ae632ad7e303645</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>aedace9810ef122df3217a20b5cc4b128</anchor>
      <arglist>(const match_t &amp;_match, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>ab214865ec1e27d1d4b6dafae717c941f</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>aa95df2f3740d208d44927f9413345e85</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, bool _is_positive=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel.html</anchorfile>
      <anchor>ab53d6d7c46def428fc4bb68704f94fc3</anchor>
      <arglist>(filter_id_t _id)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::channel_impl</name>
    <filename>classvsomeip__v3_1_1trace_1_1channel__impl.html</filename>
    <base>vsomeip_v3::trace::channel</base>
    <member kind="function">
      <type></type>
      <name>channel_impl</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>abd63f0768c27d98a3b30c4842785009f</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a4c06dbedf8b675afe8122dbfa0f110d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a9a09601b1c4daa12fd54c49577d636ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a225932141a1e56abf32761831ff0637a</anchor>
      <arglist>(const match_t &amp;_match, filter_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>acb5dafc5954a49887f3ac46d60d4ee1e</anchor>
      <arglist>(const match_t &amp;_match, bool _is_positive)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a7aeb67de0ec1a342e5438ecdaa0687d3</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, bool _is_positive)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>aea23c7cb1a5fedadc2fe041cb38f3edc</anchor>
      <arglist>(const std::vector&lt; match_t &gt; &amp;_matches, filter_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>aa33b029853d5df57a57d533f764ffd18</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, bool _is_positive)</arglist>
    </member>
    <member kind="function">
      <type>filter_id_t</type>
      <name>add_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>acd5018ecc5cb23efef68244f3c31cb51</anchor>
      <arglist>(const match_t &amp;_from, const match_t &amp;_to, filter_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_filter</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a32f9c19997bb524478555a42292d7cd3</anchor>
      <arglist>(filter_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, bool &gt;</type>
      <name>matches</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1channel__impl.html</anchorfile>
      <anchor>a0a0be16d867fa0ba4a84af8aba1e3550</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_interface::checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::profile_interface</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1checker.html</anchorfile>
      <anchor>a941135b82ffacfae34dc6fc948b0de18</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, check_status_t &amp;_generic_check_status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::client</name>
    <filename>classnexus_1_1h3_1_1client.html</filename>
    <member kind="typedef">
      <type>quic::detail::engine_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a45be1037a3d0f476cd5d325d6a812579</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a0424cb83e27e1109828ede99e64293ac</anchor>
      <arglist>(udp::socket &amp;&amp;socket, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>ad3a2b4fb5ca921aa94b86a4cf7d4173b</anchor>
      <arglist>(udp::socket &amp;&amp;socket, ssl::context &amp;ctx, const quic::settings &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>ad60c553c3933164b0979f8bf9306cf93</anchor>
      <arglist>(const executor_type &amp;ex, const udp::endpoint &amp;endpoint, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a0133beb9c3a6ee7123ff0112e3155e02</anchor>
      <arglist>(const executor_type &amp;ex, const udp::endpoint &amp;endpoint, ssl::context &amp;ctx, const quic::settings &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a7adc923f0d5132f7295eea87361d2f7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>local_endpoint</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a1b336029f3d9f85ca7f1b9dadc4c95e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>ac9c656c4e15fa4e2bff7ee9b30211a20</anchor>
      <arglist>(client_connection &amp;conn, const udp::endpoint &amp;endpoint, const char *hostname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a088d53ea392d9072af904786cb51a720</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a851f8ea2319e8ba75aa26befdc6c96f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>client_connection</name>
      <anchorfile>classnexus_1_1h3_1_1client.html</anchorfile>
      <anchor>a884d374d770719700e2a4806f9273290</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::client</name>
    <filename>classnexus_1_1quic_1_1client.html</filename>
    <member kind="typedef">
      <type>detail::engine_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a965304618a75c286c35d28cbbc795ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a0d0ef5687a4330c0f97c7d4a5b38e2f6</anchor>
      <arglist>(udp::socket &amp;&amp;socket, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a9558bccbd1ff27f5e8f95f2f34035884</anchor>
      <arglist>(udp::socket &amp;&amp;socket, ssl::context &amp;ctx, const settings &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a035ccd96146d1bec7db11dc2f7ec930e</anchor>
      <arglist>(const executor_type &amp;ex, const udp::endpoint &amp;endpoint, ssl::context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a83feacc4dcb32abf801127a022512cbf</anchor>
      <arglist>(const executor_type &amp;ex, const udp::endpoint &amp;endpoint, ssl::context &amp;ctx, const settings &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>ab4e83b27a91e1141cc3e8d9e9c9a9844</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>local_endpoint</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a114cc8885b478651dcbac03b97b37203</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a2e75d86d4a030cb926b53c7a97f175a3</anchor>
      <arglist>(connection &amp;conn, const udp::endpoint &amp;endpoint, const char *hostname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a910c7a9826891f0fbb1cb0f620dc7b84</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>a920e2d93987f2d8cda28f0286cba329c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>connection</name>
      <anchorfile>classnexus_1_1quic_1_1client.html</anchorfile>
      <anchor>adb115488bb4890f7fc705ee527ad71e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::client</name>
    <filename>structvsomeip__v3_1_1cfg_1_1client.html</filename>
    <member kind="function">
      <type></type>
      <name>client</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a2867e5dee5f46ee9a740079532550dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>adb41fea73bda7b0f0dadf3f03c205d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a2b607c2af24524b421a585435e9e0e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, std::set&lt; uint16_t &gt; &gt;</type>
      <name>ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>aaf6ae8dcd8c35ecaa090b2a884eb49dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, uint16_t &gt;</type>
      <name>last_used_specific_client_port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a6307bdfad4a2c7689205d77c2783c81e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, std::pair&lt; uint16_t, uint16_t &gt; &gt;</type>
      <name>remote_ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>ae8ee94b601c5e6d01eaec0ab846f7cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, std::pair&lt; uint16_t, uint16_t &gt; &gt;</type>
      <name>client_ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a431738ddcd16ce3575acd8a6b09c0ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; bool, uint16_t &gt;</type>
      <name>last_used_client_port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1client.html</anchorfile>
      <anchor>a73793e64a4534ed1eb5f92908e9fe483</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::client_connection</name>
    <filename>classnexus_1_1h3_1_1client__connection.html</filename>
    <member kind="typedef">
      <type>quic::detail::connection_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a4e8a260e9815a9be8041b4b9784dc956</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client_connection</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a374bf19cad0583f7a64699b7d3db855f</anchor>
      <arglist>(client &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client_connection</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a1c734a434ed4d7ef50d915e6415785a4</anchor>
      <arglist>(client &amp;c, const udp::endpoint &amp;endpoint, const char *hostname)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a75ca1ac6d84309ac0ef7c1748ba6aa75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>acde64ba6db0e6c70175e42637ab65866</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quic::connection_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a3e022ddcdb8beff18054e5d2e7316634</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>quic::connection_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>ad5a3c33b54afad4f8c1dfa5d766a43df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>acbda7a3b4bd4fafede35aee9cbb4cab6</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>afadc41d3b16ec2eb84ad8c060418a636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_connect</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>aecc24420d25775254e11017ba079cd44</anchor>
      <arglist>(stream &amp;s, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a7e97e6be445a8c02ab8c5ad9184808c7</anchor>
      <arglist>(stream &amp;s, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a7b8d3edad5cf8c88b686a58358f92680</anchor>
      <arglist>(stream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a0f2c0880bfb80cc8cb28f2e399210cee</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a1fefa16782bc232bfe79797c274c4763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a9275b71bcc7dff9236b3c1c4ce01929a</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a5bf0b18b6eb29c14a2975b4fe9509818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>client</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>a82afbffb52dc3f25e56edfe10f7d286a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>stream</name>
      <anchorfile>classnexus_1_1h3_1_1client__connection.html</anchorfile>
      <anchor>ad6cdd83c821525ef93cdeb8332fd7de8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::client_endpoint</name>
    <filename>classvsomeip__v3_1_1client__endpoint.html</filename>
    <base virtualness="virtual">vsomeip_v3::endpoint</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~client_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint.html</anchorfile>
      <anchor>ada1a38b54fb716c74c14fe26f1dec583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint.html</anchorfile>
      <anchor>a7d1ea9318e0eba1b0c52337f5f8b6d6c</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint.html</anchorfile>
      <anchor>a08e24fcf505b16efa2c134b30e556c8f</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1client__endpoint__impl.html</filename>
    <templarg></templarg>
    <base>vsomeip_v3::endpoint_impl</base>
    <base>vsomeip_v3::client_endpoint</base>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe07366090669e0b7eb41f6d7041e9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::socket</type>
      <name>socket_type</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ae4c2c740a15ee539fd8a50cb8962951d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>aba536372d1e741b9fe13f9b91114c754</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_context &amp;_io, std::uint32_t _max_message_size, configuration::endpoint_queue_limit_t _queue_limit, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe4a6c5b2ad898fd1ff6fe1f3135691a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>abe905c666e9e27c0464ab3beac9b436e</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a5c75d77dadba75856fc66f0ac80c7239</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a813d7ec09c8d57343f6a762df40e6933</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>aed633291b40445ffeb6bcf16b381095e</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>flush</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a4ecd652296d4f2b997b211542bf54662</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a544a76fd9336ddedc07dd4e10f5aa716</anchor>
      <arglist>(const endpoint::prepare_stop_handler_t &amp;_handler, service_t _service)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a3bb25c03977f36eec5ce6a196e852a78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a30951f1bb0c9c689b96ceae0651e1114</anchor>
      <arglist>(bool _force=false)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_client</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a94359a3f9ef1583aadf32e15da1ff2fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>abc98c535917cb85a3583116a00d69f70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a0562b056d275516c41ebd257c57a7b12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ab283e3305217b996e41bf24b040c6c9d</anchor>
      <arglist>(bool _established)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe68a95d291524fa94d4f9cd9ef8c74c</anchor>
      <arglist>(bool _connected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a3d994ff9b3a373131739b486a07e31f3</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7b810c1753960336e9d132b710033cd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a6d96a111e6fa3433f7a3c08a47ff70e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ab3a83659cd4cb004abed713a6a959595</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ad3e60b55d6d924e330a09022cfffaee0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>abc1497883fbcb544b31d2cb368622338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel_and_connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a3ec55f5e76db0845a15a26e91c15f32f</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afe8e423fbcd1146856bec08b5cb6cce5</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af8569f12bcd8caab86e8704b7a4bc8dd</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait_connecting_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a6895fde038bfe1d2649c0641690a7ff1</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>adb4e3f6539124db3e8b54b8fcac44c2e</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_sent_msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush_cbk</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af4acd8073a0bbb5ab3e5a765a09684a3</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>connect</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af37181b0c7632dd062cb047515a0dce5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ab739db62dba3f4e4e92c2152761acab3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a4f407de09339bd3269fd64fd69694001</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>cei_state_e</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a8ca167817855d60a7f49c42363a701c4</anchor>
      <arglist></arglist>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4a110ccf2f5d2ff4eda1fd1a494293467d">CLOSED</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4a9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4aa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1client__endpoint__impl.html" anchor="a8ca167817855d60a7f49c42363a701c4a7640f170af693e00a6c91df543aa2b76">ESTABLISHED</enumvalue>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; message_buffer_ptr_t, uint32_t &gt;</type>
      <name>get_front</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a8a4dd79dce6d4b192c19dab9864dc2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a43b82759c4ce9bdeb1dbc1ed9d7c9ef9</anchor>
      <arglist>(std::pair&lt; message_buffer_ptr_t, uint32_t &gt; &amp;_entry)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a192c54a10b8cfe5e1dcce48427f93fae</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shutdown_and_close_socket</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a683debfe0ef0430868ba6e1c3897ef0a</anchor>
      <arglist>(bool _recreate_socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shutdown_and_close_socket_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a37c700677c0e9ec823abf4a68ef173e0</anchor>
      <arglist>(bool _recreate_socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>start_connect_timer</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af178417a272a137a85e551a121b717e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>start_connecting_timer</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a04e55c9704fbaf017b282258d4d63fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>endpoint_impl&lt; Protocol &gt;::cms_ret_e</type>
      <name>check_message_size</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a543b8e0270a4cea04724e3bacbad6322</anchor>
      <arglist>(const std::uint8_t *const _data, std::uint32_t _size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>check_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a77b26292fe139c965b412a68b9d68e50</anchor>
      <arglist>(const uint8_t *_data, std::uint32_t _size) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>queue_train</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>acb4b3c7797e26a8605da6ee621e37fe0</anchor>
      <arglist>(const std::shared_ptr&lt; train &gt; &amp;_train)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update_last_departure</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a04f399f3fa1e24a3d2644b0590683675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>socket_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ae128efe82bb2a98593cd4ee288df057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; socket_type &gt;</type>
      <name>socket_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7dfe4be363bb047881392ddb00e9367f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const endpoint_type</type>
      <name>remote_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a59cf1c933392237b1259a15a01112614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>flush_timer_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a494ececbd245385c1ef13aa940555932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>connect_timer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>acbce7076116d57e478506fccec381f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>connect_timer_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af327fd147f7788989ca0cfddff76a350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; uint32_t &gt;</type>
      <name>connect_timeout_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a5c34b98d132e253ebff2cf8f337eee4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; cei_state_e &gt;</type>
      <name>state_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a8eff0b9dd87e89886aeb4693496609d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; std::uint32_t &gt;</type>
      <name>reconnect_counter_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>ad7bc06edf6e67c2c59706ff38a7e9aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>connecting_timer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>aa6235819e23d50446fbd89675790322c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>connecting_timer_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7f940fedaacdb7b05ea57fb9889b81d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; uint32_t &gt;</type>
      <name>connecting_timeout_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a9aafa5def4030fbb90faaac3ebd30c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; train &gt;</type>
      <name>train_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a172cbc32a7fefd1c4773bd8e3501c839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::chrono::steady_clock::time_point, std::deque&lt; std::shared_ptr&lt; train &gt; &gt; &gt;</type>
      <name>dispatched_trains_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a70e8d4854798005977dd6894b8b91474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>dispatch_timer_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a0f17a35641bac176e8656ca05ef375ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::steady_clock::time_point</type>
      <name>last_departure_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a5f7f5575a93f96ced14eaf29d51e0938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>has_last_departure_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a4c342564247cfa25cbc542c47ce5a0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; std::pair&lt; message_buffer_ptr_t, uint32_t &gt; &gt;</type>
      <name>queue_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>afa911936f10c4fd89b82ef05dc35cf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>queue_size_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a7ecb12f0bae76b4886294c7f904533c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::recursive_mutex</type>
      <name>mutex_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>aaa6ac8c1f5191c56d8cbe890356c29f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>was_not_connected_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af0ea039f83a4e60ffb208f6bc6f74c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_sending_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>a191bfbe519a8753037a4622ef14c4e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_context::strand</type>
      <name>strand_</name>
      <anchorfile>classvsomeip__v3_1_1client__endpoint__impl.html</anchorfile>
      <anchor>af767f2b3be9dc876dc228289390bfdde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_state::closed</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__state_1_1closed.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::closed</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1closed.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::closing</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1closing.html</filename>
    <member kind="variable">
      <type>stream_close_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1closing.html</anchorfile>
      <anchor>afb0253d68f7ccc62d969dc6518cf463b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1command.html</filename>
    <member kind="function">
      <type>id_e</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a1dab5dabddf676675ece1ef7f268d06a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>version_t</type>
      <name>get_version</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>aad318c295c9eb9307b71e51279418ca2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a0eec7f1451e0db06ba5da42c540c1737</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>ab83af74e1a6154ccf8595171afade781</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>command_size_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>ab0d6060f63a983bda9d4e68f314bcdf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a6d555d53371fb0dbe220a0744d0eb70c</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>adb93daa046471ed097087f064e15d632</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a90feaf92c4feba887ae277a9dedffe06</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>id_e</type>
      <name>id_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a3d3b774f62c6572cea5e747be4b63524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>version_t</type>
      <name>version_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a21981f2fe8807242726d825c53221bf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>client_t</type>
      <name>client_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a2ca4917f1160327fbc7e7ae0037f7464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>command_size_t</type>
      <name>size_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1command.html</anchorfile>
      <anchor>a7eb1494e030bcb88e67defcb529ba951</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::configuration</name>
    <filename>classvsomeip__v3_1_1configuration.html</filename>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>ttl_factor_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3033159a5f557da3faf04bdbf7886565</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, ttl_factor_t &gt; &gt;</type>
      <name>ttl_map_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5cbb4357e69b391f7b8b1e1ceb923db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>endpoint_queue_limit_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a63a29ceb8e52a9bca815b8baefde328b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::uint16_t, std::uint16_t &gt;</type>
      <name>port_range_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a798071502142d2642eeaa3eb5b31e949</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; boost::asio::ip::address, std::pair&lt; std::string, std::map&lt; bool, std::pair&lt; boost::icl::interval_set&lt; std::uint16_t &gt;, boost::icl::interval_set&lt; std::uint16_t &gt; &gt; &gt; &gt; &gt;</type>
      <name>sd_acceptance_rules_t</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a66b1c39286e52313ab59c495ea78e492</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a6aafd2a8dd1d2aee0f9c516fc11a3f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a0f8286811ba3d32332fef1ffbe4cf938</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>lazy_load_security</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac6e1d207ec49a1759afe961020b32fa3</anchor>
      <arglist>(const std::string &amp;_client_host)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remote_offer_info_add</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a2ae1f02869c2f01b56edf938599834e8</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remote_offer_info_remove</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ab690c5ac55b6ae8288f2e9cc272fb116</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool *_still_offered_remote)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_network</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac7aa99ddbc23ce172240d1fa9f95cd17</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const boost::asio::ip::address &amp;</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3e43c3a852125fcd6f70af0f0f2cf068</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const boost::asio::ip::address &amp;</type>
      <name>get_netmask</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a9d6263c85d90b49745f6fc6b44a677e4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned short</type>
      <name>get_prefix</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>afb6a38320f50b417dbf1c0d5ce69ebf5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_device</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abbef88570142d42c5747932bd73f280e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual diagnosis_t</type>
      <name>get_diagnosis_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a92f4e4767408b2ec1608557b44cf8369</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual diagnosis_t</type>
      <name>get_diagnosis_mask</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a67f0c7ae687a8b80a8b64dcc99416aff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_v4</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af80a0aee2a3cf05fefcc4def0d66954e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_v6</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac91a0ea81a82842d83d7fb3208705bbd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_console_log</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4ac8904262e7920f1f09d0610b128203</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_file_log</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5505fac146bcc57665188e9e487c49f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_dlt_log</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a216fc542a60dfbfdf6c38d56ae22f52e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_logfile</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aab7d6e29173b5edbdb3410e2dbbed640</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual logger::level_e</type>
      <name>get_loglevel</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af7fc7d97574ad6de955ffc4a620a69d5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad73f36832ee692f2437e053d1aaaf28c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_routing_host_name</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a2ea2915d6459c5c7cd7bbd219fd5162e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const boost::asio::ip::address &amp;</type>
      <name>get_routing_host_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad1e213fe28c4c704d03a13d48fdaeea9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual port_t</type>
      <name>get_routing_host_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa5608fc884249613b192376cd4320e35</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const boost::asio::ip::address &amp;</type>
      <name>get_routing_guest_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a24a020f884c6bcff5e6a8df6d9e93b02</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; std::pair&lt; port_t, port_t &gt; &gt;</type>
      <name>get_routing_guest_ports</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5d11ed14a7f030f69c1be7b0c23f184c</anchor>
      <arglist>(uid_t _uid, gid_t _gid) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_local_routing</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4a59ee054f815ade6a83aef0332dc1c0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8eb8747f446c873d039024f0f30244a0</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>get_reliable_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a64290045e6eca9648e162782d72c57e1</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_enabled_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a97ca3528b1ea06292ff0eee731b705b0</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>get_unreliable_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af7d9b26141837555aceead143511682f</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_timing_requests</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ae66853b8e30208a5a0654d30ef81a97e</anchor>
      <arglist>(service_t _service, const std::string &amp;_ip_target, std::uint16_t _port_target, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_timing_responses</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a489dcdfc0231ff6242a08ab7372b5052</anchor>
      <arglist>(service_t _service, const std::string &amp;_ip_service, std::uint16_t _port_service, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_someip</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad2b44ec29daa07b6ea6c86a6c87f71a9</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_client_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abf55a007a68d08efdeb589ca87357921</anchor>
      <arglist>(service_t _service, instance_t _instance, uint16_t _remote_port, bool _reliable, std::map&lt; bool, std::set&lt; uint16_t &gt; &gt; &amp;_used_client_ports, uint16_t &amp;_client_port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; std::pair&lt; service_t, instance_t &gt; &gt;</type>
      <name>get_remote_services</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aeafc09ae05890390a1dca1a9ddf04d67</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_multicast</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abfa6a8546f6968ac7a87d6f57e1407ed</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, std::string &amp;_address, uint16_t &amp;_port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint8_t</type>
      <name>get_threshold</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aef6fcbbc1e67e2a229b184e538292302</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_event_update_properties</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa07ef0351ef53fb28f4fd757d6e68aea</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::chrono::milliseconds &amp;_cycle, bool &amp;_change_resets_cycle, bool &amp;_update_on_change_) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a061d6d00c81f4956dea9c6290c9dda24</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_configured_client_id</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a58ca0cf6d283baa2984baefd855815e0</anchor>
      <arglist>(client_t _id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_max_dispatchers</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ab129a0a0d175275028489fbd49898725</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_max_dispatch_time</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>afd8e13d47788f0936fb08b4afa9f3a9f</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_io_thread_count</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a33820af9a5c0e1391b78542d33d575cc</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>get_io_thread_nice_level</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a86bdd26d5891723827718d46435e1412</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_request_debouncing</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a524f0314525f76871a69c9e0c2c7def2</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>has_session_handling</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>afe5ec00f5a124e3ab6335c66a05fc348</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_message_size_local</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad17a470a0db94717c702a2f8699a1da2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_message_size_reliable</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5602e8beb848d3f57315ae50dd5e8c88</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_message_size_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a895338386a164d278425467aff14b542</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_buffer_shrink_threshold</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a242d52f11d30e7a2b9fe57fe3b8f9910</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supports_selective_broadcasts</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa36a678f23f15c193493bc6cd38914d5</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_offered_remote</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a86394b96e2b5d05ec16e422ad6bef5c3</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_local_service</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad2973d77734bf42aaa4e5d6c9d6a1e66</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual reliability_type_e</type>
      <name>get_event_reliability</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a34ffaa6c30b798a4f806648af2741069</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual reliability_type_e</type>
      <name>get_service_reliability</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a07a5d00e250e0056082e1294baf9eb8b</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad06e7522256e98ac5444f0451dd6f7c1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_sd_multicast</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7058ee8deb563c4a60b4b1a52e208839</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>get_sd_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ad46b4d36cb12be0d56e42160ac12a10d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_sd_protocol</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a0b24b85101cfbb548f569dcfb7e02116</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_sd_initial_delay_min</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7c6327291ed02626d03dd252567f68bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_sd_initial_delay_max</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>adee125806be9e5661121189af6d78d5c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32_t</type>
      <name>get_sd_repetitions_base_delay</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a54ca96e756c8fe80e4aa862f8da9109c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint8_t</type>
      <name>get_sd_repetitions_max</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a2cee0d51d256e49af49d409d6bf15452</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_t</type>
      <name>get_sd_ttl</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aea1eed231acb9a11504deac4e7dd33f1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32_t</type>
      <name>get_sd_cyclic_offer_delay</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5a70480fa9274de5bdfdfbd9541661fa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int32_t</type>
      <name>get_sd_request_response_delay</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8032363f8e8d96245f2e01923d469165</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_sd_offer_debounce_time</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aeb20e5774f6f713b4d8a14a2a5d90b25</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; cfg::trace &gt;</type>
      <name>get_trace</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4cb7c679592b2d79c78b65b2f0049bfa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_watchdog_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a75fbb09159c686b1baedafd1f989d130</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_watchdog_timeout</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abbb07ccd699297ea09d8ab7cc29d2d6b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_allowed_missing_pongs</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a022dc04284d7634f883c5aee1d73dc46</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_permissions_uds</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8dc4f536f892575644165bd23103f837</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_version</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa4606492b286ffefdd2d16666c616f49</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_log_version_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac4ae5035ddb904f1bb368e753fea53c9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; plugin_type_e, std::set&lt; std::string &gt; &gt;</type>
      <name>get_plugins</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa96cf46450637a6967a1c7594f87fe23</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_configuration_path</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af68b419ba58def0e81d73cf263bcbf71</anchor>
      <arglist>(const std::string &amp;_path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; std::string, std::string &gt;</type>
      <name>get_additional_data</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a0dc1dd9babf29040664e3c9d25e1f4e9</anchor>
      <arglist>(const std::string &amp;_application_name, const std::string &amp;_plugin_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; e2exf::data_identifier_t, std::shared_ptr&lt; cfg::e2e &gt; &gt;</type>
      <name>get_e2e_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a40659388c3282261e759298d57b8adb9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_e2e_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a3df11784b9e8455399df77b63cc7b84f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_memory</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aae3fd085349d1dfe4efc28345d4fb9a9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_log_memory_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af0d3b86d58d00714f32e1e87067d5ed8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_status</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abd2d6fe96e568082d6a31bc89684c226</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_log_status_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a03c48446c645cd58607dc9a40c562780</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_map_t</type>
      <name>get_ttl_factor_offers</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7fa9b86aac86465d3c4c20808e4a6a39</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ttl_map_t</type>
      <name>get_ttl_factor_subscribes</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aedde20d8a3962d0bf0c4bebe7cf843ab</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; debounce_filter_impl_t &gt;</type>
      <name>get_debounce</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7e5016f7f83824c512af9a245fa21f86</anchor>
      <arglist>(const std::string &amp;_name, service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a6c9e66c7826efd011b23062ab4a456e3</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit_local</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af9568ca8f0960607f1030b6ce971dbeb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_tcp_restart_aborts</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a4862b3a9f5057d47610c6669d8a145ad</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_max_tcp_connect_time</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ade3bea2ed2f84614923f05961a69823b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_protected_device</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a20455adf212fcec6b56dffe23ca2029f</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_protected_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>abffc976445ccf9020cd9bac13f240623</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_secure_port</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a22a479b028768e68addd76e365ab83e4</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_rule</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa5d6fadb65bcc2f31487f111dc0ef2f2</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, port_range_t _port_range, port_type_e _type, const std::string &amp;_path, bool _reliable, bool _enable, bool _default)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual sd_acceptance_rules_t</type>
      <name>get_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aa4bcf4e5669be84356823957797ca80a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sd_acceptance_rules_active</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ae07da8ff88ee8c2d6c4307b67493af35</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, bool _enable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_secure_service</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7095d3222f1ea7c4ea06a65c70aaca0f</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>get_udp_receive_buffer_size</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a39340d1d6bc59a7aeb0e2692020f8d48</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aba36e707a3144cead9e026e653e4c2f5</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>check_suppress_events</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ae124654977fa3a9c36b12dabe396d28d</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_tp_client</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a8496db5a98f5fb0c193bef3880adff0f</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, std::uint16_t _port, method_t _method) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_tp_service</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ab5c24b2e54f1de00688c45b8807fb5bb</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, std::uint16_t _port, method_t _method) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>get_tp_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a071bd9bc7ab7419d302fa653935641ec</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, bool _is_client, std::uint16_t &amp;_max_segment_length, std::uint32_t &amp;_separation_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint32_t</type>
      <name>get_shutdown_timeout</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a58dd48942ff7e4dd6d4791d9ac3bbe83</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>log_statistics</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a5f7952d70ec2563f6405b9d957e02b25</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_statistics_interval</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a7221693b920e45df84fe960d7e49ed5a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_statistics_min_freq</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>af62a63dc454e8e0e556363aa9abd95e0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_statistics_max_messages</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>afabba418465e2ed9871e03a5918afba2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint8_t</type>
      <name>get_max_remote_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a03168692f3346d8063f3c5e5bff8e9f0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual partition_id_t</type>
      <name>get_partition_id</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a990bb6db91e5ca57db025f52255bb38d</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual reliability_type_e</type>
      <name>get_reliability_type</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>acdfd4b788377a13c9888945d9dfa460f</anchor>
      <arglist>(const boost::asio::ip::address &amp;_reliable_address, const uint16_t &amp;_reliable_port, const boost::asio::ip::address &amp;_unreliable_address, const uint16_t &amp;_unreliable_port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_security_enabled</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>acc1c99c8dff9aea64b02cc4e9614eb53</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_security_external</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>aaac7317172c04b94d649a425f4ab0086</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_security_audit</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>a202e5e2af72fd24d1a35938ebeffb4ca</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_remote_access_allowed</name>
      <anchorfile>classvsomeip__v3_1_1configuration.html</anchorfile>
      <anchor>ac851f54e02dca4ce36b7a31b4614a005</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::configuration_element</name>
    <filename>structvsomeip__v3_1_1configuration__element.html</filename>
    <member kind="function">
      <type></type>
      <name>configuration_element</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>af3bc2fdbc72ec216b7920c3d62b5b66b</anchor>
      <arglist>(const std::string &amp;_name, const boost::property_tree::ptree &amp;_tree) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>configuration_element</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>a28fd9712482657af4534ac5bbb9ff15d</anchor>
      <arglist>(configuration_element &amp;&amp;_source) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>ad2c6da8fef898d4ec3f334f2052fdc4a</anchor>
      <arglist>(const configuration_element &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>ad0bf3dbf09325dc8f42857edf093dd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::property_tree::ptree</type>
      <name>tree_</name>
      <anchorfile>structvsomeip__v3_1_1configuration__element.html</anchorfile>
      <anchor>ac1fea147b3f0f4428e7cf135cac0777a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::cfg::configuration_impl</name>
    <filename>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</filename>
    <base>vsomeip_v3::configuration</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>configuration_impl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac1846d67ccb1960aed9265fecd435ec7</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>configuration_impl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a11ed778f170eeaa5efcda1c526ef9e0b</anchor>
      <arglist>(const configuration_impl &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~configuration_impl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa2e10639e268d0b2c2f88cdb0e57f964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a57b29959dabb7d851411a0ecc53341d1</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>lazy_load_security</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1729f7f96042e3892815d58ad056b8b0</anchor>
      <arglist>(const std::string &amp;_client_host)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>remote_offer_info_add</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9bb5b3e824034a8d1657b88e9eeea5bc</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>remote_offer_info_remove</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6e4d830a497c8a324976051e4dde76be</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled, bool *_still_offered_remote)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_network</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a489f9c8a5122d5abb4d2a2606f8ac9a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_configuration_path</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae55fd277aebbf600101e2497508d11ab</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5513c832b011c56f79e2b4264a51fc4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_netmask</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0ddb74c35f663cb1b756c7bb28d63586</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT unsigned short</type>
      <name>get_prefix</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6c9a1a4caf0111dd0562dd42ec949647</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_device</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a127a7be569d985f775258a4c41fd074b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT unsigned short</type>
      <name>get_diagnosis_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a76e4bd69f2a05f68fd82ab0a91391905</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint16_t</type>
      <name>get_diagnosis_mask</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a219b028c715f4f143c44156c47ba399b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_v4</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa9e7e9ab7ba4ae5c330245a99dd5fcde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_v6</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab2cb064f01cfd6b46b6bee21921e5cf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_console_log</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1b75d1b78684645ae2b3028a44597023</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_file_log</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4b184b71843cd51f8e0ef9d0abd2ba16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_dlt_log</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0831df478e4bc449910d5638c4568b2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_logfile</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8f5c8a402cd49559e055049db210803d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT vsomeip_v3::logger::level_e</type>
      <name>get_loglevel</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a012fa6330a6df9c5884332d88a7a60b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::string</type>
      <name>get_unicast_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4d8fa18c35b67d22cb8688bc36b7f8bc</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_reliable_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a845701e7567e25a1c4cedc83676f6028</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_enabled_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4ba236ec5e6dd7eb10a31a8621103a5c</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_unreliable_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af0f721cd502a479daa22a05c00697d5d</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_configured_timing_requests</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a35c925c4125e62f2c8a4329690f11dbb</anchor>
      <arglist>(service_t _service, const std::string &amp;_ip_target, std::uint16_t _port_target, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_configured_timing_responses</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a63b250f568e686508f4a8315b2d63efa</anchor>
      <arglist>(service_t _service, const std::string &amp;_ip_service, std::uint16_t _port_service, method_t _method, std::chrono::nanoseconds *_debounce_time, std::chrono::nanoseconds *_max_retention_time) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_someip</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aeb5d5962d6a8c068e2716b1673c4add8</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_client_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a26932b8c5a5edb75d0f4c62bf91e2530</anchor>
      <arglist>(service_t _service, instance_t _instance, uint16_t _remote_port, bool _reliable, std::map&lt; bool, std::set&lt; uint16_t &gt; &gt; &amp;_used_client_ports, uint16_t &amp;_client_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_routing_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab7b189bd087382f8a1715bc5385451d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_local_routing</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a620fb061f6b12e72fdc37502ca48afe8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_routing_host_name</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a96e4cef75478847982a93dcb2926b645</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_routing_host_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abe59406b541420c6ebbaf4b9bff488f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT port_t</type>
      <name>get_routing_host_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>adeb83eec4d6468034d78df875f473802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_routing_guest_address</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a28a8217d7c1dac2d72637c4fce81076f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::pair&lt; port_t, port_t &gt; &gt;</type>
      <name>get_routing_guest_ports</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a207f3d0f87cfc4f48325d99f77353bce</anchor>
      <arglist>(uid_t _uid, gid_t _gid) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac0354ceb82b6ab73d0f72df9dfc88631</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_configured_client_id</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a37ddfe44e0417ef407939dbc4504366d</anchor>
      <arglist>(client_t _id) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_max_dispatchers</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a81e8e1e5c9b724f76f527d42be4ceb35</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_max_dispatch_time</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae725d53c86204239ef893f7f8d6236ae</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_io_thread_count</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af9cba277873453a767c1203e1aeb2aa3</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int</type>
      <name>get_io_thread_nice_level</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acdc4c557490d6e1d63d71b918ac79828</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_request_debouncing</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a958a0ba6879c1821d03531ecbe49a3ef</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>has_session_handling</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9c7f096f9b97825f6e6e4078a333403c</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::pair&lt; service_t, instance_t &gt; &gt;</type>
      <name>get_remote_services</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac675cc773a1cf1cb91a1bddb5d895a7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_multicast</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abd189d6a6e34292eb12495cff6ea66ab</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, std::string &amp;_address, uint16_t &amp;_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_threshold</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6f3a70041aa70308f08b15d14a7d1836</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_event_update_properties</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6b1d0abda3d2b3e831977eb523e41bca</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::chrono::milliseconds &amp;_cycle, bool &amp;_change_resets_cycle, bool &amp;_update_on_change_) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_message_size_local</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abbf6ba95554cae2683cd1b8dcd23b46e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_message_size_reliable</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa00667c0f9e3863a279d0a17d5d93461</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_message_size_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9c77d176e9e58a70157f40b8b44233d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_buffer_shrink_threshold</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7bde99effbe11291efdca3f35aacf07d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>supports_selective_broadcasts</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8dcf3e0c7a1397697a87497e66d2a7ff</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_offered_remote</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae6bf5a9d2d6cbc18b70dea36c92fa709</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_version</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9a4384b8a5eedaafe04e28611ad22c11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_log_version_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad2f173086c7a0b9878b9f7ae658e14b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_local_service</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae25a73d8c1975e9a61072fe921c00ed2</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_event_reliability</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af43231b517d0b4483603470947de6f92</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_service_reliability</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a26fc9217de0be88f5e09fe0f48682f9a</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae73d7bfee5ff2653c47bbb0b0219c189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_sd_multicast</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a054f041025f492cf9cb6b46806571a74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_sd_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afe6369fde28a169e0963c7017149aad8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const std::string &amp;</type>
      <name>get_sd_protocol</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9130af08be8540e587739e2cd7af35b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_sd_initial_delay_min</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a235000e420309ae4f99ce9793cbd610e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_sd_initial_delay_max</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3b81ae006c03df0c3261c5330252d4d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int32_t</type>
      <name>get_sd_repetitions_base_delay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0aca04653508c4664bc4c084e1aed800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_sd_repetitions_max</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6f393e19a50cc0f124651ddf4025f7d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_sd_ttl</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9f2207ee555dd1f9b16a29c33cfee856</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int32_t</type>
      <name>get_sd_cyclic_offer_delay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3bafa38f85977d87150536234477bc8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int32_t</type>
      <name>get_sd_request_response_delay</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a14a583427ba469a1ad8bb0caba208715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_sd_offer_debounce_time</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af4eb790a9f000d71f29675cd48bc3259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; cfg::trace &gt;</type>
      <name>get_trace</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a82c56771ae1c57cfee87160deead5040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_watchdog_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a228603585a86320d9f6897b1ccbd996c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_watchdog_timeout</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a57b62d0188a4cba9c7a5be70a7069f88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_allowed_missing_pongs</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2fe9e54d1a6b437e53f273daa9293a1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_permissions_uds</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a13ec3c372574863f87942bacbc12c9f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acfba4ed51c5b885754a28b97f1d379d6</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>check_suppress_events</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2a2ce3c2d4e33aa45cab472677bc1b18</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::map&lt; plugin_type_e, std::set&lt; std::string &gt; &gt;</type>
      <name>get_plugins</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1439b32e62620687cb1806139fcef07a</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::map&lt; e2exf::data_identifier_t, std::shared_ptr&lt; cfg::e2e &gt; &gt;</type>
      <name>get_e2e_configuration</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae9bf595cb8ea7c8da4d1afef20f2e480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_e2e_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a4e2f103cc7812aa7e51ee427234d4e39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_memory</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2444b2617c3ff6e9f660d69940f8115a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_log_memory_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9a7b9c9190253ea28e606a2604a6d7cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_status</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aac74591702ff7e55e0196c8e102bef42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_log_status_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a91663d00563098c7907f6009d6b7e4cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_map_t</type>
      <name>get_ttl_factor_offers</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2887adf1cca41cec9a71f7cc4e333594</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_map_t</type>
      <name>get_ttl_factor_subscribes</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa3e43ef072441b7504820092c7e10ff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; debounce_filter_impl_t &gt;</type>
      <name>get_debounce</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abd455b6d8b41e1e537a5f4497e30877c</anchor>
      <arglist>(const std::string &amp;_name, service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a48c92a586376b224b918f1178625f34f</anchor>
      <arglist>(const std::string &amp;_address, std::uint16_t _port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT endpoint_queue_limit_t</type>
      <name>get_endpoint_queue_limit_local</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a505e7f70bcfde83a4955bf2d20029ad0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_tcp_restart_aborts</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac9310145d2e6f22d3eae5084ebe12736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_max_tcp_connect_time</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac751ff829588877817c96bd3b16155a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_protected_device</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a87dfd34934e32615204fb1e9bc0c9a02</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_protected_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a80bec9bf76e3e185e8ac8edd13890336</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_secure_port</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a24635822f6e28a2fff671e5e967a79a7</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_rule</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5bbfa0221818261e643f384bcb062470</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, port_range_t _port_range, port_type_e _type, const std::string &amp;_path, bool _reliable, bool _enable, bool _default)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0999d818d793ac6fc04c702fcd73a467</anchor>
      <arglist>(const sd_acceptance_rules_t &amp;_rules, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT sd_acceptance_rules_t</type>
      <name>get_sd_acceptance_rules</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2fcf7aaca51d3b08453a417bc5306d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_acceptance_rules_active</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aec2ebcb7f074da04349dc7f03dad9a62</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, bool _enable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_secure_service</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aea26c342eb89339bda937f8145771a07</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT int</type>
      <name>get_udp_receive_buffer_size</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7ec04ed527e8a5df69b4b412253bec30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_tp_client</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a471c8266fa55114c8dd320c9e911c99d</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, std::uint16_t _port, method_t _method) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_tp_service</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac0a2e0e8d2d314d1b5106166c75362fa</anchor>
      <arglist>(service_t _service, const std::string &amp;_ip_service, std::uint16_t _port_service, method_t _method) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>get_tp_configuration</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a27a3cb47826fd249fd643b582c221eb5</anchor>
      <arglist>(service_t _service, instance_t _instance, method_t _method, bool _is_client, std::uint16_t &amp;_max_segment_length, std::uint32_t &amp;_separation_time) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_shutdown_timeout</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa04b202af7fac1a699bce2b66134a405</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>log_statistics</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa1dfde4d35030e4294aa3a9d3ac8e259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_statistics_interval</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9ca447d85eb069e0e5fc01646db9493d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_statistics_min_freq</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a76f322f2427056a13d5883bdd7dc6e52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_statistics_max_messages</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af27ecb49ed07bdd42ada8e72235afa0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_max_remote_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aff3ba9cd6c0213d270bbff18bd11ade4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT partition_id_t</type>
      <name>get_partition_id</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aee815eb0d796a43a9f2e08fe82c798d2</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::map&lt; std::string, std::string &gt;</type>
      <name>get_additional_data</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a58435c95914a077f4bbf9cec7a08a87f</anchor>
      <arglist>(const std::string &amp;_application_name, const std::string &amp;_plugin_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_reliability_type</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab7c6df161e6383a7532ce00a16f78d9b</anchor>
      <arglist>(const boost::asio::ip::address &amp;_reliable_address, const uint16_t &amp;_reliable_port, const boost::asio::ip::address &amp;_unreliable_address, const uint16_t &amp;_unreliable_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_security_enabled</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a64e3a9352b07813dd0ed33e2d5b6641f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_security_external</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a17ce280741c3147718c37765398d9826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_security_audit</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac26d513477cde482035088b60ab417fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_remote_access_allowed</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a912e97bd6fd3da3acb234d9e60238cd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>element_type_e</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETWORK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac86e15aa1869cce4090f24e83d8c378d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UNICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24136ea689f8d11c5815a3977fbab6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DEVICE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca53bcc542ca549e0d251dc875f3c83454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcae12c6c39a9e9857193964a64f0e29405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS_MASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaa7092c818f451bbe1cd4a9a95f8e8d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_CONSOLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca1d4f66b1e4f8ce03ff6b292c1ba6067e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_FILE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca15d97df96061932e57e9817742b38942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_DLT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcabea5dcfe9eef03725e9632700ef6c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_LEVEL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca627bd1d110d1025fb5f009cc1294d8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ROUTING</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8e423c8683a3f4fd82558fb763082d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3f20fc04698022da34f415276b17ee02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PROTOCOL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac8d2a4e1ec0f55542ac2360973881fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_MULTICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca7b447f42bcf9f7613375651b1e9062d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PORT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24dbbed3bc7d96af115f300da2c88024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MIN</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0540a506b470a18b49fa84c12e517de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab5719040e0d269bc559fdc1fcd5f68c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_BASE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca48962b1c2a965ad72b8a48fffb78c4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b0acbfeb8a2292a3418b78e186ce634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3419184d74467a471d6cb2b00778f10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_CYCLIC_OFFER_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca5ad76871784999e175384d575ab34ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REQUEST_RESPONSE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca76afe1009d7840302dcadea3c1020067</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0d341826a97e92ef5ed076706ebdd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca22defb3610e2a84f4381af71200a7802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ALLOWED_MISSING_PONGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca21eb1c99a68a33236f48f47dde87ad97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6b3d44ff53006cffe689de913aaac0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_SD_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6c269b4de3dbdc3dd6b725de070867bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_OFFER_DEBOUNCE_TIME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3166a416cfbac76e410baf453ffda938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_OFFERS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0de0d5aba7f3fb6ada98777dce97545e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_SUBSCRIPTIONS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca86e0a77bdb6a55a7da13364026610a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMITS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca699c71ab6ff02b98d5d90a090e357dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_EXTERNAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca25aa4671b22878fbdef9764033a9426d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_LOCAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca018809ffd829960d58d98185684478ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_RESTART_ABORTS_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6df3268ac5f9e0b14e639e271878cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_CONNECT_TIME_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8dd96871c6c12982b95dfe6eaf16f467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SD_ACCEPTANCE_REQUIRED</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaeaf6ebfe1b381f23b9fc1fa60d39ec9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETMASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf05be1974d072f093f11523933fe3596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UDP_RECEIVE_BUFFER_SIZE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6e347c1dc1e7e18922bbf03cc0d5a37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NPDU_DEFAULT_TIMINGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b2eb88a21e2d3e9c7e4f0515235c788</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_NAME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca84421c815ca34e5e407cf69bc5e73447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_TYPE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf89d6489a4ca49919ba19fd53925c011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SHUTDOWN_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca49259b13cd2409a317a9ae3988d21817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_MAX_REMOTE_SUBSCRIBERS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaa87025563da956c340802abc30168c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PARTITIONS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca2b8d23435cf30689709c416eef52de42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SECURITY_AUDIT_MODE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca1f8cd61ac4d97f090fcbed2707caffae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SECURITY_REMOTE_ACCESS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab19846582f9e41e3d7461256362eaacb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0a5d0a819e9289e0ab3a227f987ee34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETWORK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac86e15aa1869cce4090f24e83d8c378d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UNICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24136ea689f8d11c5815a3977fbab6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DEVICE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca53bcc542ca549e0d251dc875f3c83454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcae12c6c39a9e9857193964a64f0e29405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_DIAGNOSIS_MASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaa7092c818f451bbe1cd4a9a95f8e8d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_CONSOLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca1d4f66b1e4f8ce03ff6b292c1ba6067e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_FILE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca15d97df96061932e57e9817742b38942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_DLT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcabea5dcfe9eef03725e9632700ef6c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_LOGGING_LEVEL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca627bd1d110d1025fb5f009cc1294d8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ROUTING</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8e423c8683a3f4fd82558fb763082d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3f20fc04698022da34f415276b17ee02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PROTOCOL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcac8d2a4e1ec0f55542ac2360973881fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_MULTICAST</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca7b447f42bcf9f7613375651b1e9062d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_PORT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca24dbbed3bc7d96af115f300da2c88024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MIN</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0540a506b470a18b49fa84c12e517de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_INITIAL_DELAY_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab5719040e0d269bc559fdc1fcd5f68c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_BASE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca48962b1c2a965ad72b8a48fffb78c4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REPETITION_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b0acbfeb8a2292a3418b78e186ce634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3419184d74467a471d6cb2b00778f10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_CYCLIC_OFFER_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca5ad76871784999e175384d575ab34ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_REQUEST_RESPONSE_DELAY</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca76afe1009d7840302dcadea3c1020067</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab0d341826a97e92ef5ed076706ebdd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca22defb3610e2a84f4381af71200a7802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_WATCHDOG_ALLOWED_MISSING_PONGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca21eb1c99a68a33236f48f47dde87ad97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6b3d44ff53006cffe689de913aaac0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TRACING_SD_ENABLE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6c269b4de3dbdc3dd6b725de070867bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_OFFER_DEBOUNCE_TIME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca3166a416cfbac76e410baf453ffda938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_OFFERS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0de0d5aba7f3fb6ada98777dce97545e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SERVICE_DISCOVERY_TTL_FACTOR_SUBSCRIPTIONS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca86e0a77bdb6a55a7da13364026610a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMITS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca699c71ab6ff02b98d5d90a090e357dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_EXTERNAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca25aa4671b22878fbdef9764033a9426d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_ENDPOINT_QUEUE_LIMIT_LOCAL</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca018809ffd829960d58d98185684478ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_RESTART_ABORTS_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6df3268ac5f9e0b14e639e271878cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_TCP_CONNECT_TIME_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca8dd96871c6c12982b95dfe6eaf16f467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SD_ACCEPTANCE_REQUIRED</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaeaf6ebfe1b381f23b9fc1fa60d39ec9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NETMASK</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf05be1974d072f093f11523933fe3596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_UDP_RECEIVE_BUFFER_SIZE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca6e347c1dc1e7e18922bbf03cc0d5a37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_NPDU_DEFAULT_TIMINGS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0b2eb88a21e2d3e9c7e4f0515235c788</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_NAME</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca84421c815ca34e5e407cf69bc5e73447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PLUGIN_TYPE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaf89d6489a4ca49919ba19fd53925c011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SHUTDOWN_TIMEOUT</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca49259b13cd2409a317a9ae3988d21817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_MAX_REMOTE_SUBSCRIBERS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcaa87025563da956c340802abc30168c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_PARTITIONS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca2b8d23435cf30689709c416eef52de42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SECURITY_AUDIT_MODE</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca1f8cd61ac4d97f090fcbed2707caffae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_SECURITY_REMOTE_ACCESS</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bcab19846582f9e41e3d7461256362eaacb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ET_MAX</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a39d5e94685ab99111b0828eda5fda7bca0a5d0a819e9289e0ab3a227f987ee34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::ip::address</type>
      <name>unicast_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a64c8a42a308e45f456c91b0befc90b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::ip::address</type>
      <name>netmask_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8489fd317c177c2093d8e6ccca5a338e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned short</type>
      <name>prefix_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a49562d1cbb812552d60adc03d096dcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>device_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae2b6f11f8c64c6aa07671ce441aae6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>diagnosis_t</type>
      <name>diagnosis_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abad90e8c4d3407d748fc774fc1b0ee5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>diagnosis_t</type>
      <name>diagnosis_mask_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a36294c8644804f242592b546d185c1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_console_log_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abacfe86f407869fd311e5823edfca1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_file_log_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3566888288fdb3fc9e778b7f04368e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_dlt_log_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a26cbb89261148ecf78c034e42a796f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>logfile_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>add1198c14d7a31d6f4b49e55bfc307cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mutex_loglevel_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acbbb76e0722dd0b66678d3f4c2c9d325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vsomeip_v3::logger::level_e</type>
      <name>loglevel_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac227562fea53ea046950a8775180b59b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, application_configuration &gt;</type>
      <name>applications_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae1df34bde55df835be236140386ae5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; client_t &gt;</type>
      <name>client_identifiers_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8c6adb0e10a9ead32738a8871d169909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>services_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a932d228f64d40633c13681c11bac1e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; service &gt; &gt; &gt;</type>
      <name>services_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab26f2fbf4caefeb1fe0869de1534c488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::uint16_t, std::map&lt; service_t, std::shared_ptr&lt; service &gt; &gt; &gt; &gt;</type>
      <name>services_by_ip_port_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ab9e4206564a9faaad59c92e3447e912d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; suppress_t &gt;</type>
      <name>suppress_events_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac182b568b6cfffd559a56def8a1cd776</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_suppress_events_enabled_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aa238eae352f929043b30e465827994a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; client &gt; &gt;</type>
      <name>clients_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afee35401d4dea40ed9a4ff3867386c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>routing_t</type>
      <name>routing_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>adec812a3551c97570fa4468c8d2bf5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_sd_enabled_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3a62b0307f72aa8a5f35cdba44b07663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sd_protocol_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a499f5b389b6e1234af9e77ccacf36e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>sd_multicast_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3b2bdc81774aec837ff863727446b554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>sd_port_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a16ac5fb6d701b3ad470692dcd4aa4d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>sd_initial_delay_min_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abcf699efaffc4fbca871673a91f2c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>sd_initial_delay_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a66386359c86002c853919e72b260ede6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>sd_repetitions_base_delay_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a909d2be63c86dfd0017f64b0bbda07d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>sd_repetitions_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>aea43d31a989cc3192d0c9da62819ab73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_t</type>
      <name>sd_ttl_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae88db2912b55130ec83ad1119349b0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>sd_cyclic_offer_delay_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad7c28f01e38c185eb77bea7908a01444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>sd_request_response_delay_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6a9739fb719569b2a6dde21f0f961841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>sd_offer_debounce_time_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2f19234eeac2df5c65efe159cad20f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::set&lt; uint16_t &gt; &gt;</type>
      <name>magic_cookies_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad7d20a08794fd964f854933e9877f2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::uint16_t, std::uint32_t &gt; &gt;</type>
      <name>message_sizes_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af1bd5d3ba41eb39aae6891d6b6419b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_configured_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1724ac640bc78dbf2b3b5c42c74b659e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_local_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a80e4f5f0202734c78b47b2e458f1968b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_reliable_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>acfd4ddeebeef0b0952d31c1ca60ab2c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_unreliable_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a148c096c88440ea1e6fa4e0c969555e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>buffer_shrink_threshold_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7ff15ec3b9f62f9fd2ebcc03e275a127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; trace &gt;</type>
      <name>trace_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a84f04e150851bfecf8fa1750fdf9be56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; std::string &gt;</type>
      <name>supported_selective_addresses</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2a228daa556c288a8832b20d646e68d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; watchdog &gt;</type>
      <name>watchdog_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abd78d988655443374580003f5b13a395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; service_instance_range &gt;</type>
      <name>internal_service_ranges_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac10116aa12108734669411715a5c760c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_version_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a89ba903de43113d0ee9f9c90617068df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>log_version_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a98858cc57e8306718a24985101788b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_configured_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6ff64fd1f23f49a7b0586041e7bfb541</anchor>
      <arglist>[ET_MAX]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>permissions_uds_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a278d58f4930314f382e82911025a683f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>network_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6a5da36615686d5bdfcb28f7587c7dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>configuration_path_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7dec840bb18255fe21fc53953eb5ce30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>e2e_enabled_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae2430fd06d32df4a7b965f850487d8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; e2exf::data_identifier_t, std::shared_ptr&lt; cfg::e2e &gt; &gt;</type>
      <name>e2e_configuration_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a3802bdeed1bbde855c4206c14cbd685d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_memory_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac31ea81bd9492d0ca378703e3b25b045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>log_memory_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>af4b3e15d94db6755d0db828e4cb6fc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_status_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a879c16d49b3e42a5266662699be4ace5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>log_status_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a169d30882e0638c270b1af6508b0c5b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_map_t</type>
      <name>ttl_factors_offers_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6deb22af23f6fefeedb504c309624532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_map_t</type>
      <name>ttl_factors_subscriptions_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a87938fac5ce5f742365f813fd8302a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>debounce_configuration_t</type>
      <name>debounces_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae345cab4eb6eb0d5998187cf8b52ccd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::uint16_t, endpoint_queue_limit_t &gt; &gt;</type>
      <name>endpoint_queue_limits_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a555f91ca9246ff8095e738b573e2bff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>endpoint_queue_limit_t</type>
      <name>endpoint_queue_limit_external_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae33e12aa080c3f1db8bdff1c5f46d1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>endpoint_queue_limit_t</type>
      <name>endpoint_queue_limit_local_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9680b5f0aef33cf538eed18a015e3952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>tcp_restart_aborts_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>afe421a55a6f40dc1baacee6b4eb21527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>tcp_connect_time_max_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>abe4b3d3f8877a4008d3b6dbc5a89aa26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>sd_acceptance_required_ips_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a75e53e1f838b73ffed95c14d96658972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sd_acceptance_rules_t</type>
      <name>sd_acceptance_rules_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a70557c77188262b1d608240d14ee72e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; boost::asio::ip::address &gt;</type>
      <name>sd_acceptance_rules_active_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a96eb4be39319fb02220959a2330cef56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_issued_methods_warning_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a00d8d538ea2f8b01830035891f41e82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>has_issued_clients_warning_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ae0c3b10b95ea4121e1789b82ccb3fe88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>udp_receive_buffer_size_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5ed30701f65f6d5309bc3932e338f833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_debounce_requ_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a50aa464e132b2f01a0c2a33c8043c0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_debounce_resp_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ac069c84e6a54afc16a859a729a06928f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_max_retention_requ_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1819ce581bf04d461cdee1d1b0365d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::nanoseconds</type>
      <name>npdu_default_max_retention_resp_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a41f6735e285ff68f50e7deeea5bad75b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>shutdown_timeout_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1bb63d337c0fc5b3ae265a6f896b78c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>secure_services_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9f6564fafd5f1911d75804a890e076ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::set&lt; instance_t &gt; &gt;</type>
      <name>secure_services_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7c220e35abcf4ad3de801b12d115ed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>log_statistics_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a1be777bd21367242e41ac1a1eda4f2ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>statistics_interval_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a19c475ef4ba239a50c875fa86c8b319c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>statistics_min_freq_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a9abab02d51b37a7cb1973d9a381cac20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>statistics_max_messages_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a0bf14433b0c231cb6a1d9f32415e38ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>max_remote_subscribers_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a7fdcb002fe85d3d125a1f586dead8d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>partitions_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2ce30e542f7282b2a06008985e047f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, partition_id_t &gt; &gt;</type>
      <name>partitions_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>ad540d177aa7639e1bf174158a02bbde1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>path_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a5297cefc795369d945afb0773edc99ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; std::string, std::map&lt; std::string, std::string &gt; &gt; &gt;</type>
      <name>plugins_additional_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a24e8053e6d7f5fc6aef5744e9f3e2382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic_bool</type>
      <name>is_security_enabled_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a8c17ddf285633c888ed7292ff7b9b067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic_bool</type>
      <name>is_security_external_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a2ee05dd0d58bccc8584e6b54acf866dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic_bool</type>
      <name>is_security_audit_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a6c78966f4f55f3f1f9f607ba8e8ce96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic_bool</type>
      <name>is_remote_access_allowed_</name>
      <anchorfile>classvsomeip__v3_1_1cfg_1_1configuration__impl.html</anchorfile>
      <anchor>a546981753305b6953d1ac899d89f3299</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::configuration_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>configuration_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a6ce064cfc01492753d98d8ffbb9b70cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>ac3465a455eeb4ecd14fb682bbe27484c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a0ad9e9bac494d5bd7599155e2508372f</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_item</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a95da906f26b8f151149c338cc1382c55</anchor>
      <arglist>(const std::string &amp;_key, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_item</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a5cf9e9d0a2dab7ad28fe8ede116197a0</anchor>
      <arglist>(const std::string &amp;_key)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_keys</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a6c68972a8557902114464641e695b199</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_values</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>ad35e5a5749f88c063e6447f56d484e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_value</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a6ea85b55fd1bdc8ddf3c97ec46471c64</anchor>
      <arglist>(const std::string &amp;_key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a7b7169d93ae6c601931f777a6e6f54c6</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1configuration__option__impl.html</anchorfile>
      <anchor>a3674a6effcc2c491fc05fe29a9962263</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::configuration_plugin</name>
    <filename>classvsomeip__v3_1_1configuration__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration_plugin</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin.html</anchorfile>
      <anchor>ad682b6274826d278421c009a88541f8e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin.html</anchorfile>
      <anchor>adbc42608fc3a4fe6805749b65321ff88</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_path)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::configuration_plugin_impl</name>
    <filename>classvsomeip__v3_1_1configuration__plugin__impl.html</filename>
    <base>vsomeip_v3::configuration_plugin</base>
    <base>plugin_impl&lt; configuration_plugin_impl &gt;</base>
    <member kind="function">
      <type></type>
      <name>configuration_plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin__impl.html</anchorfile>
      <anchor>aa88c4a94858aa621b36be20611d3b205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~configuration_plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin__impl.html</anchorfile>
      <anchor>a1e2efb30f8cdc4c9b8ba6e1d56e7e714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1configuration__plugin__impl.html</anchorfile>
      <anchor>a7e875e5217d15044c584cf167942239e</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_path)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::connecting</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1connecting.html</filename>
    <member kind="variable">
      <type>stream_connect_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1connecting.html</anchorfile>
      <anchor>a188476b11edd6bcfaa732dcf5ad60d36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::connection</name>
    <filename>classnexus_1_1quic_1_1connection.html</filename>
    <member kind="typedef">
      <type>detail::connection_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a8ac81377ab1f46e490a5733a8c1c7d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>connection</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a012132df9a40ef6cebe5a6d8e6185acf</anchor>
      <arglist>(acceptor &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>connection</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a5735f4af8db853089cbda85bb583a605</anchor>
      <arglist>(client &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>connection</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a9de3f752d442ca6d17f491abf9260b68</anchor>
      <arglist>(client &amp;c, const udp::endpoint &amp;endpoint, const char *hostname)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>af8545419a66b5e28de436b37a61bdc34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>adf2b015cee6c5d8bd3d9c589d9f36283</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>connection_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a93f463efda0d6c8f4ce7149e404c5274</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>connection_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a0952cf3c986fc7b4194be8493ae6cea6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a185b108fa49aae20e878aaf07d080b57</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>ad21afdaffa56041be71914035bdb2a47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_connect</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a0112b065d1fe0d45176dc25a7cdeed74</anchor>
      <arglist>(stream &amp;s, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a46680c193cf48a4f776491bd9286f511</anchor>
      <arglist>(stream &amp;s, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a0642823c3dab041d2a8b3464d32434eb</anchor>
      <arglist>(stream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_accept</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a165bccce2646e6952dbf513c4f4b9ec1</anchor>
      <arglist>(stream &amp;s, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>af7d23274cade915c3d45f6b5a5421031</anchor>
      <arglist>(stream &amp;s, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a0efc726253e9e64b060652fcdaca643c</anchor>
      <arglist>(stream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>ab96e89226b4d3b578f5ae4113f575e0c</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a10a13077aeb91a6ff340384bd3549356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a6df6ef8223a860ea805cd053bce58161</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a7c3a036a2682b94f7e41a2f18132f520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a8828d59850b298b54f96fb5cb49eb660</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>client</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a82afbffb52dc3f25e56edfe10f7d286a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>stream</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>ad6cdd83c821525ef93cdeb8332fd7de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>detail::socket_impl</name>
      <anchorfile>classnexus_1_1quic_1_1connection.html</anchorfile>
      <anchor>a92bc8f6f5e44461506506a42325896c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_context</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__context.html</filename>
    <member kind="function">
      <type></type>
      <name>connection_context</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__context.html</anchorfile>
      <anchor>aeee0bc3dcf32b024530a349a76328805</anchor>
      <arglist>(bool incoming) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>incoming</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__context.html</anchorfile>
      <anchor>a7175069e5a8c10b58f754d1e0a0a99d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::connection_id</name>
    <filename>classnexus_1_1quic_1_1connection__id.html</filename>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>value_type</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a2ed648c43162da3b9ce233f04864e1fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint_fast8_t</type>
      <name>size_type</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a30e3b110d1c16a386dcca0db0bb3261d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a4e87873caa8896e12d2b9521329ef574</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type &amp;</type>
      <name>reference</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a44d3963f9fb06679f536f8e90fa0cfa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const value_type &amp;</type>
      <name>const_reference</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a538229f6f56c9ba32a3f8e78e6bacf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type *</type>
      <name>pointer</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>af1171db5abffa5fd9b3e207bdc2d53c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const value_type *</type>
      <name>const_pointer</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a109314773d949b8ceac737eb87cc8a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>iterator</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ac44a480d4a0b274d3a0ccc15e5d8e354</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const_pointer</type>
      <name>const_iterator</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>aa99fa0aae2c78fd7fdf27f450ea3f8b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; iterator &gt;</type>
      <name>reverse_iterator</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>afdb96bc506ed887ada0ea8c6aa795295</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; const_iterator &gt;</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ab28c95d3b7ee8fcb3683378ddbeed709</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>connection_id</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a0b0a04ea956898b4db7b89d7d7b505e1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>connection_id</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a424b22d94a8c63b21ccc4fa5a058231f</anchor>
      <arglist>(const value_type(&amp;data)[Size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>connection_id</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a59fb4e1eebae45b0192749e5c40eb9a4</anchor>
      <arglist>(const std::array&lt; value_type, Size &gt; &amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>connection_id</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a98f9f663e77b809270a1b41d0a1f5e54</anchor>
      <arglist>(const_pointer data, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>connection_id</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a875797d26ba0835c1cc3199417cef18d</anchor>
      <arglist>(const connection_id &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr connection_id &amp;</type>
      <name>operator=</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ade9e5b6aa65ee41b2fe804d5b1783ab2</anchor>
      <arglist>(const connection_id &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>empty</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ae3c008303c667cc1b863855ac19aeced</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_type</type>
      <name>size</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a2e957aa7a438675fd3344492686c4980</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr void</type>
      <name>resize</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a9ea22fa7e639449a0f4e535654765c28</anchor>
      <arglist>(size_type size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr reference</type>
      <name>at</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>adb04eff3348390a4ef15b45a520f0e82</anchor>
      <arglist>(size_type p)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reference</type>
      <name>at</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a132c41920fe04ffa40dd9fb9d6fec82b</anchor>
      <arglist>(size_type p) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr reference</type>
      <name>operator[]</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a16082190eb8658a228f54c81bb15b73f</anchor>
      <arglist>(size_type p)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reference</type>
      <name>operator[]</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>aca02a5d2ce5cd9f91ab4bb45ce9f65e8</anchor>
      <arglist>(size_type p) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr reference</type>
      <name>front</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a9d04400e265195cee6c4c31c328b9de9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reference</type>
      <name>front</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a11c26c419f21dc5661ca1d12dc1b47f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr reference</type>
      <name>back</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a305e07589f56f95d70613a0d14b4e800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reference</type>
      <name>back</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a4c8889eea8e7cfc43d9cc4e9d53ee67b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr pointer</type>
      <name>data</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ae19c05f15b2f6ab7d1e1dcc959182e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_pointer</type>
      <name>data</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ac0ead2a11033ac87b6339e3330cd4458</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr iterator</type>
      <name>begin</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a3e4447139932d5400bf58d0b1b82fcd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_iterator</type>
      <name>begin</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ae96789b947a731ae81a7f53caa5c2193</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a71e55faebcb000bb98497b0486afc42f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr iterator</type>
      <name>end</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ad9a519454100a9358e93ae79d381347f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_iterator</type>
      <name>end</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a01845e5e374e6f975b38cc8e4d1a9c03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_iterator</type>
      <name>cend</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ab6872b224834e547c5c758d22c43ab57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a9a113b1872951f730d9959c88d7ad285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ab0894c431381862e848871b1bea427aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reverse_iterator</type>
      <name>crbegin</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a77ce082505957ad991b169385f04d6dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ae691fe8b5dab354e6439c0bdfa6cee01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ab6d7ef8c8fda05cec47863cb76d5a146</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const_reverse_iterator</type>
      <name>crend</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>aad4a0df1be7234b315ad93795e1e60dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>constexpr static size_type</type>
      <name>max_size</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a3b9e4383f3202eded08da3c8abe7fc1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a96dd77ff86200b30fe7a7bc713d03c12</anchor>
      <arglist>(const connection_id &amp;l, const connection_id &amp;r) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a69d1f5641b11d830d6440384d91165be</anchor>
      <arglist>(const connection_id &amp;l, const connection_id &amp;r) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>a91e80418f3f2ad4e312b3ece05368260</anchor>
      <arglist>(const connection_id &amp;l, const connection_id &amp;r) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>afd7ccfe9becdce707453959384b36d08</anchor>
      <arglist>(const connection_id &amp;l, const connection_id &amp;r) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>abc900d2e5169c325d4769a4daf2f82e7</anchor>
      <arglist>(const connection_id &amp;l, const connection_id &amp;r) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>ae5b033269d0e18ee0273c5c9c5080102</anchor>
      <arglist>(const connection_id &amp;l, const connection_id &amp;r) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classnexus_1_1quic_1_1connection__id.html</anchorfile>
      <anchor>afd1eaf63e70733eabbe9c17960e5a7ff</anchor>
      <arglist>(connection_id &amp;lhs, connection_id &amp;rhs) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_impl</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__impl.html</filename>
    <base>nexus::quic::detail::connection_context</base>
    <member kind="typedef">
      <type>boost::asio::any_io_executor</type>
      <name>executor_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>aacae16d7dde877cd5f6d8e69aa370560</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>connection_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a250eb184e051c53213f1a3516aaf2767</anchor>
      <arglist>(socket_impl &amp;socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~connection_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a787ca6f3275609c68ec76ce572b667ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>service_shutdown</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>ad60b76fbd78bbdac5197590aec132d28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>aa33df2f79f3e36d2078ead924e987047</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>connection_id</type>
      <name>id</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a99f010edefa39388975add61982e0cba</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a3fa73cd9ac375a816bd87e5907d24934</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a2a1ccc6cc1561c5ce76bd037d1d9f61a</anchor>
      <arglist>(stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_connect</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>abb8832927358f94b1a00b51f184a797c</anchor>
      <arglist>(lsquic_stream *stream)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_connect</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a72762d78698a6f1c759af797dcdd88b6</anchor>
      <arglist>(Stream &amp;stream, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>ac038c942fe54371baa0f8e7cc15f9298</anchor>
      <arglist>(stream_accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_accept</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a81c569aa59430c54f8c327ac3d120ffe</anchor>
      <arglist>(lsquic_stream *stream)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_accept</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>ac46740cbb32ae4a17cb88e7bae789e98</anchor>
      <arglist>(Stream &amp;stream, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a1658e4a10dce8c06e2f14618925f8138</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>aa98a7e1d4f5690d7b0bc33e9f0d28e3d</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>ab45b4de428af9c1475bc5fd1caed4563</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a87cb4fd786c68def30e1f6c6ce0216fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_handshake</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>abb72b0797b21bca2881445744c85d96f</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_remote_goaway</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a8c2512700f46cd0d9883d66d0bedcc9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_remote_close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>ad30375470d940e6e9743c9c4030e5b9c</anchor>
      <arglist>(int app_error, uint64_t code)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_incoming_stream_closed</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a6941a6589613b0062b62e48dce452882</anchor>
      <arglist>(stream_impl &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accepting_stream_closed</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a617c8490f6ecc3e0e8a74b7e6d6a0b7c</anchor>
      <arglist>(stream_impl &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connecting_stream_closed</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a7596bbdff7b7e7ac57e2f1e3e3c4b2d9</anchor>
      <arglist>(stream_impl &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_open_stream_closing</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a9097dd9e4b85cf0cc81d22572d89b5ee</anchor>
      <arglist>(stream_impl &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_open_stream_closed</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a4478c7248ea675190ddacdccc2823cd5</anchor>
      <arglist>(stream_impl &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_closing_stream_closed</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>aeaee99cf14795ced2c5724c5f1817c97</anchor>
      <arglist>(stream_impl &amp;s)</arglist>
    </member>
    <member kind="variable">
      <type>service&lt; connection_impl &gt; &amp;</type>
      <name>svc</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>a908e9a0daa8fc24ac0431214dd88fabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>socket_impl &amp;</type>
      <name>socket</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>ac59432ee37eb576f46cf5a0a62ff9d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>connection_state::variant</type>
      <name>state</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__impl.html</anchorfile>
      <anchor>acd12ad68088fbd43914e389f555a156a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::trace::connector</name>
    <filename>classvsomeip_1_1trace_1_1connector.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~connector</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>aff436b838a3007f4f0909df5e2a449cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>add_channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>a4a71e05f97edf63fa0d28f9ff2a67f02</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remove_channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>a0681ee5345d8fc68f4636a1d94e19277</anchor>
      <arglist>(const std::string &amp;_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>get_channel</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>adf1683628ff69a9a5e4e2fc40c6f02a2</anchor>
      <arglist>(const std::string &amp;_id=VSOMEIP_TC_DEFAULT_CHANNEL_ID) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; connector &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip_1_1trace_1_1connector.html</anchorfile>
      <anchor>a8ff938a82e0c337f7cb7abcb57346d5f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::connector</name>
    <filename>classvsomeip__v3_1_1trace_1_1connector.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~connector</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>a0b70a8379de503e47f8d570860d72012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>add_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>abcdeb58430c4ede708d2f22165cd3a03</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>remove_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>afb4cb3c35a995c26ded9393bd88f2e79</anchor>
      <arglist>(const std::string &amp;_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; channel &gt;</type>
      <name>get_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>ada0c392047dd7d59b676ac3c266c7f9f</anchor>
      <arglist>(const std::string &amp;_id=VSOMEIP_TC_DEFAULT_CHANNEL_ID) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; connector &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector.html</anchorfile>
      <anchor>a1c4ce0d63864a5df155126810411fa75</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::trace::connector_impl</name>
    <filename>classvsomeip__v3_1_1trace_1_1connector__impl.html</filename>
    <base>vsomeip_v3::trace::connector</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>connector_impl</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>aa22d4116204e81ca965fbccfbecbf865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~connector_impl</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a18c34cebaa812c1e0f09d1c6f691c53d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>configure</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a39497bf7ed6c5d1839f83be7d32767e5</anchor>
      <arglist>(const std::shared_ptr&lt; cfg::trace &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a129bbaf1384f33490de770997bfecada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a8fe95188cb9965805725ac4d9631c27e</anchor>
      <arglist>(const bool _enabled)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>aa5c59f35acc12448fb064fec902c8c1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>ab1a27ad5eae1afe3ae10324bdbae27f3</anchor>
      <arglist>(const bool _sd_enabled)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sd_enabled</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a506e6e7d1a4b7e511b741084ac05acb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sd_message</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a04f150ea6e24fe9208b4582303fb1d71</anchor>
      <arglist>(const byte_t *_data, uint16_t _data_size) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; channel &gt;</type>
      <name>add_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>ab6b93cd4de2dc740e818e07c9722ff9d</anchor>
      <arglist>(const std::string &amp;_id, const std::string &amp;_description)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>remove_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a3b04de96f3ccc186becd79ac38573bf2</anchor>
      <arglist>(const std::string &amp;_id)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; channel &gt;</type>
      <name>get_channel</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>afe01daa65418c98ebbf9358cf24edbbc</anchor>
      <arglist>(const std::string &amp;_id) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>trace</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a7356d20c88df0758c8b68c518a7288d7</anchor>
      <arglist>(const byte_t *_header, uint16_t _header_size, const byte_t *_data, uint32_t _data_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; connector_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1trace_1_1connector__impl.html</anchorfile>
      <anchor>a53882996071d90f5f1131e5725c903d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::global::context</name>
    <filename>classnexus_1_1global_1_1context.html</filename>
    <member kind="function">
      <type></type>
      <name>context</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>acc70da86fbcbf6213f909b69ddd0e0df</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>context</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>ad870f0a403eae55e895e4dbb09410ce7</anchor>
      <arglist>(context &amp;&amp;o) noexcept</arglist>
    </member>
    <member kind="function">
      <type>context &amp;</type>
      <name>operator=</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a734091fa34c4bd6f9ff0eed5e7371430</anchor>
      <arglist>(context &amp;&amp;o) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~context</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>aad0abb677ea785447688b2a08b972da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a4d4159b762e6adf4f331a2a86edc9885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_to_stderr</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a965ffced7a061dee0d339fe59193d2b2</anchor>
      <arglist>(const char *level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a058045c822c7a7b781a60fb78acd0178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend context</type>
      <name>detail::init</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a525e431fee22daa7c078c52e9dfcdd99</anchor>
      <arglist>(int flags, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a377dc95ca000c0f92c9adf365b94b1d4</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a69b33070d4456f9685598c0dda253bdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>acc3b00a9bc554e511f00e2032a4256b2</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a156cc2212f3d4c3dd10a2471a7a30b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a4536bd23c03d74ba78c8c07ae6f180a3</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>classnexus_1_1global_1_1context.html</anchorfile>
      <anchor>a43ecb7139987987f6d3996cac85d3965</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::credentials</name>
    <filename>classvsomeip__v3_1_1credentials.html</filename>
    <member kind="typedef">
      <type>std::tuple&lt; client_t, uid_t, gid_t, std::string &gt;</type>
      <name>received_t</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>a26b3f62c0a364861a1aa02554f9693ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>activate_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>a7c6a8e6119146eb168666fa845fbd829</anchor>
      <arglist>(const int _fd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deactivate_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>a469d5f5569877c938f0a6a0e385a4a04</anchor>
      <arglist>(const int _fd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boost::optional&lt; received_t &gt;</type>
      <name>receive_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>aacfb1a72d1c225321dd3d03b8c8e951f</anchor>
      <arglist>(const int _fd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>send_credentials</name>
      <anchorfile>classvsomeip__v3_1_1credentials.html</anchorfile>
      <anchor>aa34c48c3736701d38cf2d30aad1385f8</anchor>
      <arglist>(const int _fd, client_t _client, std::string _client_host)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::datagram_socket_service_ext</name>
    <filename>classboost_1_1asio_1_1datagram__socket__service__ext.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>abd4e2434a9e9ad6483f290fe5587b1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a3fe254d7b7b74b4e5950414d5d8ea632</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::implementation_type</type>
      <name>implementation_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a2d4ec5163f092862bcbf59f7a33c9405</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a936c3bd89e7c9b9ec8d5c328594d756a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a525f27974b67d888796e278fc58e4851</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>datagram_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a251789f76de2702883aef5844da98692</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>acf797737e7f2a31e46cff5b379c9c7f8</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a2582cf081ae667c39826d16db4a887a2</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a2a664b93f9dd80da6d0f287d50a50f2f</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>abe069eff765900cf56e60d56a6a51665</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ac4156f667ea1c628c266a9e23caaaae2</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>afab16db99c42afa858ef2585b921c9da</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a65a4116a78d8cd7a5f65e66b2c9ab310</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a3de7f13f0f937a60c1401ab93e046332</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>adaeb84004a1d9664bcdf7fe7ac33cccd</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a0e1b398c4cc1d6eb1707323de653a9c1</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>abe2f8e273801fee8e4b5354fa50370cd</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aac60f5a25ef14173229c776c0f4c34ec</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>add953f4f2c04fbe838263fee7b20ef4c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a80772ba1df143c23c09e0505c0a18384</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>afbd55ead80a5a846689e8e7cfff70407</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a1db88c748e97c1515b800465d42547dd</anchor>
      <arglist>(implementation_type &amp;impl, const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a58832ec941b46ed719b206ce02c36c93</anchor>
      <arglist>(const implementation_type &amp;impl, GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a3ab4012367f9026c22bcc022c5f9a033</anchor>
      <arglist>(implementation_type &amp;impl, IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>afdbd007bbc3b38664f09c2c44110870f</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad8fb2a9d97efd72d528b1f703ad9c957</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>add207e7c2b18aad5263822edb677d15b</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a4c48f626a8f7a9945e876f6d986528ff</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad2f596973f260df06d833f37eda14c26</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a56fa21251f750fc3f9e53c9c8c4cf1c2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a50a6692bf92b8ac633e991128f11a285</anchor>
      <arglist>(implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>af59d85591c6de2bb91a40b28818135ef</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a27771042e9ee627232dc98a0811d643b</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>af9836f79d536679128ad560585950850</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a5f91f23d0c5e8dd57559f4d22e5b9ccf</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aaa660284f9c9c65af7ffe669422833e8</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send_to(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const ConstBufferSequence const endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ae1f55cc1a1f4832ad1548ec7f629e1a6</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a441975e7aeccb2ba8533ffc74e9b404c</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a9f8178562dd8dcaf509990e9d9a7c147</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t)) async_receive(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a7e4fbb4a60fa841607200694094f3364</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a0a1de59af0b64ee1357850b6d4ba18dd</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a7d407ae5403cb5ae6573ad5cac526320</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, boost::asio::ip::address)) async_receive_from(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const MutableBufferSequence endpoint_type socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a20de356f88d589545c46c48b2dedc22d</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a29d2722f998a084ba8d7b7f41bfa63a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a604f5aa62a06cec8fe7593e7e43ecef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>a4ffbe2ffb0fd01eb45ca477be1afa069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence const endpoint_type &amp;</type>
      <name>destination</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad8b472be1a9e909cf46c5415a6467a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence const endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ab9571ccf5955def14f7cae6892f35e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ad1a82df6fd6319347ce3969828896bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aaf18b0e72276f09ac33e03518491e67d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence endpoint_type &amp;</type>
      <name>sender_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>aae300bff9a2fd543d63aab05578d2b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence endpoint_type socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1datagram__socket__service__ext.html</anchorfile>
      <anchor>ac972690141e3315501ccfcdfba74489a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::debounce_filter_impl_t</name>
    <filename>structvsomeip__v3_1_1debounce__filter__impl__t.html</filename>
    <base>vsomeip_v3::debounce_filter_t</base>
    <member kind="function">
      <type></type>
      <name>debounce_filter_impl_t</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__impl__t.html</anchorfile>
      <anchor>a6454ac1a6c2da4e7ccd1bcd754564571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>debounce_filter_impl_t</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__impl__t.html</anchorfile>
      <anchor>ab9604099bf627de5077721ca59354eae</anchor>
      <arglist>(const debounce_filter_t &amp;_source)</arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>last_forwarded_</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__impl__t.html</anchorfile>
      <anchor>a3add9fa9294ce1f1b58611952e18e663</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::debounce_filter_t</name>
    <filename>structvsomeip__v3_1_1debounce__filter__t.html</filename>
    <member kind="function">
      <type></type>
      <name>debounce_filter_t</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>a1946441d6161a0aeb42f110dd687ab5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>debounce_filter_t</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>a3c3fed76f50c988637adc65b61b229a2</anchor>
      <arglist>(const debounce_filter_t &amp;_source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>a1623655916294c80585e519f6857bdb1</anchor>
      <arglist>(const debounce_filter_t &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>abaae0dec02751a740183771d16a32932</anchor>
      <arglist>(const debounce_filter_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>adc9eebd170c3771fe29b362602770ee9</anchor>
      <arglist>(const debounce_filter_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>on_change_</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>a8d480779e1051e9848a225d220d1869e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>on_change_resets_interval_</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>ab1e508888752227ddf0aa5f2970667e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>interval_</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>aed5a4b3982d77e8caf82e8e7b73ae6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::size_t, byte_t &gt;</type>
      <name>ignore_</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>a05b4fa1d2800b8d72be422e86cf03cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>send_current_value_after_</name>
      <anchorfile>structvsomeip__v3_1_1debounce__filter__t.html</anchorfile>
      <anchor>acfbc7b53f6fef8cf3e1f2fa1f0e34932</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::deregister_application_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1deregister__application__command.html</filename>
    <base>vsomeip_v3::protocol::simple_command</base>
    <member kind="function">
      <type></type>
      <name>deregister_application_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1deregister__application__command.html</anchorfile>
      <anchor>a394154fa75ff3eac5d0e9e00b7ce1751</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::deserializable</name>
    <filename>classvsomeip_1_1deserializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~deserializable</name>
      <anchorfile>classvsomeip_1_1deserializable.html</anchorfile>
      <anchor>a304778061e6163548a0186fa988a79fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip_1_1deserializable.html</anchorfile>
      <anchor>aa1c08103667ed6f4fc0d016bb7f2294c</anchor>
      <arglist>(deserializer *_from)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::deserializable</name>
    <filename>classvsomeip__v3_1_1deserializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~deserializable</name>
      <anchorfile>classvsomeip__v3_1_1deserializable.html</anchorfile>
      <anchor>a68052abb91eb2f199587244db8501f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializable.html</anchorfile>
      <anchor>a88a8c906c515179d67e7d4165595b3c8</anchor>
      <arglist>(deserializer *_from)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::deserializer</name>
    <filename>classvsomeip__v3_1_1deserializer.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>af0d1adf3e801317b2c9b62c823492002</anchor>
      <arglist>(std::uint32_t _buffer_shrink_threshold)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a20fbb46a3415a30a5ebda8517582c34d</anchor>
      <arglist>(byte_t *_data, std::size_t _length, std::uint32_t _buffer_shrink_threshold)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aa3f409e11e9d78144f21165e673030d5</anchor>
      <arglist>(const deserializer &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~deserializer</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a1e0b6a46e77f0993f2598476429daff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>afc712ea1564260d6fc9463a1330c3120</anchor>
      <arglist>(const byte_t *_data, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a20d339cbd45abb4c7ebf6bdec66b4feb</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>append_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a400065e0a7a76abd558cfe60b2175db6</anchor>
      <arglist>(const byte_t *_data, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>drop_data</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a0c7dc97c874feb1eecbb4c5f2a43d557</anchor>
      <arglist>(std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_available</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a56d0e984fc23ccb42d8c7b54be133ed7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_remaining</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a2aff0dc69899b033e48d4a0a6c3bfbc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_remaining</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a3d83131eb26fa2f812b41048f23c821d</anchor>
      <arglist>(std::size_t _remaining)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_impl *</type>
      <name>deserialize_message</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aa358f2e5e22b509034d9018aba455140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ae03767b8a68bdbcc648f86571bf6edbe</anchor>
      <arglist>(uint8_t &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aa6eb64261a7832d3c4f1c9117008d9e1</anchor>
      <arglist>(uint16_t &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a2ef63ce443cc3f7197a5fc99d8a31d8b</anchor>
      <arglist>(uint32_t &amp;_value, bool _omit_last_byte=false)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ad3ab742891c472ddf2b2249799d15826</anchor>
      <arglist>(uint8_t *_data, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a6b589fb36db94b75ca27db909bac5005</anchor>
      <arglist>(std::string &amp;_target, std::size_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ad68cdff113bc749606bf4f637c90e08e</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;_value)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>look_ahead</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a8350f2f7d2cf39ddbf4f42bd730b5d25</anchor>
      <arglist>(std::size_t _index, uint8_t &amp;_value) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>look_ahead</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>af68ff15aa6191e96a9ed6346603ebf0f</anchor>
      <arglist>(std::size_t _index, uint16_t &amp;_value) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>look_ahead</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>ace2a86fe7ba2fde22d65bcca8842d318</anchor>
      <arglist>(std::size_t _index, uint32_t &amp;_value) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a4dd9affe4a2213ccfa0b316bc313137a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>data_</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a27236a02b3e885a8f049c4f2b8f44662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; byte_t &gt;::iterator</type>
      <name>position_</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>aeba7a76e4794fc6506661449991be9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>remaining_</name>
      <anchorfile>classvsomeip__v3_1_1deserializer.html</anchorfile>
      <anchor>a08fa472e45f0a2e0fe21117182289e45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::deserializer</name>
    <filename>classvsomeip__v3_1_1sd_1_1deserializer.html</filename>
    <base>vsomeip_v3::deserializer</base>
    <member kind="function">
      <type></type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>a08556730647bda0cbf2048c955c72d88</anchor>
      <arglist>(std::uint32_t _shrink_buffer_threshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>a343d37c980ff9209be1b49fdfb4340fc</anchor>
      <arglist>(uint8_t *_data, std::size_t _length, std::uint32_t _shrink_buffer_threshold)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>add8d3774757b2d1854759826ccb1092c</anchor>
      <arglist>(const deserializer &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~deserializer</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>a63ce5668e06c95aa0f762341f31f4f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>message_impl *</type>
      <name>deserialize_sd_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1deserializer.html</anchorfile>
      <anchor>abab805d7ae1f05b262fb18256d31dd00</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::distribute_security_policies_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1distribute__security__policies__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>distribute_security_policies_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1distribute__security__policies__command.html</anchorfile>
      <anchor>a97f10cbe9c08c54c772cfb7310309956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1distribute__security__policies__command.html</anchorfile>
      <anchor>a57ef28dd5b36ebb860ac6253625fa1bf</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1distribute__security__policies__command.html</anchorfile>
      <anchor>a55f4c600e6de769e515503dc5d508038</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::shared_ptr&lt; policy &gt; &gt;</type>
      <name>get_policies</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1distribute__security__policies__command.html</anchorfile>
      <anchor>a166fc9d1b943a793c605091349f46439</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payloads</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1distribute__security__policies__command.html</anchorfile>
      <anchor>aaf39b842127aa16b11af61e837893eaa</anchor>
      <arglist>(const std::map&lt; uint32_t, std::shared_ptr&lt; payload &gt; &gt; &amp;_payloads)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::dummy_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1dummy__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>dummy_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1dummy__command.html</anchorfile>
      <anchor>ac628e54b5b75356963d26b4e37bfe198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1dummy__command.html</anchorfile>
      <anchor>aff097518bf638a88e6becd9de82a2f46</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1dummy__command.html</anchorfile>
      <anchor>ad8604d4000bef75b09a5354a4eb57c1b</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::e2e</name>
    <filename>structvsomeip__v3_1_1cfg_1_1e2e.html</filename>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>custom_parameters_t</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>ae37481a5fe0171866bb4d34638fbf184</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>e2e</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a13601c7e551950db7e471359bc980ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>e2e</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a958c131a73b706d0d7d10231580b5001</anchor>
      <arglist>(const std::string &amp;_variant, const std::string &amp;_profile, service_t _service_id, event_t _event_id, custom_parameters_t &amp;&amp;_custom_parameters)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>variant</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>af11a9f593b41308126091f23389a1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>profile</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>adea70496bebfd80ec4161a2986f5304e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_id</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a00b0fd2bdc678ac4583d505d89754514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>event_id</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>ab804ab09f3cc7597e8f370e238813361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>custom_parameters_t</type>
      <name>custom_parameters</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1e2e.html</anchorfile>
      <anchor>a61f332fc249e9cbb088bf9c9c9457d55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e_crc</name>
    <filename>classvsomeip__v3_1_1e2e__crc.html</filename>
    <member kind="function" static="yes">
      <type>static uint8_t</type>
      <name>calculate_profile_01</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>aa1ddbef798a4d2cbbc65e46c4b4079be</anchor>
      <arglist>(buffer_view _buffer_view, const uint8_t _start_value=0x00U)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>calculate_profile_04</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>a263c8c32fbc2c5830d97f5ab0ecf0966</anchor>
      <arglist>(buffer_view _buffer_view, const uint32_t _start_value=0x00000000U)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16_t</type>
      <name>calculate_profile_05</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>a4f353123123155c7da80432d486f9f37</anchor>
      <arglist>(buffer_view _buffer_view, const uint16_t _start_value=0xFFFFU)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>calculate_profile_07</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>a6c8da70b29aff7fb86adac6eb097e0dd</anchor>
      <arglist>(buffer_view _buffer_view, const uint64_t _start_value=0x0000000000000000U)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>calculate_profile_custom</name>
      <anchorfile>classvsomeip__v3_1_1e2e__crc.html</anchorfile>
      <anchor>a801a043e43398a424186cf22bc8b1cdd</anchor>
      <arglist>(buffer_view _buffer_view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::e2e_provider</name>
    <filename>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>add_configuration</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>ab950549e6cd4ba13a1de3f50171c156b</anchor>
      <arglist>(std::shared_ptr&lt; cfg::e2e &gt; config)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_protected</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a3810d71c7678fe4126d181ff4f9974cc</anchor>
      <arglist>(e2exf::data_identifier_t id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_checked</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a74fc02ab37d0e0985936816066376efc</anchor>
      <arglist>(e2exf::data_identifier_t id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>get_protection_base</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a0e9e9bebe966b5d12fc7dc765399460f</anchor>
      <arglist>(e2exf::data_identifier_t _id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>a52957d94d5d6d18362b206f3a8d70c16</anchor>
      <arglist>(e2exf::data_identifier_t id, e2e_buffer &amp;_buffer, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider.html</anchorfile>
      <anchor>ac185d0ec78bcd7fe22cb08015a7c29c7</anchor>
      <arglist>(e2exf::data_identifier_t id, const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::e2e_provider_impl</name>
    <filename>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</filename>
    <base>vsomeip_v3::e2e::e2e_provider</base>
    <base>plugin_impl&lt; e2e_provider_impl &gt;</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>e2e_provider_impl</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>abf898db0f982f82e71448ef9f3a34031</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~e2e_provider_impl</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a6146ac8133711e7e10ddc38419be13cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>add_configuration</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a06ff2f8ec81c1cfbc5b4dbdfe8bb5736</anchor>
      <arglist>(std::shared_ptr&lt; cfg::e2e &gt; config) override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_protected</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a7ef2001f4622caffee5dbcd46124c419</anchor>
      <arglist>(e2exf::data_identifier_t id) const override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_checked</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a121178cece22c09d723a1e81cb205b9d</anchor>
      <arglist>(e2exf::data_identifier_t id) const override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::size_t</type>
      <name>get_protection_base</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>aed6309110a8418c144901be47aa29e12</anchor>
      <arglist>(e2exf::data_identifier_t _id) const override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a15a38819f91f40200bea498848e6859a</anchor>
      <arglist>(e2exf::data_identifier_t id, e2e_buffer &amp;_buffer, instance_t _instance) override</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a7a02f7d6cb43679136cb886dc0d2d45e</anchor>
      <arglist>(e2exf::data_identifier_t id, const e2e_buffer &amp;_buffer, instance_t _instance, profile_interface::check_status_t &amp;_generic_check_status) override</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_v3::e2e::profile01::profile_config</type>
      <name>make_e2e_profile_config</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1e2e__provider__impl.html</anchorfile>
      <anchor>a72600e64dfc908fe1793ae6b02805d5a</anchor>
      <arglist>(const std::shared_ptr&lt; cfg::e2e &gt; &amp;_config)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint</name>
    <filename>classvsomeip__v3_1_1endpoint.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>error_handler_t</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a26529e9a8ce197b1322ef8ebb84408e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; endpoint &gt; &amp;, service_t)&gt;</type>
      <name>prepare_stop_handler_t</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a6674de79f3ba2ed9130a5ddb5a4287da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>add26a9648e536109f521064a04a436de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ad06a71c4037f8a73dc9e2f24cca938e5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>af969a19eb4782fa21593f625ce6c5d79</anchor>
      <arglist>(const prepare_stop_handler_t &amp;_handler, service_t _service=ANY_SERVICE)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a36a9294914c22354f04707fae9ef70d8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a8f1e447750a6b87ec43c9d6021f05333</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>aa3b1eec25e1713553d012aa968cfe028</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a5642f2e3b1ccf0f7a5b2d9544d82f426</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ac8342c74d09a069e5816b21f21901a29</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a2ef30e029c56b980761e0a1d83eeca30</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>enable_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>af677d6122b2f7144ed04602ab280c553</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a02f26ceabecabf34bcb820e2abcfd5f3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a7198217a8b79d8d342ee7a594edcb32c</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, uint16_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ad9a5c22653aed4980956664a02001fe1</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_stop_handler</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a5b3c9f4184afa488cd3c41d91aca7548</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a3a39d68351992a9b4fb1a8fd59719d5e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>aa5963bef9af1ac28e7e457998eb5547b</anchor>
      <arglist>(uint16_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>adad927849a7ec30a7e30ee73ea02beea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>aa2fbba6034ecd86f243b6b9d19cf7d46</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>increment_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a25f3385c83bfa30b982cf7405b2844dc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>decrement_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>adbdeb4834142e150345f32dd898371a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>adb96ad929034c18f2003830338d826de</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a19b99152b38777291339993d0a6e6897</anchor>
      <arglist>(bool _force=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>ac2d4406dbb98418be64df9f22f405ecc</anchor>
      <arglist>(const error_handler_t &amp;_error)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a1f7da6b7e42a63917c606fb6d478be81</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a28913c09d6fc90dcb890595a19bec8d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a51f4eef0e2fcb57a4eb4b0142cc7a26e</anchor>
      <arglist>(bool _established)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1endpoint.html</anchorfile>
      <anchor>a623c8f96f307287a9a5fb64c85c9773b</anchor>
      <arglist>(bool _connected)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::server_endpoint_impl::endpoint_data_type</name>
    <filename>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</filename>
    <member kind="function">
      <type></type>
      <name>endpoint_data_type</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>a0d751af8eecd3c2f48978f3fdd26c5ae</anchor>
      <arglist>(boost::asio::io_context &amp;_io)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>endpoint_data_type</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>a07d2a30691a6d536306b49f152bbff77</anchor>
      <arglist>(const endpoint_data_type &amp;&amp;_source)</arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; train &gt;</type>
      <name>train_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>a40e8ecc8cfb490fbc666b0b837df1b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::chrono::steady_clock::time_point, std::deque&lt; std::shared_ptr&lt; train &gt; &gt; &gt;</type>
      <name>dispatched_trains_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>afc811d0ec5e6ffdaceabdbbd33f19b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; boost::asio::steady_timer &gt;</type>
      <name>dispatch_timer_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>ac3f9b36f6127b1cd4a5474781040960b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>last_departure_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>ad714466626e3a8e28b90e9c2150ffb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>has_last_departure_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>a75314ccceeb2a47ec00b7b80e0b3b1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::deque&lt; std::pair&lt; message_buffer_ptr_t, uint32_t &gt; &gt;</type>
      <name>queue_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>acae64d9850bf495d7af6ce38b98542bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>queue_size_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>a431188cfcf7a76e66c18eb6808b08b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_sending_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>a7512cf33764be4fe71418acfe94631f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::steady_timer</type>
      <name>sent_timer_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>afa3cc8cbc4b776a8373f812523ee8ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::io_context &amp;</type>
      <name>io_</name>
      <anchorfile>structvsomeip__v3_1_1server__endpoint__impl_1_1endpoint__data__type.html</anchorfile>
      <anchor>adbcc29f8534dc7ca9ba5f22281c625ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_definition</name>
    <filename>classvsomeip__v3_1_1endpoint__definition.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT const boost::asio::ip::address &amp;</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a89e4e2f4c3504ad93c14fb1fb2efdc83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a5003440fdba6b9326d41ed78f825daa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a5cbf51c78af8a847f41b93dc378c64e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>ab7b535ec1dc66745e040684c306a3994</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a4d802d71a496afe383f6a2bfd5f7c654</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>endpoint_definition</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>a642ffe43d5f90217ec9275011ec53701</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, uint16_t _port, bool _is_reliable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__definition.html</anchorfile>
      <anchor>ab682b0ea9e4d5b5e1505b57c57dc2788</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, uint16_t _port, bool _is_reliable, service_t _service, instance_t _instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_host</name>
    <filename>classvsomeip__v3_1_1endpoint__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint_host</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a3d3609bd54d5de33dcc3e92cae8b794a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>aa9b1ae0e1570a24e5b4e8ef79624c2d8</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a92a752605bc8955fc2da81e3d83df7c8</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>on_bind_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>aaafc1f4e72d11859d452a31c3e1016e9</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint, const boost::asio::ip::address &amp;_remote_address, uint16_t _remote_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a769dd844d17c975ce9f566d886420708</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a9d541419b857dea0837d81aba6ffaae0</anchor>
      <arglist>(uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a4738dd8ce13a7470a4b37389099c0b36</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_client_host</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>afd320b58cc886743b5714081b044f14c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual instance_t</type>
      <name>find_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>addc7028857b97d602383416ab8602eca</anchor>
      <arglist>(service_t _service, endpoint *const _endpoint) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_multicast_option</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__host.html</anchorfile>
      <anchor>a9a3329671fc9394458b2006dfefb8ccc</anchor>
      <arglist>(const multicast_option_t &amp;_option)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_impl</name>
    <filename>classvsomeip__v3_1_1endpoint__impl.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">vsomeip_v3::endpoint</base>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a580aee8cfede03e29e662039ea3dc9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a8a062691ebe7842bc8919df11d85f608</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_context &amp;_io, std::uint32_t _max_message_size, configuration::endpoint_queue_limit_t _queue_limit, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a4f9925f1a7514e9af6cc1e2085d88547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ac9d88f312c70b8acd27c1faee718b6d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ab5b96b87ffab4ec03696cf2a9d5b4883</anchor>
      <arglist>(service_t, const std::string &amp;, uint16_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a063c224213f6836e75abbc51501201d2</anchor>
      <arglist>(service_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_stop_handler</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ac3b2403776f25fe54970495a77282490</anchor>
      <arglist>(service_t)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a1a437eb727289136c64586fce6759b4d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a89b933c9a3b7c144a2d3018714fef3ba</anchor>
      <arglist>(uint16_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aa61ba21518b80cd28168c057f42f1136</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>ac72d64b723824cb091b18f3efd1c4b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrement_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>affaed29e3d9e9561ae485ba099a019b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_use_count</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a322bba8a64ccbae7d4333ed617da8928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a4eecd5a74ab102dbcb46c78f62c64398</anchor>
      <arglist>(const error_handler_t &amp;_error_handler)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a5ef1369075bedd2b31f8ae9a7ec9b06e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aa876b864cd057c381f7d8807d49eb286</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a8f8de4211c56f7bab7321f79fb790070</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a14dd5aed50b63627e9e75a176f04e723</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a95ba391cff53a6735d4e22a6683d1ba1</anchor>
      <arglist>(bool _force)=0</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>cms_ret_e</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a36eb32b873548d781cadafbddd346dbb</anchor>
      <arglist></arglist>
      <enumvalue file="classvsomeip__v3_1_1endpoint__impl.html" anchor="a36eb32b873548d781cadafbddd346dbba15186e65ba660b06877a7a54e84b2edb">MSG_TOO_BIG</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1endpoint__impl.html" anchor="a36eb32b873548d781cadafbddd346dbbaefd1f02de4771e98d840a4d53a1489e8">MSG_OK</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1endpoint__impl.html" anchor="a36eb32b873548d781cadafbddd346dbba57c0347b8753dfe73a4f2df9eac58d70">MSG_WAS_SPLIT</enumvalue>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>find_magic_cookie</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aaf5ef447f4ab2448169009c736894409</anchor>
      <arglist>(byte_t *_buffer, size_t _size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a64f600aa15559f38d165f1ebd02b33ed</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_context &amp;</type>
      <name>io_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aacdab79978405071e3164590a3403188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; endpoint_host &gt;</type>
      <name>endpoint_host_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a9a336e3c05136670d8bb3f9e9618ea00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; routing_host &gt;</type>
      <name>routing_host_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a67b77acb05e6da113100a1499e247a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_supporting_magic_cookies_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a95fab90528f52589b086dc3d652cac29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>has_enabled_magic_cookies_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a0645325614919ecdb16b6318b57a3f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, uint8_t &gt;</type>
      <name>opened_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a9ac6336a0b5bdd5f692af087cc99a763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint32_t</type>
      <name>max_message_size_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a93341d9ef3ee06ceab093cf33fcb3bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; uint32_t &gt;</type>
      <name>use_count_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a817d19b1a09c1da690510265416a5c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>sending_blocked_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a6a9dae71d49634336bf76cd6f6780491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>local_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a8ff928773bcd1a180aeaa9bb634162ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>endpoint_type</type>
      <name>local_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a3c9f320a762bfa83faa7cf992006b8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>error_handler_t</type>
      <name>error_handler_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>aafb65a1f13017a25cde7284002ee830c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>error_handler_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a5bd63ecac6426ea3c8ec9d6f4cddbb87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const configuration::endpoint_queue_limit_t</type>
      <name>queue_limit_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a620be8934f4d4f80d1a98dc4c0f7f09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>configuration_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a6b383bb9d06b0602de269343f9dce0c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_supporting_someip_tp_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__impl.html</anchorfile>
      <anchor>a795489cdc652f0944cc282e55e8b2bfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_manager_base</name>
    <filename>classvsomeip__v3_1_1endpoint__manager__base.html</filename>
    <base>vsomeip_v3::endpoint_host</base>
    <member kind="function">
      <type></type>
      <name>endpoint_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ae4ab24bb1df079a022f3928c092e3767</anchor>
      <arglist>(routing_manager_base *const _rm, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~endpoint_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ac3a01c39758f25e5e4f9b399d1bdbc36</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a40f8b4465d9ca407d679d836b6338b48</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a96d52dd074aa6c627ecb287e157edd80</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ae0dcf0b9193b5b4180d2b807430301da</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a188876ae998b0c16b3604b83db73740e</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a84828c32d6a4559cc515b5ba0fdcab2e</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_set&lt; client_t &gt;</type>
      <name>get_connected_clients</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a30be38a09817e7d813334f6e03a03bf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_local_server</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a64302fd111e444c6319a69f1ff8c2a1f</anchor>
      <arglist>(const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>acf279e2cfba03fdbddb212374bb0daf4</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ae5fb3b878057976db3744b1e927e544e</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_bind_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>abcb744a5153c6863ffccd0e2f8ee7f4e</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint, const boost::asio::ip::address &amp;_remote_address, uint16_t _remote_port)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>on_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>acc1b34f438aed018f4d9808a06d84381</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>release_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a3bd46faf250e4034f65c985a599036d5</anchor>
      <arglist>(uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a70dcbecf8d87f70208c6452a6dcebb48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_client_host</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a841dc48fcae736782dcc725fb890d518</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>find_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>af53c742e07631e6c90d5dcfbd9ce02f4</anchor>
      <arglist>(service_t _service, endpoint *const _endpoint) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_client_states</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a6bfc8b216390963274f1b8f99c73eb32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_multicast_option</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a25cd5c4f98d867666b6888a587fd5bee</anchor>
      <arglist>(const multicast_option_t &amp;_option)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::map&lt; client_t, std::shared_ptr&lt; endpoint &gt; &gt;</type>
      <name>get_local_endpoints</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a9f653e3f3f5c13e1e4ce096e501622d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>routing_manager_base *const</type>
      <name>rm_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a2b88917c0630dca658f868a696a78b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_context &amp;</type>
      <name>io_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a61bbed2b563d96671c5f794ce02b2de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>configuration_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>a27d8b5c87e9262acc0fbd9fd7b3831ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_local_routing_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>aab377ed0388083c24f41e3530d6301a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>port_t</type>
      <name>local_port_</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__base.html</anchorfile>
      <anchor>ad6892d7ecc502d716feb7c4b90b3e927</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::endpoint_manager_impl</name>
    <filename>classvsomeip__v3_1_1endpoint__manager__impl.html</filename>
    <base>vsomeip_v3::endpoint_manager_base</base>
    <member kind="function">
      <type></type>
      <name>endpoint_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aae60d0b604fa9aa09033850c05cbb1c3</anchor>
      <arglist>(routing_manager_base *const _rm, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~endpoint_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ad774de583c4b4740ae8753533b934704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>acfe1ecda149347dad01bae2e37a7ab33</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a83c1b6e8e74549f2c3f88cf59a3d0bc3</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>is_remote_service_known</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a57d8b4adf3013d13f6b80e75ffe52d42</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, const boost::asio::ip::address &amp;_reliable_address, uint16_t _reliable_port, bool *_reliable_known, const boost::asio::ip::address &amp;_unreliable_address, uint16_t _unreliable_port, bool *_unreliable_known) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_remote_service_info</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a797fe26a27d30e229f1da0fccacd296e</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_ep_definition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_remote_service_info</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a35238efb8551410b1a21d27be6ec8f62</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_ep_definition_reliable, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_ep_definition_unreliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_remote_service_info</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a24de3738d46bb2d3bec100dee5109d1a</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a583ebba4b9ca9b09d5e8987d6ae20bc8</anchor>
      <arglist>(uint16_t _port, bool _reliable, bool _start)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a68994418381380db84f849e2798f7aae</anchor>
      <arglist>(uint16_t _port, bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aea20a5f6a60399583188e58a33c577d1</anchor>
      <arglist>(uint16_t _port, bool _reliable, bool _start, service_t _service, instance_t _instance, bool &amp;_is_found, bool _is_multicast=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_server_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a6faf014bef82a93f8c0bb14b961a1cf5</anchor>
      <arglist>(uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_client_endpoints</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a37cd232947c7a3c5add93e663a4b48f8</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_or_create_multicast_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a8600790a99674d1ec291911865dc70a6</anchor>
      <arglist>(service_t _service, instance_t _instance, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_multicast_endpoints</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aff49520bc4879e49caa442cfcd4f82c7</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_selective</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a504a0ac37981252a5decc6675694696a</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a5b6adfad1a776d7c955b425ee555b422</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>create_routing_root</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>afa10d7f01be7be5dc80f8c83cd6b1e65</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; &amp;_root, bool &amp;_is_socket_activated, const std::shared_ptr&lt; routing_host &gt; &amp;_host)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>find_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a0f4f3c47455e24759ccc4d9a9c8b388d</anchor>
      <arglist>(service_t _service, endpoint *const _endpoint) const</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>find_instance_multicast</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>aaaafd77c543b168efe809d61046231d9</anchor>
      <arglist>(service_t _service, const boost::asio::ip::address &amp;_sender) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_instance</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ad4efe29ca0139369889272de5995af82</anchor>
      <arglist>(service_t _service, endpoint *const _endpoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_instance_multicast</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a4a9099e70d271d7867045f1539a352be</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ae6e6579102c5e8824998aeaa0e794d84</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>adf5bc5d759171f767f81af123188b81d</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>on_bind_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a4ee927fd187fd846571f44a0d1c772a2</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; _endpoint, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_error</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a6a0d8426655e36b4e451489221654513</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_used_client_ports</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a36f1b48c8297f32daf87a4f390656566</anchor>
      <arglist>(const boost::asio::ip::address &amp;_remote_address, port_t _remote_port, std::map&lt; bool, std::set&lt; port_t &gt; &gt; &amp;_used_ports)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_used_client_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a7d8870f268a9e91a15d2fc50e66353ec</anchor>
      <arglist>(const boost::asio::ip::address &amp;_remote_address, port_t _remote_port, bool _reliable, port_t _local_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_used_client_port</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>af4aa894cbec6e402a577c802581ed192</anchor>
      <arglist>(const boost::asio::ip::address &amp;_remote_address, port_t _remote_port, bool _reliable, port_t _local_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_client_states</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>ae220bde1e6eb4abfebbbe9d76de6ab22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_server_states</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a83c2fb1583876254d8b7700260c2dd02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_multicast_option</name>
      <anchorfile>classvsomeip__v3_1_1endpoint__manager__impl.html</anchorfile>
      <anchor>a5a0affc225100b50d18a390ab8c64fd0</anchor>
      <arglist>(const multicast_option_t &amp;_option)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::engine_deleter</name>
    <filename>structnexus_1_1quic_1_1detail_1_1engine__deleter.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__deleter.html</anchorfile>
      <anchor>a03653413b6304e53184f95d182aa9ab3</anchor>
      <arglist>(lsquic_engine *e) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::engine_impl</name>
    <filename>structnexus_1_1quic_1_1detail_1_1engine__impl.html</filename>
    <member kind="typedef">
      <type>boost::asio::any_io_executor</type>
      <name>executor_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a8573f059ef6b9627c8b86f410a55204d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a4bcbec5e1bce4c71f324ada7da7e06c2</anchor>
      <arglist>(std::unique_lock&lt; std::mutex &gt; &amp;lock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reschedule</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a7ecf31c618aae194fb238e2e58b569b0</anchor>
      <arglist>(std::unique_lock&lt; std::mutex &gt; &amp;lock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_timer</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a62d42605998170bd6a1e45b261b3bc03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>engine_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>ac578f7e9c7d81e60eb5fc1b1a3f811f7</anchor>
      <arglist>(const boost::asio::any_io_executor &amp;ex, socket_impl *client, const settings *s, unsigned flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~engine_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>aaae87f0e8b4d93d6a264d64ac9ad9d2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>abe54b89e0a87fc46be3e96065831a410</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a711714311251d535c3ae7d43f8d67760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>send_packets</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>abf4472917aa53bcf1a91e1202d810ba7</anchor>
      <arglist>(const lsquic_out_spec *specs, unsigned n_specs)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_new_stream</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>aa2170082cca861ac3faab0b178bcb085</anchor>
      <arglist>(connection_impl &amp;c, lsquic_stream *stream)</arglist>
    </member>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mutex</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>ac601f64a5bf1780e58f68046f56b6c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::any_io_executor</type>
      <name>ex</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a96f93eea5f42460133c353ab329b2595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::steady_timer</type>
      <name>timer</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>afecaba6f9646cddf83fd243e2e1d8ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lsquic_engine_ptr</type>
      <name>handle</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>aa20ba59c403aff84ee9057904e4538bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>socket_impl *</type>
      <name>client</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>ad81146d183b75dffeb28e05b5005d5e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_streams_per_connection</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a711b92c36bee27a90bcd02a438d35984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_http</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1engine__impl.html</anchorfile>
      <anchor>a790dd1e7f1c4890332f6151136833423</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::sd::entry_data_t</name>
    <filename>structvsomeip__v3_1_1sd_1_1entry__data__t.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; entry_impl &gt;</type>
      <name>entry_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1entry__data__t.html</anchorfile>
      <anchor>a2aa69d6b4517f06c7ce53ac8a438ab08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; option_impl &gt; &gt;</type>
      <name>options_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1entry__data__t.html</anchorfile>
      <anchor>a0cda8dfde4487c53eb7d4dd46d6150b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; entry_impl &gt;</type>
      <name>other_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1entry__data__t.html</anchorfile>
      <anchor>a460af3a5e8bea7546030a358d7499caf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::entry_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1entry__impl.html</filename>
    <base>vsomeip_v3::sd::message_element_impl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~entry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a20afa3d60c8f9a78e163e054b56a768b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>entry_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a7b320bde6c4850325d9ffd96d9d07801</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>afd18d141a00e5bb3a2a751d3afa728db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a2488b5364068a5b72073d65a3857e4d8</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>abe437ec3fc6af8b718e83a9f3e143d18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>acc8c0e53aa3df2738907f82bc7a6796e</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a1c1256ff06b253aac32d4af2cae50d9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>add0a2480db56a9e0738ecd96a98f1bb8</anchor>
      <arglist>(major_version_t _major_version)</arglist>
    </member>
    <member kind="function">
      <type>ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>af27af0d093890fba4d5d3ea5870e93bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a20861d14aa0835d2ac0bc5cf56eb1b79</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; uint8_t &gt; &amp;</type>
      <name>get_options</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a256c7c3093167f99f1ce8a4304234192</anchor>
      <arglist>(uint8_t _run) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a0e4bb935a6abd5610a6e46ec4b8ce0d9</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_option)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_service_entry</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a1bdbe09a21a0d133bb943dcd694f9b31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_eventgroup_entry</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a7bb83956b93c38e509f96acd448e5afc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a2d2220fef91842f3906062983a94c1e2</anchor>
      <arglist>(entry_type_e _type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a65c05ca58e8fd78b63b36cf044713103</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a84523c37c901a582da5a13a5d5c51fcd</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_num_options</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a844196bd53a314b7f3331381aae58b87</anchor>
      <arglist>(uint8_t _run) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>entry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a7abbede4f4a97a5f7cfffa223774fc07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>entry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a91a07a10bb606da48eff4d6232c4a74b</anchor>
      <arglist>(const entry_impl &amp;_entry)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>entry_type_e</type>
      <name>type_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>ad6ef51d02968c31bab86a2c59842af11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a90bd2a0728547361ad297879e0e54d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>add6a580a8f648947d0ee285a3965ed9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>major_version_t</type>
      <name>major_version_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>aecf408de6f6a3fa59db4811cedd65677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ttl_t</type>
      <name>ttl_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a816450413b0c5a27d70fce76aef849c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>options_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a31bcf33799ab95b7946728688ace516a</anchor>
      <arglist>[VSOMEIP_MAX_OPTION_RUN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>num_options_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a05974e88567fe4bbfef38354d207140e</anchor>
      <arglist>[VSOMEIP_MAX_OPTION_RUN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint8_t</type>
      <name>index1_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>ab84c49c5e5ac4debef9047eda3aa97e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uint8_t</type>
      <name>index2_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1entry__impl.html</anchorfile>
      <anchor>a123180b399ab54c890cab8bab15feba5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_state::error</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__state_1_1error.html</filename>
    <member kind="variable">
      <type>error_code</type>
      <name>ec</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1error.html</anchorfile>
      <anchor>a6bba59f09ba1e64624c70492596606cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::error</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1error.html</filename>
    <member kind="variable">
      <type>error_code</type>
      <name>ec</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1error.html</anchorfile>
      <anchor>ab702129ad284a537d982cf5aafb3abc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::event</name>
    <filename>structvsomeip__v3_1_1cfg_1_1event.html</filename>
    <member kind="function">
      <type></type>
      <name>event</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>ae92d3643478f4cb520c3c37eae6863ca</anchor>
      <arglist>(event_t _id, bool _is_field, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change)</arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>id_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>afb2690e38a53b52fa8707646e4696d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_field_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a9eeea35836aaef3bdfc90286319dbfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>reliability_type_e</type>
      <name>reliability_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a83110d039e042b3610bc529278e30b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::weak_ptr&lt; eventgroup &gt; &gt;</type>
      <name>groups_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a38f2cfc22f2cf1785c3394e667372448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>cycle_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>a680fa12d48c567bd1f44892ed75da51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>change_resets_cycle_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>aeac78bd58f28679577ae655c704c1f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>update_on_change_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1event.html</anchorfile>
      <anchor>aae12a5d473673db7053b354b5ccd6910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::event</name>
    <filename>classvsomeip__v3_1_1event.html</filename>
    <member kind="function">
      <type></type>
      <name>event</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8d4d14d180147dd1b5fdd70d27d4aaa2</anchor>
      <arglist>(routing_manager *_routing, bool _is_shadow=false)</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aaf86180b83f4d5c6caf16cae4f2d1b61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ac2f58f9b1d28ff1b6d3b25f1cede5136</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae27f7f4ceced402b54eb56cd41f8a50a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad4401515e4637e7371f1864b823b885e</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_version</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a32cceeeb39e22c16b2105853675063f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_version</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad59ddd100fc4bf5df9ba177d6f2baca4</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>event_t</type>
      <name>get_event</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae9a450bada4d6a79fe3641f8838bbebc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aab483df1e373c5b3996506e28fee95e6</anchor>
      <arglist>(event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>af86db2d7468396087aa103241fd77251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad589b978a57def4e01e72631187a6da6</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, const client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>afa5b47c806f298cb21f78e24e4cd5290</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prepare_update_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>af2cffc75cf1dbeb1888670e6653195be</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a51dd00c0f6c3a4f71ff15059477c2c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_payload_notify_pending</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a4a8c1f76560a78c8871673c5a055a292</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8e11727037e0b198b3a620e16ec8fde1</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_payload</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ad236011e37ff3d887e5d366c622f139d</anchor>
      <arglist>(bool _force=false)</arglist>
    </member>
    <member kind="function">
      <type>event_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a1a4e26177b72220c795733ee470fcebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a31aa79bbd368fd0c24fd56134fc61114</anchor>
      <arglist>(const event_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>reliability_type_e</type>
      <name>get_reliability</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a4070686f06876879e4cceb695fb0a03f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reliability</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8cb346537c41300f8c5ab29c1f641747</anchor>
      <arglist>(const reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_field</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6222df1999d5e28263c768ee373493e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_provided</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a99a3ec96a9cbb5410fe2289aa87c8e9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_provided</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>afaa1aff6f5140d57ae24749353551095</anchor>
      <arglist>(bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_set</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ac56daf228332086fbe08624ac609fc7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_cycle</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aa554747575290881bdd4c821503a16e3</anchor>
      <arglist>(std::chrono::milliseconds &amp;_cycle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_change_resets_cycle</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a086253ad4b5374993189f8d5bca9bd37</anchor>
      <arglist>(bool _change_resets_cycle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_on_change</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aaa144f5d7d36afd417b10b6472a141e4</anchor>
      <arglist>(bool _is_active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_epsilon_change_function</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ab4cd4d82f15bd9ae236fca9d77562931</anchor>
      <arglist>(const epsilon_change_func_t &amp;_epsilon_change_func)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; eventgroup_t &gt;</type>
      <name>get_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a8907e3e40e8a6789ecef9a1ef7e9f003</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; eventgroup_t &gt;</type>
      <name>get_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a0a9b850416115967d2c6db3813b1ac38</anchor>
      <arglist>(client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>af85e03ed4dac5417a21666b46281b7f1</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a5977e6708692a6b90cf8ef2733b11c3c</anchor>
      <arglist>(const std::set&lt; eventgroup_t &gt; &amp;_eventgroups)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6e87e92381ea1f4db9c92f6b87bbb50d</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>aa3729e148e5c679de85908a42c210304</anchor>
      <arglist>(client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a52f4feb368de79bddda18c000eaa1deb</anchor>
      <arglist>(eventgroup_t _eventgroup, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter, client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a194f6319a6753764bb414ba4929aad23</anchor>
      <arglist>(eventgroup_t _eventgroup, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a51af446ab7b6a6e6152bff142b3aeaa4</anchor>
      <arglist>(eventgroup_t _eventgroup, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a4dc6ad877d97befb22a9157c3df84066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_filtered_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a0501ccf5b0b96ecfd8f70747ce431a37</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>update_and_get_filtered_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a503410f451e625898adf45973beafe05</anchor>
      <arglist>(const std::shared_ptr&lt; payload &gt; &amp;_payload, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; client_t &gt;</type>
      <name>get_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a0971104bcc125b693e0a7698359aa329</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a94f5c6f67554667a3e4aa0d8a63d83c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a38bab788926cda078662934ff219f52e</anchor>
      <arglist>(client_t _client, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a6ceb465c0c53d68ab70240213e8108e5</anchor>
      <arglist>(client_t _client, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a9ddab3bf9b9748a21a0df6491f11eaf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ref</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>ae9a85a0c8b6690fd321d3fb3adfbcc9f</anchor>
      <arglist>(client_t _client, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_shadow</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a374da7952dff7d34e94d1c793f14ba96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a3a26551e8b67e5b2f8ad89bea61a0d95</anchor>
      <arglist>(bool _shadow)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_cache_placeholder</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a71f0e78b70fc2df4101cc535d030353d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cache_placeholder</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a5ffff482829ad892a3c7ae0d57bdb2a4</anchor>
      <arglist>(bool _is_cache_place_holder)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subscribed</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a496be51d1e30563ec74cb71dd3659028</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_pending</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>a98acf56e86702767ab2054458ddc6253</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip__v3_1_1event.html</anchorfile>
      <anchor>abc1e50409c2e345e1e7a9eebe673774c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::eventgroup</name>
    <filename>structvsomeip__v3_1_1cfg_1_1eventgroup.html</filename>
    <member kind="variable">
      <type>eventgroup_t</type>
      <name>id_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>a38997430189a265b4f95a51b05372790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>events_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>a38ddcb36c680a0f7237c8b8846d476ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>multicast_address_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>ae203107c5473acd4d731a72e3735edab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>multicast_port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>a396b012fe5e46ec3aaf6d383adfdea83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>threshold_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1eventgroup.html</anchorfile>
      <anchor>abf32a4c3a03dd0fc4b161afeb786770c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::eventgroupentry_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</filename>
    <base>vsomeip_v3::sd::entry_impl</base>
    <member kind="function">
      <type></type>
      <name>eventgroupentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a91e71800c17e84d7d9bb19e10eb73c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>eventgroupentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a5c9142db70b2bfc1ee79b475b94365b1</anchor>
      <arglist>(const eventgroupentry_impl &amp;_entry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~eventgroupentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ac93dde30ff048ce02a38982240d11867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>aee47aa2531f3d31c10b0b17864f67c6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a6c20331acf49b7b03d2754ff94e7ba84</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_reserved</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a6a8f6692a658dd8510ca3f73a97dc0f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reserved</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ae81bdf085ecdaf777706d5355b24572e</anchor>
      <arglist>(uint16_t _reserved)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a61eab7ad4772f006e3cf4cee02c7f2d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>af249285fdf554f6c539dc849752d169c</anchor>
      <arglist>(uint8_t _counter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ac77db904aa1331841091c10659c40059</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>acfbc08e1c0f199e74785f3a36713954e</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a25b6a61c5d835d949c440c883d5be33c</anchor>
      <arglist>(const eventgroupentry_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>ad4a7b017ea2fe52739eaa03dafef7e2b</anchor>
      <arglist>(const eventgroupentry_impl &amp;_other, const message_impl::options_t &amp;_options) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_target</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a85fd3ad852f0b910725dd0387b75f559</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_target</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>aced0fe2ce4130842982886efb2d76a49</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; selective_option_impl &gt;</type>
      <name>get_selective_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1eventgroupentry__impl.html</anchorfile>
      <anchor>a15089e6fd61182212696f0111cdf07fa</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::eventgroupinfo</name>
    <filename>classvsomeip__v3_1_1eventgroupinfo.html</filename>
    <class kind="struct">vsomeip_v3::eventgroupinfo::subscription_t</class>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a6c4076a571b95c8a505b8a30c29aad8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>ad8ec4a77f74b9657f73871995efe8ac4</anchor>
      <arglist>(const service_t _service, const service_t _instance, const eventgroup_t _eventgroup, const major_version_t _major, const ttl_t _ttl, const uint8_t _max_remote_subscribers)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a647614814827c25c7f364c29501a37f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a00f07672e7f5af66393b227d1bc448f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a603ce3c3cd75974766e8848ebc3938b7</anchor>
      <arglist>(const service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>af8d9b1bb8acbdc12b730ab3dc934d412</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>adf83b9dda8d076865c84a0dfdc62d2f9</anchor>
      <arglist>(const instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>ae2e89c09b7368c0bcd1e8f23ecdbfeec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>add813ca069e2624052f60305d6e8762c</anchor>
      <arglist>(const eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aadc608860fd9acc54428f195a3f8442e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa54ed7b187c7e30f3e49745da4be81fa</anchor>
      <arglist>(const major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a450cdce2b12195b721075a39deec196d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a69228f601abd698c5d83629061e3a12d</anchor>
      <arglist>(const ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aaa4d439cebe41427d3f8f84e97bfd29f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa6d0285188c9e4da23fd51576deba677</anchor>
      <arglist>(boost::asio::ip::address &amp;_address, uint16_t &amp;_port) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>ac33c635edc75aec959c275f7bef50268</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_sending_multicast</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a677cb6a79badcc17d4747436e379e51d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>get_events</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>afc0a13b46bbbe3f7310a973a94122440</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>add_event</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>afe28ce70e7f62ca53ea62b822b9ee993</anchor>
      <arglist>(const std::shared_ptr&lt; event &gt; &amp;_event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_event</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a2890c7a148d603fc8ff9fa80ad6346d1</anchor>
      <arglist>(const std::shared_ptr&lt; event &gt; &amp;_event)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT reliability_type_e</type>
      <name>get_reliability</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa78fa3bb84b92d717631d949acddc25b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliability</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a60b6cbe88d5a595494b0100f7c06faad</anchor>
      <arglist>(reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliability_auto_mode</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>af7b6c680564ebd42075cf7fbd23e64bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; remote_subscription &gt; &gt;</type>
      <name>get_remote_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a28c050c6382c99dba705cfa566c56d68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; remote_subscription &gt;</type>
      <name>get_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a1ca8c403c1acb863a91bb11390b7f94d</anchor>
      <arglist>(const remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a04b42e7acf2e249f8aefb20d4204c3b4</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription, const std::chrono::steady_clock::time_point &amp;_expiration, std::set&lt; client_t &gt; &amp;_changed, remote_subscription_id_t &amp;_id, const bool _is_subscribe)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_remote_subscription_limit_reached</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa405fbb0ab876985392bf441b02e8fe7</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>remote_subscription_id_t</type>
      <name>add_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a5af74d6d5e42f3804ae330066663344e</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a8509af715f47ded44e63826c92f890c2</anchor>
      <arglist>(const remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_remote_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a86e9eb05b2bc05597f7dad948f80211c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; endpoint_definition &gt; &gt;</type>
      <name>get_unicast_targets</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a084e94f953c88523ee32ff5ef6748dde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; std::shared_ptr&lt; endpoint_definition &gt; &gt;</type>
      <name>get_multicast_targets</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>af0baa04b90b53651cd93d079b7bf0d6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_threshold</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>abb58164994ac1517edd667e15f17226c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_threshold</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>adac0311479ae9a10aaa3ac183417b62f</anchor>
      <arglist>(uint8_t _threshold)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_selective</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a5d60fbf101f93e7f39e6ca12b737f39e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>send_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>adf39ba2f8259517d11ddf109f2c56977</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_reliable, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_unreliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_max_remote_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>aa209262234084d2c6df960235f5d4d48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_max_remote_subscribers</name>
      <anchorfile>classvsomeip__v3_1_1eventgroupinfo.html</anchorfile>
      <anchor>a7de26a60993c2b5d96c2572e104b711f</anchor>
      <arglist>(uint8_t _max_remote_subscribers)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::receiving_stream_state::expecting_body</name>
    <filename>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1expecting__body.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::sending_stream_state::expecting_body</name>
    <filename>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1expecting__body.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::receiving_stream_state::expecting_header</name>
    <filename>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1expecting__header.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::sending_stream_state::expecting_header</name>
    <filename>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1expecting__header.html</filename>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::expire_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1expire__command.html</filename>
    <base>vsomeip_v3::protocol::subscribe_command_base</base>
    <member kind="function">
      <type></type>
      <name>expire_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1expire__command.html</anchorfile>
      <anchor>a759e58e0e2c5014597d9e60e32658946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1expire__command.html</anchorfile>
      <anchor>a2e1134cb184d20f7d180edfe57cf2ae1</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1expire__command.html</anchorfile>
      <anchor>aa2a9feba0942fc3d6a19ef1ea31e20f9</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::field</name>
    <filename>classnexus_1_1h3_1_1field.html</filename>
    <member kind="function">
      <type></type>
      <name>field</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>accc961af0d0fe4e2a146c0c71d488692</anchor>
      <arglist>(const field &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>field &amp;</type>
      <name>operator=</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>a85478db6477bf8ed9639c0af078e3c1d</anchor>
      <arglist>(const field &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>std::string_view</type>
      <name>name</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>a28da5c74733863be20547f8bbc76e2c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string_view</type>
      <name>value</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>aeeb8a113b4d125677cba089eb83b193c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>never_index</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>accbc838a92274f2393c472b8ea879626</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>never_index</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>ae2a4230a80a1faddad53f5979eb41268</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>c_str</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>a75c836fbf16efb469f61bfa58067fc35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>data</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>aafec1ca45e988a12ba91b619c73a9b68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>a3d1aaae3aaff43f961d424f3fece4ef4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>fields</name>
      <anchorfile>classnexus_1_1h3_1_1field.html</anchorfile>
      <anchor>aa77823f6b3222fcf5db34d944b23a588</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::h3::detail::field_compare</name>
    <filename>structnexus_1_1h3_1_1detail_1_1field__compare.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__compare.html</anchorfile>
      <anchor>a3993f833cc508cbd321a1fd240ef4493</anchor>
      <arglist>(char lhs, char rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__compare.html</anchorfile>
      <anchor>ae69bc9f37329587ed8c4b2c1dfcb4cae</anchor>
      <arglist>(std::string_view lhs, std::string_view rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__compare.html</anchorfile>
      <anchor>abd5330416c7a48a1ad23c45d989d338e</anchor>
      <arglist>(const field &amp;lhs, const field &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__compare.html</anchorfile>
      <anchor>a47d3b00671b6abc1a6a64a679d5863c1</anchor>
      <arglist>(std::string_view lhs, const field &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__compare.html</anchorfile>
      <anchor>a7681a6e0b9dcabf803d88d509981ab6c</anchor>
      <arglist>(const field &amp;lhs, std::string_view rhs) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::h3::detail::field_key</name>
    <filename>structnexus_1_1h3_1_1detail_1_1field__key.html</filename>
    <member kind="typedef">
      <type>std::string_view</type>
      <name>type</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__key.html</anchorfile>
      <anchor>a887a3b12ae6d8b8ae35f5af6c44f4d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>type</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1h3_1_1detail_1_1field__key.html</anchorfile>
      <anchor>a23f12afb47ed6cba973fcf5a2810963f</anchor>
      <arglist>(const field &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::fields</name>
    <filename>classnexus_1_1h3_1_1fields.html</filename>
    <member kind="typedef">
      <type>list_type::size_type</type>
      <name>size_type</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a5eb54f6abfaff394269a9ec8b7d40ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>field</type>
      <name>value_type</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a4c303adb5e035300a3d2bb6cbc4d9431</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>list_type::iterator</type>
      <name>iterator</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a071131dfd460eeac781bed444b7fa1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>list_type::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>aa01717bcdbed4c7b8df0b0e21e8a1cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fields</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>aaae1480e563e304ef35bd2fe2b14bad8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>fields</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a26585bfbf173293cee2a822524732d12</anchor>
      <arglist>(fields &amp;&amp;o)=default</arglist>
    </member>
    <member kind="function">
      <type>fields &amp;</type>
      <name>operator=</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a6a6b8d909044e55b9e9f717cdb7984b0</anchor>
      <arglist>(fields &amp;&amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~fields</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>aca0e094b7db08bee7fab7469546284ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>adde2e84376a5733bea8b381995d8256d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>adfbdd452d6934782c292af97f6a98bd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a0558dd3b4a2521f53f129669b588867d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a9099bbbf85189a7602cb0ae1209ccfb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cbegin</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a31a697b7589f64f0a0bbcc24eb1c644f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>ab1a71ffb406607b90549d83e9b64de18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a73bbfa44006cd3a0b1adeedeae398067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>cend</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>afae95c651cc9f6192345ec4088b1c2c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>count</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>ada660fbadd431f89783cee6f8b44d058</anchor>
      <arglist>(std::string_view name) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>find</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>aa68d63d6574e22e3c57f10839540c93b</anchor>
      <arglist>(std::string_view name)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a92fb0a77d6025cbed989ff9e1d20d9d4</anchor>
      <arglist>(std::string_view name) const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>equal_range</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a0c529030f69130ac8f27466b2fa1e148</anchor>
      <arglist>(std::string_view name) -&gt; std::pair&lt; iterator, iterator &gt;</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>equal_range</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>ac68051d0f36929ed04813c8ed8bf0450</anchor>
      <arglist>(std::string_view name) const -&gt; std::pair&lt; const_iterator, const_iterator &gt;</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a7f19110bd8995f7bb2f8da3355e8f4eb</anchor>
      <arglist>(std::string_view name, std::string_view value, bool never_index=false)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>assign</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>af8b31cf5ec662dc392838c05b4c57d60</anchor>
      <arglist>(std::string_view name, std::string_view value, bool never_index=false)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>ab71267948d114e2fa5241e2905322d7d</anchor>
      <arglist>(iterator p)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>afc4cb8fcbcc4b5c5f6b73fe9d332fb9a</anchor>
      <arglist>(iterator begin, iterator end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classnexus_1_1h3_1_1fields.html</anchorfile>
      <anchor>a316580ead51b09f243322a7411af18f7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::sd::message_impl::forced_initial_events_t</name>
    <filename>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; vsomeip_v3::endpoint_definition &gt;</type>
      <name>target_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>a4361ab907e7bed40afaf755799588443</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>a3728e3cf4b9143594b62ebb9bac8b572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>aaf2ae58206c8a6bcd94dff82a2fda4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::eventgroup_t</type>
      <name>eventgroup_</name>
      <anchorfile>structvsomeip__v3_1_1sd_1_1message__impl_1_1forced__initial__events__t.html</anchorfile>
      <anchor>a5064de638728256982021a82d851406a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_state::going_away</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__state_1_1going__away.html</filename>
    <member kind="function">
      <type></type>
      <name>going_away</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1going__away.html</anchorfile>
      <anchor>ad51d3cee4c16ce322aa6af8c85ec9fcf</anchor>
      <arglist>(lsquic_conn &amp;handle) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>lsquic_conn &amp;</type>
      <name>handle</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1going__away.html</anchorfile>
      <anchor>a452649b256b3487f4e266c1d71e526a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_list</type>
      <name>open_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1going__away.html</anchorfile>
      <anchor>ac178abeb7b7209ca6c81603a46a53fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_list</type>
      <name>closing_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1going__away.html</anchorfile>
      <anchor>a3c465b8c69b7731ced84e3493b46edb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>error_code</type>
      <name>ec</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1going__away.html</anchorfile>
      <anchor>ae511be9f9d58adafa5c3768f7399f9c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::open::h3_tag</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open_1_1h3__tag.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::handler_ptr_deleter</name>
    <filename>structnexus_1_1quic_1_1detail_1_1handler__ptr__deleter.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>boost::asio::associated_allocator_t&lt; Handler &gt;</type>
      <name>Alloc</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1handler__ptr__deleter.html</anchorfile>
      <anchor>acdcf3de7dcab070a1c8106130aaa35a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::allocator_traits&lt; Alloc &gt;</type>
      <name>Traits</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1handler__ptr__deleter.html</anchorfile>
      <anchor>ab99c42680ce87804c1fa15dc73e8a03d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>handler_ptr_deleter</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1handler__ptr__deleter.html</anchorfile>
      <anchor>a3ee804a9be617765ab72768eb1a22acf</anchor>
      <arglist>(Handler *handler) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1handler__ptr__deleter.html</anchorfile>
      <anchor>ac6bd23dc03dbf3323f88e7a756cd9bdc</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="variable">
      <type>Handler *</type>
      <name>handler</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1handler__ptr__deleter.html</anchorfile>
      <anchor>a7ce8d7f36198048c89d6a372a001486b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::receiving_stream_state::header</name>
    <filename>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1header.html</filename>
    <member kind="variable">
      <type>header_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1header.html</anchorfile>
      <anchor>ade14d91fa5a51e03cc5ed8c8cfabfb77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::sending_stream_state::header</name>
    <filename>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1header.html</filename>
    <member kind="variable">
      <type>header_operation *</type>
      <name>op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1header.html</anchorfile>
      <anchor>ae0eb594648af6f7accc91b6ee6b0bff0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::trace::header</name>
    <filename>structvsomeip__v3_1_1trace_1_1header.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>prepare</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>adc2874f6a1cf10678309ceda801dda7b</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _is_sending, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prepare</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>adcf1f4ebb764f4ac23a173d84c90b6f5</anchor>
      <arglist>(const endpoint *_endpoint, bool _is_sending, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>adac7eb9dee191d629a6072240ae13268</anchor>
      <arglist>(const boost::asio::ip::address_v4 &amp;_address, std::uint16_t _port, protocol_e _protocol, bool _is_sending, instance_t _instance)</arglist>
    </member>
    <member kind="variable">
      <type>byte_t</type>
      <name>data_</name>
      <anchorfile>structvsomeip__v3_1_1trace_1_1header.html</anchorfile>
      <anchor>aacb617aa28215ec9a02a5e0e478e18e8</anchor>
      <arglist>[VSOMEIP_TRACE_HEADER_SIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_ext::implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</filename>
    <base>boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</base>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>a65dacc6516f50e196d36934d5cf2a873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>protocol_type</type>
      <name>protocol_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext_1_1implementation__type.html</anchorfile>
      <anchor>af2c3686e187af00fbe9adfc72e5944b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>boost::asio::detail::reactive_socket_service_ext_local::implementation_type</name>
    <filename>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</filename>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</base>
    <member kind="function">
      <type></type>
      <name>implementation_type</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>ad27c4f4f59135ab479515aee61a96b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>protocol_type</type>
      <name>protocol_</name>
      <anchorfile>structboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local_1_1implementation__type.html</anchorfile>
      <anchor>aa3617676b286e93511c6b3e14bbbb616</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::incoming_connection</name>
    <filename>structnexus_1_1quic_1_1detail_1_1incoming__connection.html</filename>
    <base>nexus::quic::detail::connection_context</base>
    <member kind="function">
      <type></type>
      <name>incoming_connection</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1incoming__connection.html</anchorfile>
      <anchor>a67ac6a9a240d6770b06aaf2707837990</anchor>
      <arglist>(lsquic_conn *handle, uint32_t max_streams)</arglist>
    </member>
    <member kind="variable">
      <type>lsquic_conn *</type>
      <name>handle</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1incoming__connection.html</anchorfile>
      <anchor>a47561da87e205f59c172827f4b80c315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::circular_buffer&lt; lsquic_stream * &gt;</type>
      <name>incoming_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1incoming__connection.html</anchorfile>
      <anchor>af9d093952be79f6ab5340a8bd647dce2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip::ip_address_t</name>
    <filename>structvsomeip_1_1ip__address__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>aaa36ec8f32852824675a6b14ca76007c</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>a1ea2ee579e709fc8f11b387d3638a6f1</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>a9e96fdfd409ba6b4bf51e66f9e929588</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>ipv4_address_t</type>
      <name>v4_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>ad095322f1c6a72fb25b53fc3b6b8aa3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ipv6_address_t</type>
      <name>v6_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>a482405fd42865ed01e9c132f5999d768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union vsomeip::ip_address_t::@0</type>
      <name>address_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>ae2e68d31ee946a714180ca7ef5d59891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_v4_</name>
      <anchorfile>structvsomeip_1_1ip__address__t.html</anchorfile>
      <anchor>aa9c4483e265654ec69f4a2b0082fbe95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::ip_address_t</name>
    <filename>structvsomeip__v3_1_1ip__address__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a76433cc4d0173919f27b27851bb8435d</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a2087fa9404526f67803389280ac29ce5</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a97667e2f963b5e7bb8e1402fb285972b</anchor>
      <arglist>(const ip_address_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>ipv4_address_t</type>
      <name>v4_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>ab1550cd2985f6e3faec40c55d8e36cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ipv6_address_t</type>
      <name>v6_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a528a242cac41d50945d082772867849c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union vsomeip_v3::ip_address_t::@1</type>
      <name>address_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>aca7a3b08c422f3e5c84228228a9c4122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_v4_</name>
      <anchorfile>structvsomeip__v3_1_1ip__address__t.html</anchorfile>
      <anchor>a6ac234d63458a238767fd6643e99e74e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::ip_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>ip_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>ad4c927de9c9c87d99e4d72627e93ec88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ip_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>ac09f35587e616b8882bd50178afa8f06</anchor>
      <arglist>(const uint16_t _port, const bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ip_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a28c29d71b846ca8e15374e982f9546fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a831d783193a314fe0488243bf098019b</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_port</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>af9aef68bd8a85bf4f385d2cef0002f32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_port</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a8d78d558c642ed82d1b5676109f7aa0c</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>layer_four_protocol_e</type>
      <name>get_layer_four_protocol</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a2166d8e2cf9eef6bcb5895296d7dc9ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_layer_four_protocol</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a910d6e027f0877fd1cb8d3c6b91ba805</anchor>
      <arglist>(layer_four_protocol_e _protocol)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a25ebb8014cd74a671daa4dd0c0a8a2cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a49dbad525fec1589d150bcbc42a424b8</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>aaeefde13d56e83aff937537b40c42ca8</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>layer_four_protocol_e</type>
      <name>protocol_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>ab83307012027453ef10ea547ee4aa365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>port_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ip__option__impl.html</anchorfile>
      <anchor>a108d2a5a51ca47a618aeddfcee7ddf2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::ipv4_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</filename>
    <base>vsomeip_v3::sd::ip_option_impl</base>
    <member kind="function">
      <type></type>
      <name>ipv4_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>ac53f24bd119ab844a635edc402fd6d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ipv4_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a0f34224612417b1e0ab345bbece9b2aa</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const uint16_t _port, const bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ipv4_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>af21f0711a000fc4549882474662fab02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a0e875dc679f0bff360ed6d7dae8dc70c</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>const ipv4_address_t &amp;</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a232b22addda52c80250060c04216ae20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a5d29bdb0c64fcad1c56fa37b1a823d1d</anchor>
      <arglist>(const ipv4_address_t &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a1f5b00e6643a36185b62dd61997286ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>a5fd44eb999f6b22aa4661b17e9de87a4</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv4__option__impl.html</anchorfile>
      <anchor>adf0ea9dcac4e4487995dc4bd8c444100</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::ipv6_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</filename>
    <base>vsomeip_v3::sd::ip_option_impl</base>
    <member kind="function">
      <type></type>
      <name>ipv6_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a550f89dd2a49607aedf4a773b16693b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ipv6_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>aef5481ecf03b6d8db995e856f569d578</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const uint16_t _port, const bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ipv6_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a17a74c054f7fc8d05922357bdf91e65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a874672ce0b4b7cdcea3267808713c559</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>const ipv6_address_t &amp;</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a537cde39fdf8346eb9c5328ef7692546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>aeef708d7bace94da57e1f4497f4d66a5</anchor>
      <arglist>(const ipv6_address_t &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>aa3745a44a426412c4866c1bde5100eb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a1f85f63b9ff5bce01a72c0a72f79b595</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1ipv6__option__impl.html</anchorfile>
      <anchor>a080a07018a568cd98bff081322056ebd</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::h3::error &gt;</name>
    <filename>struct_s_y_s_t_e_m___e_r_r_o_r___n_a_m_e_s_p_a_c_e_1_1is__error__code__enum_3_01nexus_1_1h3_1_1error_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::connection_error &gt;</name>
    <filename>struct_s_y_s_t_e_m___e_r_r_o_r___n_a_m_e_s_p_a_c_e_1_1is__error__code__enum_3_01nexus_1_1quic_1_1connection__error_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::stream_error &gt;</name>
    <filename>struct_s_y_s_t_e_m___e_r_r_o_r___n_a_m_e_s_p_a_c_e_1_1is__error__code__enum_3_01nexus_1_1quic_1_1stream__error_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::tls_alert &gt;</name>
    <filename>struct_s_y_s_t_e_m___e_r_r_o_r___n_a_m_e_s_p_a_c_e_1_1is__error__code__enum_3_01nexus_1_1quic_1_1tls__alert_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::transport_error &gt;</name>
    <filename>struct_s_y_s_t_e_m___e_r_r_o_r___n_a_m_e_s_p_a_c_e_1_1is__error__code__enum_3_01nexus_1_1quic_1_1transport__error_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::load_balancing_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>load_balancing_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>af141ddd56d03744f8516315ed8ebd954</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~load_balancing_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a5628944c0f62c3c49c73b0f41be61e98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>af089bf7ddc2a287980be5b9081dc8e1f</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>priority_t</type>
      <name>get_priority</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a890d7680fc8eb7e4d23a86be1896fc35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_priority</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a244cc9243b9e9ca673408467c49945a6</anchor>
      <arglist>(priority_t _priority)</arglist>
    </member>
    <member kind="function">
      <type>weight_t</type>
      <name>get_weight</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>ab2508dee0790fb95621c2ce1cde76fea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_weight</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a81f0ba9c078bb2b29e3f3257d40d4207</anchor>
      <arglist>(weight_t _weight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>aee2330c35ec252b8ad63e6307da5a81b</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1load__balancing__option__impl.html</anchorfile>
      <anchor>a873782bf6f9dfa07013f4561c21d2acc</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::local_tcp_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</filename>
    <base>vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>local_tcp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a12542e6109904c675d132000a31f08d6</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~local_tcp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a32df619ad8a16aed3728594b7e267ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>ad5b6f9a9e37b3ab9b3423854c33b9812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>ac35fac45b7f7aaa7b4d4a3d241f366c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>ab6a9f8736e50276d48d5bc6708fc5205</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>aed73fa9b465c825108cbe8ceb7d453e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a154778c7799972fb96a2de2abf0223a2</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>aa084968730c22ae05b99d4658ec4f4be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a15f0dbda813ca92a55a46a2c83575d47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a4319d054783c9e362f79a03e615a6896</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a7acba53926d63461b6a5c81b5959d914</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::local_tcp_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>local_tcp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a76d4bd621fc40ef39cc99703bbd7554b</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration, bool _is_routing_endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~local_tcp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a1f68e70ac9b931db2b4faa0da598cf7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a6e4d3688dbb1bd6f6b90c64e141d1c0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a359447afccd2b2dd9026d43eb0cebac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a02348c5d7428b284fc6faf62926da5e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>ae807c2c1cdeed981b4dd084570051085</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>af98038e08763a55577365e12eaadd854</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt;, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a8a8da61101ee20cafeb5eddb58e0dd64</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>ae9e242c07c5e4e206f9d49a9c6f10461</anchor>
      <arglist>(const target_data_iterator_type _queue_iterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a2bdd85d936359f59f4889853265f4d46</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a0547c63d1844837dbc51c1da7a2e318a</anchor>
      <arglist>(service_t, endpoint_type &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a13724f4a47ce3d3872e8a414f14f9ec9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_client_func</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a1c4288c0083372fa336f8d5c6383de02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a41a754d80676508ea767e7faca0390b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a3a2ed2d048c273a62070a53b4c175139</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a46ee2f698faff958b6e20caa5eb9e3e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a0ec1307aff03193479ffac70fd82768d</anchor>
      <arglist>(std::uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>assign_client</name>
      <anchorfile>classvsomeip__v3_1_1local__tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a8618ead84722fcf2ca032ee4af099482</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::local_uds_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</filename>
    <base>vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>local_uds_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>a9d54bc68801463a33285038e817a9038</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_remote, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~local_uds_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>a7813616477a26178abc05e9d1ccc1c67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>a1a6df954bdc9b16f083d629d50cee520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>a35b7413f0564b037db3224992da4f1ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>a31944a1c6f84091c323f02be74c2dccf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>afb6a1d9827caf64dd21b6c5baad1e5a2</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>a70abe3d03f82fbadbfcc8f7906d46a84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>adf445a363f6abf9b9d226bd8b88ad448</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>afa351214b8168f05c91f50873a4c207d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>ae8c72f69946758f28cda40bd335f7585</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>abd153286be316a9b7e3a09a381d86e92</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__client__endpoint__impl.html</anchorfile>
      <anchor>ac9ca5a20b4401a3b6eedaee2643373fc</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::local_uds_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>local_uds_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a8a4906027f03a7912c4540af99581cad</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration, bool _is_routing_endpoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>local_uds_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a5c53378703fca319cd8473e6fbad3bc7</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_context &amp;_io, int native_socket, const std::shared_ptr&lt; configuration &gt; &amp;_configuration, bool _is_routing_endpoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~local_uds_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>ad74e418afd3e10e0147cc341fca3605e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>ad5936bce875d9d7700105f9929281606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a1d637fa81578ebf8dab07daf08d57016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a72d97a409590a17cbd27c46eccf0c25a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a780c16c17840ec1af75216f694a2e5dd</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a14943368c30c97668410a722aa658a27</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt;, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>adee3bcd75ef03c6ab5ffd4baf98a7f42</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>add2e6ace4ceadcb64832124317a532e0</anchor>
      <arglist>(const target_data_iterator_type _queue_iterator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>af160ed63f574efcc565d48861232ffaf</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a9479e3a1bfebd035376ba5d15c361144</anchor>
      <arglist>(service_t, endpoint_type &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>ac3f3756fc3971074f9bd66122e97db6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_client_func</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a087a7a7ae8a6fcf8715916efeb0f18cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a03c66db4c2d1c60768ca4885e05816b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>af022f93f69b0e15d04ab14c1013b759d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a458329d2ea3841914f096b9ee633766d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a59d24d04f510fd8331ab9f978c74326d</anchor>
      <arglist>(std::uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>assign_client</name>
      <anchorfile>classvsomeip__v3_1_1local__uds__server__endpoint__impl.html</anchorfile>
      <anchor>a9e89a8a37fbf538f7641e350364e7e5e</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::logger::logger_impl</name>
    <filename>classvsomeip__v3_1_1logger_1_1logger__impl.html</filename>
    <member kind="function">
      <type></type>
      <name>logger_impl</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>aee0fb45f17fc091b090f6781b4359cf0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~logger_impl</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a616df5826c8d77e76e2f417679ba07ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a23e8ace90c2cad1a74918bad4fa2ad9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_configuration</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a1bd08c2ae7939d1dc8e346d8f965a428</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_IMPORT_EXPORT void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a050862fb6f8392f57b320fa4652fcb37</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; logger_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1logger__impl.html</anchorfile>
      <anchor>a87bbaf220bcbd103857ce32a323f8e08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message</name>
    <filename>classvsomeip_1_1message.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~message</name>
      <anchorfile>classvsomeip_1_1message.html</anchorfile>
      <anchor>ab95c2d1e10666d08311b69c14f3817e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip_1_1message.html</anchorfile>
      <anchor>a51c3f89223243ea9f0971e191fd9b8cb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip_1_1message.html</anchorfile>
      <anchor>a40b8c057d95fe36b9005107fa49244b3</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::logger::message</name>
    <filename>classvsomeip__v3_1_1logger_1_1message.html</filename>
    <member kind="function">
      <type>VSOMEIP_IMPORT_EXPORT</type>
      <name>message</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1message.html</anchorfile>
      <anchor>ae5a2297f6325cc6e2d236ea8250a3769</anchor>
      <arglist>(level_e _level)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_IMPORT_EXPORT</type>
      <name>~message</name>
      <anchorfile>classvsomeip__v3_1_1logger_1_1message.html</anchorfile>
      <anchor>a46f39cacd36e148305f32942b1c1aaf5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message</name>
    <filename>classvsomeip__v3_1_1message.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~message</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a0aaffcc5aa81ab464885d10d5224453f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a28d3cd85e529d83a3f4d756ca23be28a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a29da78fa079648bac34a1e6edf048370</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT uint8_t</type>
      <name>get_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a03082cc8cf8669fdcce385459cb34876</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a84d55c18621cfdaa83329573449074ee</anchor>
      <arglist>(uint8_t _check_result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>ac864ee58f609f950fef2fd03b3c1a1fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>VSOMEIP_DEPRECATED_UID_GID virtual VSOMEIP_EXPORT uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a9e9fbf18ab6d67e1ed24eccaa13ff10a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>VSOMEIP_DEPRECATED_UID_GID virtual VSOMEIP_EXPORT gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>abd7f0cb8752ec951378bb52361dd2e53</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT std::string</type>
      <name>get_env</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>af13ea175d8ae8a2e6dd943a5e74a950b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT vsomeip_sec_client_t</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1message.html</anchorfile>
      <anchor>a51125505cadb1539a85dadb40bef2d66</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::message_acceptance_t</name>
    <filename>structvsomeip__v3_1_1message__acceptance__t.html</filename>
    <member kind="variable">
      <type>std::uint32_t</type>
      <name>remote_address_</name>
      <anchorfile>structvsomeip__v3_1_1message__acceptance__t.html</anchorfile>
      <anchor>adc523032577e9276da05498727c42c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint16_t</type>
      <name>local_port_</name>
      <anchorfile>structvsomeip__v3_1_1message__acceptance__t.html</anchorfile>
      <anchor>ae0c409fc9ff6a865b761c610ff479b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_local_</name>
      <anchorfile>structvsomeip__v3_1_1message__acceptance__t.html</anchorfile>
      <anchor>a1f8743bea5ab65f1128eb1f7aab2af25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1message__acceptance__t.html</anchorfile>
      <anchor>a84ed756c0b06c69bf6d64da72a0d6428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1message__acceptance__t.html</anchorfile>
      <anchor>ad131b8c49ac10b618de4bc5186da245d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message_base</name>
    <filename>classvsomeip_1_1message__base.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a9c29d7154ff9921b113d1dedd1a2433d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ad2841db4584457c764ee615228806f42</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a8f493ac37342d67aff6374f235a18084</anchor>
      <arglist>(message_t _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>aeab75c70db3efddcaa3bc9c1b7253991</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ac893c96c90f2de3f43b6676164283829</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a1778e31394ef3c080ef7355bc551432b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a8bf42c63f07c8d02d7220e84b4fa133c</anchor>
      <arglist>(instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>af3b809f8fb811e93ecdab11dbc7afde6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>acff1d44d850d00903a7044c90259079c</anchor>
      <arglist>(method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a2db758d7e9660260ecb92229cd296717</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a5ff1597ecf22effcd31d12aec6ed72a4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a293d783a6acf131614facd5a37bb48d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a346cb96ee2a2af99fc79392582864952</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a0f74d9d0e5b053d605131648f7f10eff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a2393caaaef771e8f3f9df2b946bf183d</anchor>
      <arglist>(session_t _session)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>aed413dcff073c52c32a9ce1e967d4689</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ab282fa56aedd646fb0854b269bb9e964</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a07419e576450927edf66b8d930add44b</anchor>
      <arglist>(interface_version_t _version)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a0178f936205851e6c556a1c69b5a5e30</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a89e2af99c938ffc14799a5c06b5d7fa5</anchor>
      <arglist>(message_type_e _type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a3921ef25027a6bb3c9c4c2be81aa2567</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>abc01aef90a71fc2198d8054d71de9471</anchor>
      <arglist>(return_code_e _code)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>aeb59fcc15d3f6d169672beff063409aa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a6b42ef008b0a3d152e0b421f46e983c7</anchor>
      <arglist>(bool _is_reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a321aac7e1f1c0f286f0cf7b3a9e4945f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a1807287dbae87924d4333ec4dab38d58</anchor>
      <arglist>(bool _is_initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>a284b41280de20126be750ba91993df4b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base.html</anchorfile>
      <anchor>ae3a4e3a0b3dac6c454a46188b1e5b3e0</anchor>
      <arglist>(bool _is_valid_crc)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_base</name>
    <filename>classvsomeip__v3_1_1message__base.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga206a275026b03ba26247ff60e9338d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga97bd6547b9a37814b40cda1e738d9b4f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga32153dd846e5082a5ecfd0303fc00c64</anchor>
      <arglist>(message_t _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3a42fc1bb1ad36324e13997dc0566d0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga8ae0c5b2d33e75aa2874b7ed292bb267</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga4c2e06c479c0b2b30d0d4a5650b32504</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf23fc5b260569ff85a3dc3bf4a58bbc4</anchor>
      <arglist>(instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6f2bb6b746b5929a9178a509dcb23599</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga68a5d57ba30a1e866aa49c3219bee34c</anchor>
      <arglist>(method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gadf78d2cdd0bba783a9ef4a5b41b51e9f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga69cfe08df5efb5d539fe84577bacd794</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga9cc75d61f405607cb6ea77deb00f88c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga862708a8912fae6f16af9678db4855bc</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga0764d0bcc57088b5da686a6cf1d4e3cc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga65d0115210a280b4375dc19a06696e05</anchor>
      <arglist>(session_t _session)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3d8631c6a0e6a8342926c2243fc7d70f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf890115f9dd45d05f0ac8b28365228fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gad9767ddceec2f86fde60714ef7d6ea74</anchor>
      <arglist>(interface_version_t _version)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga75ba46b7ddebf62f00ba16bb735453e5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga33dd198f3a6f6273d1335fea3ecbfc26</anchor>
      <arglist>(message_type_e _type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gab92e9e4ed2400f16625e0eaf5bd27944</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga40161de103fefe67c8b341119535a607</anchor>
      <arglist>(return_code_e _code)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6db8a0c37b1521863aa8898da3882185</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga47faf333d2aa5646b1565e743793ea39</anchor>
      <arglist>(bool _is_reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaaccdd9fb11d64ad8b2befff7f9f1a797</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga203ffb0137f0c387945893bdd3c816df</anchor>
      <arglist>(bool _is_initial)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message_base_impl</name>
    <filename>classvsomeip_1_1message__base__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_base_impl</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>aa76256b982987b29a7a19f681c639cfd</anchor>
      <arglist>(const std::shared_ptr&lt; vsomeip_v3::message &gt; &amp;_impl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base_impl</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a7e718327dd2d276b10294352eaacbffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a4ebe1b255e28061a9eedb04ba864bd6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a465355216049c65d91b6c51a7baa5c83</anchor>
      <arglist>(message_t _message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a6c073bf189ed7d0ddc8598d1246c8cf4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a1be9fbe7b8b444b5ffcac75c597f48c8</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>aaa8616acfa252e0a7e9d35131f0e52da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a9362a0b0f2befc15cf43f36986d436a6</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a96eca7e52d4f93adc89d9931391f5f4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a47d420d81e295ac56e29aacc719def57</anchor>
      <arglist>(method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a4b17ff39af390e5b4b6f9003d7255b2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a177516c0cf773b3a741c403a8c52d2ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>ad614eecfc65c4b4b99e0be0192d4714c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a864c7f1fb9ac01cbd0b4a81db5c22dd7</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a721b0837454e09191aaf047e44e97cf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a715ff31f6dec6f2db7f1e3a8716d4454</anchor>
      <arglist>(session_t _session)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>abf91e845edb6977edb5a3b20538d6795</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a0485626afdc26811de5ea6aeafea4b06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a7beaef1ea2bfd02a285fb51f416484bc</anchor>
      <arglist>(interface_version_t _interface_version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a5e9bf35ac6c8c68a392f2099bd21a451</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a5161fc8fa8bbfdb0dcf2092865a123fe</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a57146fda7c589367be96ac9687422107</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>aa6c2234ac02a2f85a6abc83f456715ea</anchor>
      <arglist>(return_code_e _code)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>ae247aa2a7c0f9f5c5dec79c2254cab1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a63165d688658717d48e2e33458d336a9</anchor>
      <arglist>(bool _is_reliable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a9884953475d1f1c7677a653a2a986e79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a5745acabea8dd7d2617fdea6e8981415</anchor>
      <arglist>(bool _is_initial)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>afa8120a248226a3676f406abead2cee7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_is_valid_crc</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>ae0a9f145ce13642e763207e9a0d4fc28</anchor>
      <arglist>(bool _is_valid_crc)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; vsomeip_v3::message &gt;</type>
      <name>get_impl</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a857e58059a70e49d47c9f303370f6bf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; vsomeip_v3::message &gt;</type>
      <name>impl_</name>
      <anchorfile>classvsomeip_1_1message__base__impl.html</anchorfile>
      <anchor>a1c1a312098e433c4a3d293072041d4ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_base_impl</name>
    <filename>classvsomeip__v3_1_1message__base__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_base_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a6f170b0c442378cd29217defe8e66245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a87ac0452cb0116aaacf8814a6c55ab0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>af28c5376f467377c82f6228b77c00c81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>acce6416688a1505c684c1e9015aa41ca</anchor>
      <arglist>(message_t _message)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a5c1f0502a7fe72ac4305b2cc4a9d348b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a398c92e9a542db5aac1afcb7abb09dea</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a6febdf7dd653864634d7a6e63855b57a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ab3192747940d0102b32fd20018f63921</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ae5941447aed261fd6650d23812059522</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a7a3530350814ae711a961804dcd8aaa2</anchor>
      <arglist>(method_t _method)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>aef9f48e4d88175b2c0c3bdd652bdcc8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a799d2cbc56cdfd97b4729b8a6c59e4b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a69b24f874ee694034017ec60a9936c08</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a0ea499f517d1819f2d92178f8e8e6155</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a14b5bdd07364baecf51fe1b1f5b8e729</anchor>
      <arglist>(session_t _session)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>aabc481892c9554ec9379e7c60c2575f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_protocol_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a6efc472a5d196c1438db4831d59d1b0b</anchor>
      <arglist>(protocol_version_t _protocol_version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a31292312822290d8e13f5ef9ef8da126</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>adb6d628ccc759bb7399a5e4939f21108</anchor>
      <arglist>(interface_version_t _interface_version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>af8d48205a70a1857b6091ca410fa9aab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a213d9e20d8d52a61b2ba7c114d41547b</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ae1da5543ddbf6ab4a834e2786657dbf5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a0c5feeb36fc6102e2efcac1a43bcd711</anchor>
      <arglist>(return_code_e _code)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a858350623aeebeaf9530a8c2f630537c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a2cd1567a8961c8c8c64dd907d7f4cd89</anchor>
      <arglist>(bool _is_reliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a93543429d34b52c57a14ec4cef988450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a961b5c16bc31108c7bd5c5fea640d31b</anchor>
      <arglist>(bool _is_initial)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message *</type>
      <name>get_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ad30129f5de4e60c3df102f8948312fd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a300e1a5df5ff7de9243d31e3df1fb032</anchor>
      <arglist>(message *_owner)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>message_header_impl</type>
      <name>header_</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a24ef72275b602039549fc8f01b655a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_reliable_</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>ae82c6965c1c24fdfa5795bd93cff8fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_initial_</name>
      <anchorfile>classvsomeip__v3_1_1message__base__impl.html</anchorfile>
      <anchor>a3a09a0994368fa2a972a80fbae854927</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::message_element_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1message__element__impl.html</filename>
    <member kind="function">
      <type></type>
      <name>message_element_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>a35646e7ad3853ef2b4f547c092445290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>message_impl *</type>
      <name>get_owning_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>a211884140b38a21dc7f07b6683cd2fc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_owning_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>ab851a4681022d53bc0e06d2dcf780010</anchor>
      <arglist>(message_impl *_owner)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>message_impl *</type>
      <name>owner_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__element__impl.html</anchorfile>
      <anchor>a9c8fa65eb738e5985885d6d87818fc68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_header_impl</name>
    <filename>classvsomeip__v3_1_1message__header__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::serializable</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_header_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ac969976ecaac2ae7f67ec97bf1bf873d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_header_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>afb20e56fe2945f123d561a3e7e9537c2</anchor>
      <arglist>(const message_header_impl &amp;_header)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>af625148bc100606916fece8306217b6b</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>aebe3501f5d56c8ccced27fb8ed33dc9f</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT message_base *</type>
      <name>get_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ad7981ef85d6e3ed25c8c5a5bf6a3c431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_owner</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a5ff6b7bbe5608a17fe04038b9a2af1ff</anchor>
      <arglist>(message_base *_owner)</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a3a53f2f6b7c7a65a537105bc3b49b679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>method_t</type>
      <name>method_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a37faea3fb59be0cb6638358cb739ae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>length_t</type>
      <name>length_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a932909b4f61d7048c04666d82cdd0634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>client_t</type>
      <name>client_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ac3b2d4bba3a872b8a263bc128624eb36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>session_t</type>
      <name>session_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a26516c6cb4298944ad301a79425b5dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>protocol_version_t</type>
      <name>protocol_version_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>acb36d3b844370fcb3752db9d1bade1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>interface_version_t</type>
      <name>interface_version_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>af4880873a66bb869a1dfb7a454828fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>message_type_e</type>
      <name>type_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>ac4bb436b51225f68df5bee156a522d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return_code_e</type>
      <name>code_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a647fe6e179ed292cde4c1839b8ea3fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>affb26070dde360b58da284010d56788c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>message_base *</type>
      <name>owner_</name>
      <anchorfile>classvsomeip__v3_1_1message__header__impl.html</anchorfile>
      <anchor>a73d2a713bbed9d94ff49e92a8969cd20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::message_impl</name>
    <filename>classvsomeip_1_1message__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message_base_impl</base>
    <base virtualness="virtual">vsomeip_v3::message</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_impl</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>aabb8c4856d34fcb486f832f6fd8eb853</anchor>
      <arglist>(const std::shared_ptr&lt; vsomeip_v3::message &gt; &amp;_impl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_impl</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>af4144280deae22b3ef5ea9c5d2738ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>a5baae912456c52da3e22899fff59e32b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>af3d6f7083885315cf0f32e2c49760c46</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>a17936debd1981ab40628376a08512914</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip_1_1message__impl.html</anchorfile>
      <anchor>a19db6c7f564ac0947979f6261c00ed60</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::message_impl</name>
    <filename>classvsomeip__v3_1_1message__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::message</base>
    <base virtualness="virtual">vsomeip_v3::message_base_impl</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>message_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a2236d47606c229749cd870f5956d8504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_impl</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a4f26f589d22f9b8a31584d4484fe1a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a613c83e66e1e8f5b10c79cf52ca2b395</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_length</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a8931e28033259cc2f863b60eca770067</anchor>
      <arglist>(length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a5d208176898115f6149420cd7ac6bf50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a399d32c94f3268e496718e0c099cf355</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a831ed9dca1f0384482a7a16ac66950c0</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ab394a5e8c9e65ce491baa621e1efd571</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint8_t</type>
      <name>get_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>abd0a9e0aad3ac995f8ad92924830cb69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_check_result</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ac624acb071162af8782a2e8f589cc49d</anchor>
      <arglist>(uint8_t _check_result)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a364a0017564870742c9c7354a8e88067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a864bde0d5c5ba65ea6bf7d2343b6456f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a11f67bac9a1abcdf14510ad0be622512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT vsomeip_sec_client_t</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a627ba50e522eb2131608c582928918ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a84d0df18489e859c2b221c4b53e0c601</anchor>
      <arglist>(const vsomeip_sec_client_t &amp;_sec_client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::string</type>
      <name>get_env</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>ae5926d25bc5d1eaac9f418c2a2420aa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_env</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a0cc1c6eec4073c43308752c8dacf9d6f</anchor>
      <arglist>(const std::string &amp;_env)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>payload_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>aec6e55183d111aaff8e8f46d05141bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>check_result_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a08ad8757f1521c3592c96640e43d4c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vsomeip_sec_client_t</type>
      <name>sec_client_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a56f11ae7f5c074f3a619a22ac8337311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>env_</name>
      <anchorfile>classvsomeip__v3_1_1message__impl.html</anchorfile>
      <anchor>a7705a3bef7619c21c127ccfd459a2c4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::message_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1message__impl.html</filename>
    <base>vsomeip_v3::message</base>
    <base>vsomeip_v3::message_base_impl</base>
    <class kind="struct">vsomeip_v3::sd::message_impl::forced_initial_events_t</class>
    <member kind="typedef">
      <type>std::vector&lt; std::shared_ptr&lt; entry_impl &gt; &gt;</type>
      <name>entries_t</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>afcc594f1f3188718dfedea0e32cfc38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::shared_ptr&lt; option_impl &gt; &gt;</type>
      <name>options_t</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>af52e7d58792493907be0ce4751c90632</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>message_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a751d6ed257e8feb18f4e542bd9b38350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~message_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a174e1bc6c96221b7f8fa267dbe9d305a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ab2fe5ba313631d1b13c877d87b9dea2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>aabe1ae8566d1961c99fe63147822d6ab</anchor>
      <arglist>(length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a9c235a056a34f2e842caafb2d2b569bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reboot_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a315c40fa5839246d0aa1b9cda064d06a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reboot_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a008d6aa17be8de6a60c7d4d46a85b305</anchor>
      <arglist>(bool _is_set)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_unicast_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a743310784c1d46ad8857a646ffd83446</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unicast_flag</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a3ea87ad64e48a74d32e23b78bd2b7f41</anchor>
      <arglist>(bool _is_set)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_entry</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a2b70898599a8447266c3a4a9dcf6a996</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>aab5773a66b3cbbf9c2358ef4df40fdde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const entries_t &amp;</type>
      <name>get_entries</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a4616a84e77ce3e04a9219c1d2212001b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const options_t &amp;</type>
      <name>get_options</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a1cbba631cf8cb1e4ed9142ce268c6949</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_entry_data</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a959ae6551da97e876bc1869ba890088d</anchor>
      <arglist>(const std::shared_ptr&lt; entry_impl &gt; &amp;_entry, const std::vector&lt; std::shared_ptr&lt; option_impl &gt; &gt; &amp;_options, const std::shared_ptr&lt; entry_impl &gt; &amp;_other=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; option_impl &gt;</type>
      <name>find_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ad950a70d46919574ed06afa654a7183f</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_option) const</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>get_option_index</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a41158bf1bd1f6b52ea144d455cd6e7ff</anchor>
      <arglist>(const std::shared_ptr&lt; option_impl &gt; &amp;_option) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; option_impl &gt;</type>
      <name>get_option</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ab82fadd4c4241e641f543fb4cc2778f5</anchor>
      <arglist>(int16_t _index) const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_options_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>aa13f2bce4ddeef59d8c97e29983c2666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a0bc4c635c50150c87543e262041d4c57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_payload</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a623241abcd37cab0504d42baf3f7ea59</anchor>
      <arglist>(std::shared_ptr&lt; payload &gt; _payload)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_check_result</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a8e4fe1826605e240c69fae683456413d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_check_result</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a1abccc9be4f3f1a833b31f8f5038905b</anchor>
      <arglist>(uint8_t _check_result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_crc</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a14766f0a01009d1841b54497dcf4d9e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a23d2347062426ae4d24cd8e2bc875efd</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ae344ed2966c4773e3f457278769da49c</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_someip_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ada96a264e273e4b47db598ae2eb02187</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forced_initial_events_add</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ab13e6f76cacac7525c388c0371f01c49</anchor>
      <arglist>(forced_initial_events_t _entry)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; forced_initial_events_t &gt;</type>
      <name>forced_initial_events_get</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ac7062d5488dd819de645227bdce4cf12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_initial_events_required</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>af4e7037f94d19a3267a870ef6e865c94</anchor>
      <arglist>(bool _initial_events_required)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initial_events_required</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a36c21973e6d49b6db0f58dd6bb8c0aff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a196e27bf83255c2e7ebbdc8acd75d52c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>ae333793d500b118e9ec9bd4de6037132</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vsomeip_sec_client_t</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a002ee6d51216f3c66f6edcc71d3aac0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_env</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1message__impl.html</anchorfile>
      <anchor>a6b0f94e0b083977c83cb1546c3bc7a9e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::msg_statistic_t</name>
    <filename>structvsomeip__v3_1_1msg__statistic__t.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>counter_</name>
      <anchorfile>structvsomeip__v3_1_1msg__statistic__t.html</anchorfile>
      <anchor>a5cfaceac1f26a08f2182e2a65bbca77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>length_t</type>
      <name>avg_length_</name>
      <anchorfile>structvsomeip__v3_1_1msg__statistic__t.html</anchorfile>
      <anchor>a2e0520ca9ceab8230ba46a8294544680</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::multicast_option_t</name>
    <filename>structvsomeip__v3_1_1multicast__option__t.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>endpoint_</name>
      <anchorfile>structvsomeip__v3_1_1multicast__option__t.html</anchorfile>
      <anchor>af79794a0256d13120cc3948dcdd282f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_join_</name>
      <anchorfile>structvsomeip__v3_1_1multicast__option__t.html</anchorfile>
      <anchor>a3857357490cd7a0d6747448d3d9fa979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::ip::address</type>
      <name>address_</name>
      <anchorfile>structvsomeip__v3_1_1multicast__option__t.html</anchorfile>
      <anchor>a8e21b5878b0989923260e53ca833abc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::multiple_services_command_base</name>
    <filename>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>multiple_services_command_base</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</anchorfile>
      <anchor>ab7255736e9fee5f1aa54085e77761637</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</anchorfile>
      <anchor>a841b9471b4b5456768d8848054e97b21</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</anchorfile>
      <anchor>ad91528ce454872dddc98d0fded15be28</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; service &gt;</type>
      <name>get_services</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</anchorfile>
      <anchor>a3db821923efc944abb459b014bda1f86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_services</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</anchorfile>
      <anchor>a7b85ccb550f59bfe1d9ee5d78fa71086</anchor>
      <arglist>(const std::set&lt; service &gt; &amp;_services)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1multiple__services__command__base.html</anchorfile>
      <anchor>a6eac5e1e9d04a742494f413b65b18acf</anchor>
      <arglist>(const service &amp;_service)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::offer_service_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1offer__service__command.html</filename>
    <base>vsomeip_v3::protocol::service_command_base</base>
    <member kind="function">
      <type></type>
      <name>offer_service_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offer__service__command.html</anchorfile>
      <anchor>a30fc8065871596e115cd112bf45ef6db</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::offered_services_request_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1offered__services__request__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>offered_services_request_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offered__services__request__command.html</anchorfile>
      <anchor>a33220b4105e968b4ccf69a8e133bcb75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offered__services__request__command.html</anchorfile>
      <anchor>a96d6f550678b7e2de8501f6ed6a82be7</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offered__services__request__command.html</anchorfile>
      <anchor>ae3765e265eea4aab81b903ddcfdbb164</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>offer_type_e</type>
      <name>get_offer_type</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offered__services__request__command.html</anchorfile>
      <anchor>ab6c41dd067c98b8c26ec743450f61a84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offer_type</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offered__services__request__command.html</anchorfile>
      <anchor>ad88b579c55158fcabab4956345bdaf2d</anchor>
      <arglist>(offer_type_e _offer_type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::offered_services_response_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1offered__services__response__command.html</filename>
    <base>vsomeip_v3::protocol::multiple_services_command_base</base>
    <member kind="function">
      <type></type>
      <name>offered_services_response_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1offered__services__response__command.html</anchorfile>
      <anchor>a43c17b627eba59be64ddb326fed1ef8b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::connection_state::open</name>
    <filename>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</filename>
    <member kind="function">
      <type></type>
      <name>open</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>acd7f3ae6f7f7b5d4ad18e94d12c6995b</anchor>
      <arglist>(lsquic_conn &amp;handle) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>lsquic_conn &amp;</type>
      <name>handle</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>a02c4ec0e4217354ef7d839a2516ad624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::circular_buffer&lt; lsquic_stream * &gt;</type>
      <name>incoming_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>a29dd1ba0dfce8f91c597e426bdd2069b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_list</type>
      <name>connecting_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>aef237ef1ea4001268b8258d2644f6931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_list</type>
      <name>accepting_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>a6d953673555056678d3b5793a5a2e7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_list</type>
      <name>open_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>afbab67577a15b3e9e3e50f83f7808b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_list</type>
      <name>closing_streams</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>a8512f4f9f9fa8ca00a65934e2b83acc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>error_code</type>
      <name>ec</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1connection__state_1_1open.html</anchorfile>
      <anchor>a4d9e275475503966a5bd9caa21fcd90c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::open</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open.html</filename>
    <class kind="struct">nexus::quic::detail::stream_state::open::h3_tag</class>
    <class kind="struct">nexus::quic::detail::stream_state::open::quic_tag</class>
    <member kind="function">
      <type></type>
      <name>open</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open.html</anchorfile>
      <anchor>a0ca0d0486d86b4b32f6aa9f5da5de1d5</anchor>
      <arglist>(lsquic_stream &amp;handle, quic_tag) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>open</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open.html</anchorfile>
      <anchor>a3cda79f1592b150ab35ebbae0f9348ff</anchor>
      <arglist>(lsquic_stream &amp;handle, h3_tag) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>lsquic_stream &amp;</type>
      <name>handle</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open.html</anchorfile>
      <anchor>a8f227115c4a5b7f65a095610755677a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>receiving_stream_state::variant</type>
      <name>in</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open.html</anchorfile>
      <anchor>ada4650c44863027fb73f9369542fd432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sending_stream_state::variant</type>
      <name>out</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open.html</anchorfile>
      <anchor>a831ea6feca3582686a8a3b1b3ffa327c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1operation.html</filename>
    <templarg>Args</templarg>
    <member kind="typedef">
      <type>operation&lt; Args... &gt;</type>
      <name>operation_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>ab0267aa62ddbd660b0963bac97ff575d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Args... &gt;</type>
      <name>tuple_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>ad7a2cc8a140be3e962284383363e8ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(completion_type, operation_type *, tuple_type &amp;&amp;)</type>
      <name>complete_fn</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a5ca4786974d429cae308d847333b90a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a1462ba7febec2c34205b23627cef75d0</anchor>
      <arglist>(complete_fn complete) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>post</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>aaa98ef33f7e76e137677ffb3b2371797</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>defer</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a2edd78e303e9c03707fe358e6ea4bd50</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a182e36fee6d7ffd026692a93612113e2</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a9adca430a0d8b377e127ae893f9e0611</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable">
      <type>complete_fn</type>
      <name>complete_</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a9efcd1ec2d4d01b397e2c8ba72b3672b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>operation&lt; error_code &gt;</name>
    <filename>structnexus_1_1quic_1_1detail_1_1operation.html</filename>
    <member kind="typedef">
      <type>operation&lt; Args... &gt;</type>
      <name>operation_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>ab0267aa62ddbd660b0963bac97ff575d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Args... &gt;</type>
      <name>tuple_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>ad7a2cc8a140be3e962284383363e8ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(completion_type, operation_type *, tuple_type &amp;&amp;)</type>
      <name>complete_fn</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a5ca4786974d429cae308d847333b90a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a1462ba7febec2c34205b23627cef75d0</anchor>
      <arglist>(complete_fn complete) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>post</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>aaa98ef33f7e76e137677ffb3b2371797</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>defer</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a2edd78e303e9c03707fe358e6ea4bd50</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a182e36fee6d7ffd026692a93612113e2</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a9adca430a0d8b377e127ae893f9e0611</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable">
      <type>complete_fn</type>
      <name>complete_</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a9efcd1ec2d4d01b397e2c8ba72b3672b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>operation&lt; error_code, size_t &gt;</name>
    <filename>structnexus_1_1quic_1_1detail_1_1operation.html</filename>
    <member kind="typedef">
      <type>operation&lt; Args... &gt;</type>
      <name>operation_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>ab0267aa62ddbd660b0963bac97ff575d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; Args... &gt;</type>
      <name>tuple_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>ad7a2cc8a140be3e962284383363e8ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(completion_type, operation_type *, tuple_type &amp;&amp;)</type>
      <name>complete_fn</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a5ca4786974d429cae308d847333b90a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a1462ba7febec2c34205b23627cef75d0</anchor>
      <arglist>(complete_fn complete) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>post</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>aaa98ef33f7e76e137677ffb3b2371797</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>defer</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a2edd78e303e9c03707fe358e6ea4bd50</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatch</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a182e36fee6d7ffd026692a93612113e2</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a9adca430a0d8b377e127ae893f9e0611</anchor>
      <arglist>(UArgs &amp;&amp;...args)</arglist>
    </member>
    <member kind="variable">
      <type>complete_fn</type>
      <name>complete_</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1operation.html</anchorfile>
      <anchor>a9efcd1ec2d4d01b397e2c8ba72b3672b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1option__impl.html</filename>
    <base>vsomeip_v3::sd::message_element_impl</base>
    <member kind="function">
      <type></type>
      <name>option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>afe1bea7916ce0d18ae2d6eb0f7eddcb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>aa44d325fd0b4dd27be4054fa6287c87d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a727cd871471bba231175f81ba2217140</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a844437f2e3934bda40466b968ccb59ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>option_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a2c7e50f81c1fcb3b626907b7098899f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>accbf78e2d61ff5821f7735837cac11b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>abc29196c222e195e5cfd9f14c73cd7f6</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a8c42a38e5032ac3c9e049292504996eb</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>length_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>aee7319285832d61316a055282d37ff90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>option_type_e</type>
      <name>type_</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1option__impl.html</anchorfile>
      <anchor>a35f3c7431da4e06e451da088f762f916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::payload</name>
    <filename>classvsomeip_1_1payload.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~payload</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>af27c3869994faf1bf068822240051223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>acb4b355ddedb4cbf204c6b0c2baf9641</anchor>
      <arglist>(const payload &amp;_other)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>ab538d34122428d0c34d7250dfa1e8cf0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a434a186a73a15f2c571995e4bb1de548</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>aaef2d0425a9032394f82f0c0cfc7884c</anchor>
      <arglist>(const byte_t *_data, length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>af1468f13e3998b16f9ae454dbd892aa6</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a82c4e5f2fb6d274a4eff821e044f7c11</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a13a54deff644a707cd19b19fa08dc665</anchor>
      <arglist>(length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload.html</anchorfile>
      <anchor>a32a567446cfae8d1a9ce25c35fb9480b</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::payload</name>
    <filename>classvsomeip__v3_1_1payload.html</filename>
    <base>vsomeip_v3::serializable</base>
    <base>vsomeip_v3::deserializable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~payload</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ab956c07c2e34fe5bb723d83bd8ecf651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a98ff18efcd510f15c2259772384d03b9</anchor>
      <arglist>(const payload &amp;_other)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ab48959c876110140e5159e36542eb687</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ad4c563d5d1da5d9e5c9d44b466b5d36d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>ae2c620ade3e7ba30f3f139ddd390bc02</anchor>
      <arglist>(const byte_t *_data, length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a064fa7aba42fbffc77a347cd4eee7bae</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a693a7f2596a90ab626e64b2546427d78</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a65aba614b046504faca0ec3aff30ba12</anchor>
      <arglist>(length_t _length)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload.html</anchorfile>
      <anchor>a657da0268fd4efebe1c24533196f710d</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::payload_impl</name>
    <filename>classvsomeip_1_1payload__impl.html</filename>
    <base>vsomeip_v3::payload</base>
    <member kind="function">
      <type></type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a65525fa7027ef9c577f3e7a5bfca1c86</anchor>
      <arglist>(const std::shared_ptr&lt; vsomeip_v3::payload &gt; &amp;_impl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~payload_impl</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>aedb3d044457514a3d9ca5736509ec842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>ad2fb796a27eb66e3c62c9791b37d1685</anchor>
      <arglist>(const payload &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a94c646bc78a4ad8ff641634094232ee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a0f1da667f90c3f8f34b378f460051f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a0c56c784695213bc513f3b9ba91dd60f</anchor>
      <arglist>(const byte_t *_data, length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a11046f4ec2f471fd57ee7932aee60dad</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>addb0526c88fb8d45ebfbad213070dc1a</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a31e2ed7261a6e2913f2e1b2eb7bf67fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>ac7e34c9001f6c4a45ba51c5f509b0d4e</anchor>
      <arglist>(length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>aef56cc6ef232bb77915e862e900df328</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>aadad512a9067f2a5318e9286a0ec7973</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; vsomeip_v3::payload &gt;</type>
      <name>get_impl</name>
      <anchorfile>classvsomeip_1_1payload__impl.html</anchorfile>
      <anchor>a61a8ba2b01883dee45b13498da40c314</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::payload_impl</name>
    <filename>classvsomeip__v3_1_1payload__impl.html</filename>
    <base>vsomeip_v3::payload</base>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>afd81886b98c301efe8367eff5906f149</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ac41d6e721720844ddb455206d6c7f27b</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>abff74f9b332dcdf924fecdb71885bde4</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a5125ad490da5adb0c0583750d6d04ae9</anchor>
      <arglist>(const payload_impl &amp;_payload)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~payload_impl</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>afac8adc86e2995565a1804638a5cfad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a9432c8d1d5bc72b53a40b6be49dc7b1c</anchor>
      <arglist>(const payload &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ab52e6440ede191424fe5f8cb9450733c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT const byte_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ae4482a70fc0375b37e4c7bcd41720e93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>aa36b331d2ba14e70d8f0c3341339d509</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_capacity</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>abba6629e3c1a5fa2e1b1ca278a0456af</anchor>
      <arglist>(length_t _capacity)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>adb35e685f53cc7dcee6042184832185c</anchor>
      <arglist>(const byte_t *_data, length_t _length)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>ad128be9c017aaa984f0fbe2ed1334955</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a3c18b39a10da1c11e7616ea8df2f89bc</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;&amp;_data)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>a6a12cd1d4be3295cc70053bf62d2d3fb</anchor>
      <arglist>(serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1payload__impl.html</anchorfile>
      <anchor>af01bfc66f30135924bed583ff628f002</anchor>
      <arglist>(deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::ping_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1ping__command.html</filename>
    <base>vsomeip_v3::protocol::simple_command</base>
    <member kind="function">
      <type></type>
      <name>ping_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1ping__command.html</anchorfile>
      <anchor>a94ed69f73cad1bb2e15ba78d53e32e66</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::plugin</name>
    <filename>classvsomeip_1_1plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~plugin</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a91e39c8c78d78c2775a4854d48c08144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a402f41047cde74662888cf9f5377a776</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a0cda7b928a54b50a43aea09b270051e0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip_1_1plugin.html</anchorfile>
      <anchor>a809445ca0f5276efca6e07a6f4e24c3b</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin</name>
    <filename>classvsomeip__v3_1_1plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>a8c09e55e65484e62c7180bbe5d6b60a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>a573ce3b98cb3648edaa4b68421749313</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>af6c13db741f634df44501323c4ba0702</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin.html</anchorfile>
      <anchor>ab878d8563bcf9b67f1c1832fe0977525</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::plugin_impl</name>
    <filename>classvsomeip_1_1plugin__impl.html</filename>
    <templarg></templarg>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>ab1c431545d05d75376d0bf2591b7f048</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>aa71db9413c44f8c91f7e5a20eaba6afc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>a76735553176ce6c4a30d122b22541923</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>a5562f40cb6cb06b03d03bcfc061a89c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip_1_1plugin__impl.html</anchorfile>
      <anchor>af2dd8c76199d1b0c72e40dbc65281458</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin_impl</name>
    <filename>classvsomeip__v3_1_1plugin__impl.html</filename>
    <templarg></templarg>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a18e7fb19c95dbd0181f3941c43042399</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>ad1aec810833374edc744caddb896991e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a9daf7a25a9a247f551c37bade90314ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a5e7fbfcefb1fd8c347a3e638553e9d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a60d257840927b1f1295554a288aa1916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>plugin_impl&lt; configuration_plugin_impl &gt;</name>
    <filename>classvsomeip__v3_1_1plugin__impl.html</filename>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a18e7fb19c95dbd0181f3941c43042399</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>ad1aec810833374edc744caddb896991e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a9daf7a25a9a247f551c37bade90314ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a5e7fbfcefb1fd8c347a3e638553e9d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a60d257840927b1f1295554a288aa1916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>plugin_impl&lt; e2e_provider_impl &gt;</name>
    <filename>classvsomeip__v3_1_1plugin__impl.html</filename>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a18e7fb19c95dbd0181f3941c43042399</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>ad1aec810833374edc744caddb896991e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a9daf7a25a9a247f551c37bade90314ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a5e7fbfcefb1fd8c347a3e638553e9d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a60d257840927b1f1295554a288aa1916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>plugin_impl&lt; runtime_impl &gt;</name>
    <filename>classvsomeip__v3_1_1plugin__impl.html</filename>
    <base>vsomeip_v3::plugin</base>
    <member kind="function">
      <type></type>
      <name>plugin_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a18e7fb19c95dbd0181f3941c43042399</anchor>
      <arglist>(const std::string &amp;_name, uint32_t _version, plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_plugin_name</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>ad1aec810833374edc744caddb896991e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_plugin_version</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a9daf7a25a9a247f551c37bade90314ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>plugin_type_e</type>
      <name>get_plugin_type</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a5e7fbfcefb1fd8c347a3e638553e9d05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__impl.html</anchorfile>
      <anchor>a60d257840927b1f1295554a288aa1916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin_manager</name>
    <filename>classvsomeip__v3_1_1plugin__manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~plugin_manager</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>ac7a8ae01db2ba76f9978ff42628f9b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>load_plugins</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a8117bed6bc189f1cc03c9b415a460138</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a694f549666237cc93cb3ca9c2482ace1</anchor>
      <arglist>(plugin_type_e _type, const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void *</type>
      <name>load_library</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>addd9b3ebbff2b4e8493ee85f3e6dc159</anchor>
      <arglist>(const std::string &amp;_path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void *</type>
      <name>load_symbol</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a72cd0596825131a6476285978ab5acc2</anchor>
      <arglist>(void *_handle, const std::string &amp;_symbol)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>unload_library</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a25ea92bc635916c3f568973e3f8b4ad2</anchor>
      <arglist>(void *_handle)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; plugin_manager &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager.html</anchorfile>
      <anchor>a93c5f30c74930116f56207888506568a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::plugin_manager_impl</name>
    <filename>classvsomeip__v3_1_1plugin__manager__impl.html</filename>
    <base>vsomeip_v3::plugin_manager</base>
    <member kind="function">
      <type></type>
      <name>plugin_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>ac14fdd61e1c8e3e6d1b0417302fec75a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~plugin_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>ac19f37bdea245a083a92c24c9289f464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>load_plugins</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>aeadbaa42be7c5b52239045861c59c01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; plugin &gt;</type>
      <name>get_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>aacf455f92a707eaf15c0cf25b49525e3</anchor>
      <arglist>(plugin_type_e _type, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; plugin &gt;</type>
      <name>load_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a3eef0ce3abda8e423fc4bd389b7483e3</anchor>
      <arglist>(const std::string &amp;_library, plugin_type_e _type, const uint32_t _version)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>unload_plugin</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a9fa062885c04fcefdf9f7efe88bb8935</anchor>
      <arglist>(plugin_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void *</type>
      <name>load_library</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>aa41e8c1238fcc4082f918f3532b87c0e</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void *</type>
      <name>load_symbol</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>aad191ddb91eadf5eefd2d7444146a564</anchor>
      <arglist>(void *_handle, const std::string &amp;_symbol)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>unload_library</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a39173a9417614ca0beadf3f45dd2accb</anchor>
      <arglist>(void *_handle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSOMEIP_EXPORT std::shared_ptr&lt; plugin_manager_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1plugin__manager__impl.html</anchorfile>
      <anchor>a2ae65b8d2129efc4f52ee81e390ef698</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::policy</name>
    <filename>structvsomeip__v3_1_1policy.html</filename>
    <member kind="function">
      <type></type>
      <name>policy</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>afcf491d35255aed22df8acf292f2d721</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_uid_gid</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a605aba0085b7feb649cd164cae9a4850</anchor>
      <arglist>(uid_t &amp;_uid, gid_t &amp;_gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize_uid_gid</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a97f4c004662f3ff146a01365392dd492</anchor>
      <arglist>(const byte_t *&amp;_data, uint32_t &amp;_size, uid_t &amp;_uid, gid_t &amp;_gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a2373dadd14686614ba0250ae13835632</anchor>
      <arglist>(const byte_t *&amp;_data, uint32_t &amp;_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a1922146bc3a408db3d5503a2cb4af256</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_data) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a86a17267314862a7b76e8f609896e853</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>boost::icl::interval_map&lt; uid_t, boost::icl::interval_set&lt; gid_t &gt; &gt;</type>
      <name>credentials_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a99a66cb167cbf501633ee9567cedf82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_who_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>aebb36281c04e70bac57357e14ad9c8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::icl::interval_map&lt; service_t, boost::icl::interval_map&lt; instance_t, boost::icl::interval_set&lt; method_t &gt; &gt; &gt;</type>
      <name>requests_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>a81b25c8e544725f35bed55927b2116da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::icl::interval_map&lt; service_t, boost::icl::interval_set&lt; instance_t &gt; &gt;</type>
      <name>offers_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>ad714b121577046aa8e7c350af2d24464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allow_what_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>ad7473d48304c71d7fe3cfbbad82f17c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>structvsomeip__v3_1_1policy.html</anchorfile>
      <anchor>ad58c9f22fd3abcdcdc1d78882bcc4006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::policy_manager</name>
    <filename>classvsomeip__v3_1_1policy__manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~policy_manager</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ae2b08335c72b0d40387816287bf82e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; policy &gt;</type>
      <name>create_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a44dce3dd457fbcac957455ad0968a4fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a8a3eeb3363bcbf15f0d52aa9a7b3fd06</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; &amp;_policy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>parse_uid_gid</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ab4041a976d4d391d88a85879e153928c</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>parse_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ab44e8be9435770c0b5004885f65ee37f</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid, const std::shared_ptr&lt; policy &gt; &amp;_policy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_policy_update_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>ad58361844e9e3f5c2f5e8f28a98378a9</anchor>
      <arglist>(uint32_t _uid, std::shared_ptr&lt; policy &gt; &amp;_policy) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_policy_removal_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a327aa4d8379995885264520364cdb678</anchor>
      <arglist>(uint32_t _uid) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; policy_manager &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager.html</anchorfile>
      <anchor>a3adbb628b418faebe11b93be440dfdb3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::policy_manager_impl</name>
    <filename>classvsomeip__v3_1_1policy__manager__impl.html</filename>
    <base>vsomeip_v3::policy_manager</base>
    <member kind="enumeration">
      <type></type>
      <name>policy_loaded_e</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a24d78549be0accbf772e9fe1b0b72655</anchor>
      <arglist></arglist>
      <enumvalue file="classvsomeip__v3_1_1policy__manager__impl.html" anchor="a24d78549be0accbf772e9fe1b0b72655a78958094002a7a6c8068034b03c71fd0">POLICY_PATH_FOUND_AND_LOADED</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1policy__manager__impl.html" anchor="a24d78549be0accbf772e9fe1b0b72655a091366dd2e3f8372500dd0a277051fb1">POLICY_PATH_FOUND_AND_NOT_LOADED</enumvalue>
      <enumvalue file="classvsomeip__v3_1_1policy__manager__impl.html" anchor="a24d78549be0accbf772e9fe1b0b72655a0075ffb16917be8e76e1926675478172">POLICY_PATH_INEXISTENT</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>policy_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a9b089dbcf03b2903e0969216bae76046</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; policy &gt;</type>
      <name>create_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a828cd3dd0c6d0ed58e07322399cf09b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>adb37c53354c27b3f177d011184ac736a</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_uid_gid</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a4578628f9244f8584b38ba31acccad6d</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a3888f4a5f8167d64b4892f28da36e50a</anchor>
      <arglist>(const byte_t *&amp;_buffer, uint32_t &amp;_buffer_size, uint32_t &amp;_uid, uint32_t &amp;_gid, const std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_update_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a8cf9b2fc56a7c0762fd9e0c86bc9f221</anchor>
      <arglist>(uint32_t _uid, std::shared_ptr&lt; policy &gt; &amp;_policy) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_removal_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>ab3447a3577d0cb935e06b2062112499d</anchor>
      <arglist>(uint32_t _uid) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a5883a82409b9d85bffc38ec9524f5946</anchor>
      <arglist>(const configuration_element &amp;_element, const bool _lazy_load=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_security_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>aa9b1f3db7d7a6d226201819d78c81d92</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_security_policy</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a58e2a7407c315963fb09d345e479cf53</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_security_credentials</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a36e72952871fa14d2348e5bae4c7b2b2</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_credentials_policy, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a75407d4288ee8f87e14a8ef8becbe7b6</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; _policy, std::set&lt; std::shared_ptr&lt; policy &gt; &gt; &amp;_requesters) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a1302501ad707a19b116cad5e6bd5bce5</anchor>
      <arglist>(uid_t _uid, gid_t _gid, std::unordered_set&lt; client_t &gt; &amp;_clients) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_extension</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a5f72c7d3eb93d0243cae5ef3eacb96ab</anchor>
      <arglist>(const std::string &amp;_path) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_policy_extension_path</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a6ffa0e02274aad05390788d01b022b17</anchor>
      <arglist>(const std::string &amp;_client_host) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_policy_extension_base_path</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a28476ef62f6287b66df6ab1c25c0e013</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_security_config_folder</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a4012aa1673402e23d973c5a5fd6746a3</anchor>
      <arglist>(const std::string &amp;its_folder) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_policy_extension_path_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a568746fac9823d3adfcaf79419fc8fc0</anchor>
      <arglist>(const std::string &amp;_client_host) const</arglist>
    </member>
    <member kind="function">
      <type>policy_loaded_e</type>
      <name>is_policy_extension_loaded</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a54ce58bb4b3118e95f170573fab72972</anchor>
      <arglist>(const std::string &amp;_client_host) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_is_policy_extension_loaded</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>af7619bb7b587ed7f47edac2f42eb6aca</anchor>
      <arglist>(const std::string &amp;_client_host, const bool _loaded)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_enabled</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a034af0479fe5c37ce34e98df1473043b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_audit</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a882613e9a92cb2f3b26f9a50bede94bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_credentials</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a346e8195c08f1ba6215eea5e4052159d</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a68cd4c98b22c01a008591785f48d1ad9</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_routing_credentials</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a06f1f91e51a0c4c72cbae9912a254c83</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_client_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a1820d497a853c7293df455d57d6e8011</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, method_t _method, bool _is_request_service=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_offer_allowed</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>af2a1d0b00fb09db232d93c848b2001c1</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sec_client_to_clients_mapping</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a44bb1495df8b4b0711c3fb7e9a070363</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, std::set&lt; client_t &gt; &amp;_clients)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_client_to_sec_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a1b0886c006a3d97c99181d0881940075</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_client_to_sec_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>acd26062475826999e00dcccf7705c94b</anchor>
      <arglist>(client_t _client, vsomeip_sec_client_t &amp;_sec_client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>store_client_to_sec_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a7bb924a64656913549ebb3b7536ba9ec</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>store_sec_client_to_client_mapping</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a881550bacdd971ef92be413dccc27992</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, client_t _client)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; policy_manager_impl &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1policy__manager__impl.html</anchorfile>
      <anchor>a2a2799e3c06b7b8df6d6781304d6df30</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::pong_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1pong__command.html</filename>
    <base>vsomeip_v3::protocol::simple_command</base>
    <member kind="function">
      <type></type>
      <name>pong_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1pong__command.html</anchorfile>
      <anchor>a88496f6925d509165790d993909b1565</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::pre_configuration_plugin</name>
    <filename>classvsomeip_1_1pre__configuration__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~pre_configuration_plugin</name>
      <anchorfile>classvsomeip_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>a19580df4ef19162d114456b0f34f171b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_configuration_path</name>
      <anchorfile>classvsomeip_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>ab16f2a0ee5d3010b8f4c0052fb6bb4b7</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::pre_configuration_plugin</name>
    <filename>classvsomeip__v3_1_1pre__configuration__plugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~pre_configuration_plugin</name>
      <anchorfile>classvsomeip__v3_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>a5d0c9535f158f70a05fdf392246aa1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_configuration_path</name>
      <anchorfile>classvsomeip__v3_1_1pre__configuration__plugin.html</anchorfile>
      <anchor>a33ac00a05e922163ec78689b78eecd64</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile01::profile_01</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01.html</filename>
    <member kind="function" static="yes">
      <type>static uint8_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01.html</anchorfile>
      <anchor>aee008e06e3ff6cc9791a0612c27de4ee</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_buffer_length_valid</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01.html</anchorfile>
      <anchor>a650d90718b728e7ee23fa102318992ea</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile01::profile_01_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_01_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</anchorfile>
      <anchor>a9bcab1b12f07e6670717c4924fbccb13</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_01_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</anchorfile>
      <anchor>a22f12c903eb8fd75806852dc640cc939</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1profile__01__checker.html</anchorfile>
      <anchor>a08ad9e92bfc28345db9fa0218c3ac16b</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile04::profile_04</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04.html</filename>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04.html</anchorfile>
      <anchor>a5248055075734374d6de02dcf46c4079</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile04::profile_04_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_04_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</anchorfile>
      <anchor>a36680f93b8365d09102a8fd8443665c4</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_04_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</anchorfile>
      <anchor>a15b7205e0e08d0b65b5702f6731d0410</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1profile__04__checker.html</anchorfile>
      <anchor>a45d62afd0db1735c17da62aeeb66c02a</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile05::profile_05</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05.html</filename>
    <member kind="function" static="yes">
      <type>static uint16_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05.html</anchorfile>
      <anchor>aaaee1ae88e078443b1ff8bd582e96484</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_buffer_length_valid</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05.html</anchorfile>
      <anchor>a8598f369ca3dff57f1306e61a10242cb</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile05::profile_05_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_05_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05__checker.html</anchorfile>
      <anchor>a2d2a686bce7256192171f6d9ebd8d521</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_05_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05__checker.html</anchorfile>
      <anchor>a23f6cb1f40626a7e7e82c4b9acf546e5</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1profile__05__checker.html</anchorfile>
      <anchor>a56b84fb72fc8b4a8aaa516c1bcbac2c3</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile07::profile_07</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile07_1_1profile__07.html</filename>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1profile__07.html</anchorfile>
      <anchor>a723bf9cee46034d40e6cd68bd1c04b47</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile07::profile_07_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile07_1_1profile__07__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_07_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1profile__07__checker.html</anchorfile>
      <anchor>a1539f6d757319d4063fe26c7d8a1053a</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_07_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1profile__07__checker.html</anchorfile>
      <anchor>a246b4006dd0b5aaa95fc61684734fdc1</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1profile__07__checker.html</anchorfile>
      <anchor>a00d73730332d884f8aa856ce2983c178</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile01::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>ac9724296adbe847ca040db5049d191db</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>af78562f4cfda4deb31947f5bf39fb6e8</anchor>
      <arglist>(uint16_t _crc_offset, uint16_t _data_id, p01_data_id_mode _data_id_mode, uint16_t _data_length, uint16_t _counter_offset, uint16_t _data_id_nibble_offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a82f87c124a717a2ff06155c8e80b60b4</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a487f9bd1b7289b66ea5d6599a254c589</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>crc_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>ac21884237a9b1a5f64c50d55c9251404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_id_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>abe48fdb6b8f10420e5582302e37f5e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>p01_data_id_mode</type>
      <name>data_id_mode_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a7cda8f047a2a86af7a6c8bcf95fcc918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a82ef8b03eccc72fc1b843d3232a1cbfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>counter_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a5c3c7733f0466c767e587e31cb4859f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_id_nibble_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a4d1a0914072f9e97ebc81f389dabf3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile01_1_1profile__config.html</anchorfile>
      <anchor>a935868efdac2f2a7d07511140f1e83e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile04::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a93b35b81b2362bd35f59bd45519b9a91</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a76e7a2ead1186176c4ef0486821f0844</anchor>
      <arglist>(uint32_t _data_id, size_t _offset, size_t _min_data_length, size_t _max_data_length, uint16_t _max_delta_counter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a30470d343e60dfce2a2eb197a46fd3f9</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a7d0ee056ed663c798c41012a28b63253</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>data_id_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a73317bacddd3084b090e3e960ab15c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>ad9dbd6037a5add1dfe1515288df84605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a93fd6dc197cbf2fb807bed083b9bd9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a6c3b80697cc14c66d4ff05f873f3b384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>max_delta_counter_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a9951a5cbc9ccd9ce4b184e33ca4f37f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile04_1_1profile__config.html</anchorfile>
      <anchor>a911d349d54401d13b2de4f17a6528045</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile05::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>a5f32fb9cd776f70a6d182807eebe97b5</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>a66c3d0fc8bbdc3e0e296e562705f9bdb</anchor>
      <arglist>(uint32_t _data_id, uint16_t _data_length, size_t _offset, uint16_t _max_delta_counter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>aca3e97723c59993ac903a9d127d0ad3a</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>ad8840f423e99d949ff90865ec1b8cc6c</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>data_id_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>ad892ef4ef15ae62251860e7f47af17f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>aa456e55d08abb8b523821fed6501db2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>ace2197e2b7c1303d439d7a12a630e679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>max_delta_counter_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>ad885b3bb003e99389222bf32e6297f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile05_1_1profile__config.html</anchorfile>
      <anchor>a555aa8180976fa1dc7ccbe1651490a34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile07::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>a01d7c08f1c1951146c1d825f6cbf14a0</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>a3c318ef2f3ec63f91a59f6049e695b66</anchor>
      <arglist>(uint32_t _data_id, size_t _offset, size_t _min_data_length, size_t _max_data_length, uint32_t _max_delta_counter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>a66167c3b15f595ef16072c1e18e2c7db</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>ab4f0c22260735833444e00a975751875</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>data_id_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>a3c08fe7bade97a33f459fb1e061088c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>ac35087f4be2724c00308732b2b9e95e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>a17d1e46f26928d18bf9b545cbdbcf432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_data_length_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>adeaa9f90403b7b7e26a2cca836fd480a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_delta_counter_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>a4da8741c29ab0c96c0c687ce3a5781af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile07_1_1profile__config.html</anchorfile>
      <anchor>ad5f357dc5a3e46bbe5c61e3c1a564e07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::e2e::profile_custom::profile_config</name>
    <filename>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</filename>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a2da848523da60412e54c55acd0a72b20</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a7fde871cd902c0c615141e6700f26cd0</anchor>
      <arglist>(uint16_t _crc_offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_config</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>ac6fd498d411422fb77daf43297e2123e</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="function">
      <type>profile_config &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a79095bca87fe6da7c0854a6832f12cbb</anchor>
      <arglist>(const profile_config &amp;_config)=default</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>crc_offset_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a091a074d7294c9b5743d9e7a25e00f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>base_</name>
      <anchorfile>structvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__config.html</anchorfile>
      <anchor>a1340ebbb48d9b5826c6af44ba10034f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_custom::profile_custom</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom.html</filename>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>compute_crc</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom.html</anchorfile>
      <anchor>a844c858ea49e04822bd609e9c4ed7b84</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_buffer_length_valid</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom.html</anchorfile>
      <anchor>af852f53acaeac48e8a12235b4d94b82d</anchor>
      <arglist>(const profile_config &amp;_config, const e2e_buffer &amp;_buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_custom::profile_custom_checker</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::checker</base>
    <member kind="function">
      <type></type>
      <name>profile_custom_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</anchorfile>
      <anchor>a2763bac96e939a99ae96b58f650631c9</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile_custom_checker</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</anchorfile>
      <anchor>af4f245dfbdd563b9812078f8c2db8c60</anchor>
      <arglist>(const e2e::profile_custom::profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1profile__custom__checker.html</anchorfile>
      <anchor>a3e8ea145500a1725e16ab14dc52b344a</anchor>
      <arglist>(const e2e_buffer &amp;_buffer, instance_t _instance, e2e::profile_interface::check_status_t &amp;_generic_check_status) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_interface::profile_interface</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1profile__interface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~profile_interface</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1profile__interface.html</anchorfile>
      <anchor>adf2db977d80366d270e6e3b962d3828d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::protection_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>protection_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a3f14d2f08250467a0a5c606daf4ad26f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~protection_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>aec49223201f3e8a7407e7e95de2dbbbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>aa7c9510776530caaad667d261e879547</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>alive_counter_t</type>
      <name>get_alive_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>ae02b9e8c6bea18bc333ea2571631c09e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alive_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>adc98762addb0bbbcbf03f960aebb4883</anchor>
      <arglist>(alive_counter_t _counter)</arglist>
    </member>
    <member kind="function">
      <type>crc_t</type>
      <name>get_crc</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a45b7855e8f62cc047b443ba8d4bca574</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_crc</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a95bf50925b4369999016ab66be742f5b</anchor>
      <arglist>(crc_t _crc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a317ef15348d702ecb584dd5daf7ec73c</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1protection__option__impl.html</anchorfile>
      <anchor>a39883f3ae29b45e0e89c149612a72b73</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile01::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</anchorfile>
      <anchor>a8045226153c7227e85b4b55ee9a6a947</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</anchorfile>
      <anchor>a63e20a26be69d3efc0330046e7a8ddd9</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile01_1_1protector.html</anchorfile>
      <anchor>a20f295ef3156a6a0af4c28c072f27b2f</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile04::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</anchorfile>
      <anchor>a1ffa5b558ee261b300cabd8f71c93d07</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</anchorfile>
      <anchor>aceb27efcc695234583494015b9379e25</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile04_1_1protector.html</anchorfile>
      <anchor>a2b2828e0e03b4a47a023e258017dff03</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile05::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile05_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1protector.html</anchorfile>
      <anchor>a87259adfc41c4a9aaef26a94aa25c49c</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1protector.html</anchorfile>
      <anchor>a99e265dfaf720803beb8621135d24d29</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile05_1_1protector.html</anchorfile>
      <anchor>a042208fe3348b5aae6eafe363aed5cc5</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile07::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile07_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1protector.html</anchorfile>
      <anchor>aef6070ed5949b7fbf49cbbea82fd6cf0</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1protector.html</anchorfile>
      <anchor>ad7726a2c25239a7c4b403da88b5d3083</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile07_1_1protector.html</anchorfile>
      <anchor>ad3c0194a400f538097ca7adfa51e1f91</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_custom::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::protector</base>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</anchorfile>
      <anchor>a95aeede0d6c2f79499422e8082726968</anchor>
      <arglist>(void)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>protector</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</anchorfile>
      <anchor>a27d29fad746e4d0d97827734e0fd4db3</anchor>
      <arglist>(const profile_config &amp;_config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__custom_1_1protector.html</anchorfile>
      <anchor>a84c9d8d174905a6db52ae878e7942892</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance) override final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::e2e::profile_interface::protector</name>
    <filename>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1protector.html</filename>
    <base>vsomeip_v3::e2e::profile_interface::profile_interface</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>protect</name>
      <anchorfile>classvsomeip__v3_1_1e2e_1_1profile__interface_1_1protector.html</anchorfile>
      <anchor>af6448ee4550701cc0f548494a65ce73b</anchor>
      <arglist>(e2e_buffer &amp;_buffer, instance_t _instance)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>quic_adaptor::quic_client_adaptor</name>
    <filename>classquic__adaptor_1_1quic__client__adaptor.html</filename>
    <member kind="typedef">
      <type>boost::asio::ip::udp::endpoint</type>
      <name>endpoint</name>
      <anchorfile>classquic__adaptor_1_1quic__client__adaptor.html</anchorfile>
      <anchor>a291411db24e959087e0bafd3246081df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::asio::ip::udp::socket</type>
      <name>socket</name>
      <anchorfile>classquic__adaptor_1_1quic__client__adaptor.html</anchorfile>
      <anchor>a101284f80fff1aa0fa30c8c1ecafc17e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::quic_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1quic__client__endpoint__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>quic_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>a397706ccbe9078f5735751b72e1c5e05</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~quic_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>abddff9ba6a94b318b28b71675dd06656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>ae20001b48c1536e09771204d84c89f04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>aa6927b84596cd2d67cf4b5a75e0e8cff</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive_cbk</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>aac4796bd8fff0cdc0aa3a46b0749b4c6</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_recv_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>a1b8b5a29ba1773e4fdeefee56b814517</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>af987eb8e9eaee34a19fe776ace165204</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>a4fe8ec6535f3404ff47143bf71ba8504</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>a13ee99d182d7da1453b6fa912efa4c4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>ac575d929aeaaf08d7342e4c5caef49d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>aed1acfccf8a25fb55a505f41ab76e6f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>a0ba086740b7c7510b7cfde396fd68bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1quic__client__endpoint__impl.html</anchorfile>
      <anchor>a065b7acac1425604aef73683b18eb908</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_sent_msg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_state::open::quic_tag</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__state_1_1open_1_1quic__tag.html</filename>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</filename>
    <templarg></templarg>
    <base>boost::asio::detail::reactor_op_ext</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>a7a7eb87fabc0ae5fed83069c74a638d0</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext.html</anchorfile>
      <anchor>aa520a3bc5dba80210f0da4920362d2ec</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</filename>
    <templarg></templarg>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a5e84482d6d4febc788d9f4159570d99a</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__base__ext__local.html</anchorfile>
      <anchor>a05fa21a5a6ff2a6e20d9eb2dcc031fe3</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a319c23b735f6f6475c322f0d3cff22fa</anchor>
      <arglist>(reactive_socket_recv_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a6451140b28891336837c5e8947ccae18</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext.html</anchorfile>
      <anchor>a192fa4398406ed64825b00bd6da4702d</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recv_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_recv_op_base_ext_local</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a18014d2e7e605d40967092f4bacd60cd</anchor>
      <arglist>(reactive_socket_recv_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recv_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>a4a76850940f4206cf203511e5594d198</anchor>
      <arglist>(socket_type socket, socket_ops::state_type state, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recv__op__ext__local.html</anchorfile>
      <anchor>aa76b926ede8862cca1ff118369197ea2</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactor_op_ext</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>a5f781a3618a200d3ad1237565c14592a</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext.html</anchorfile>
      <anchor>ae48a585d5ca4acd409429ae8f7b928f6</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>aec25d14a1fda6507b38228c47d208bc4</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__base__ext__local.html</anchorfile>
      <anchor>a8d17d8e3dfb08add2016d5ea0e75e9c5</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>ab5f48a67b92af2f04ae8b62a469b50b8</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>a337b8cbbf921da6fa0fe30872e292291</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext.html</anchorfile>
      <anchor>aed42b7e3d0d87f7cc141ffaab3ff5957</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvfrom_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a85011f71ebf66c51544177736217d0d2</anchor>
      <arglist>(reactive_socket_recvfrom_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvfrom_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a89001455bc421cbf5f35bf1493375fda</anchor>
      <arglist>(socket_type socket, int protocol_type, const MutableBufferSequence &amp;buffers, Endpoint &amp;endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvfrom__op__ext__local.html</anchorfile>
      <anchor>a96acf664a82a584ce28ba35c06b1498c</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</filename>
    <templarg></templarg>
    <base>boost::asio::detail::reactor_op_ext</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>a7f620d49198bb7ed6ba6416a56c41201</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext.html</anchorfile>
      <anchor>aa9d94826244f4609b8348e88b9bfe2fb</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</filename>
    <templarg></templarg>
    <base>boost::asio::detail::reactor_op_ext_local</base>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a9dca5e22f59f6d7d755326001fe247a5</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, func_type complete_func)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>do_perform</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__base__ext__local.html</anchorfile>
      <anchor>a9cbfad68e22dd4ac6b5453994048d11e</anchor>
      <arglist>(reactor_op *base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a3ab00a1d81175012ab003eb9b6f25b2e</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a9705d6c6a4fdd1024954753aabd815ac</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext.html</anchorfile>
      <anchor>a540b3cd5b8436e4a8042ae437f1427bd</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_recvmsg_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</base>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_DEFINE_HANDLER_PTR</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ac7513e3e4564217092aa2f4e02dae657</anchor>
      <arglist>(reactive_socket_recvmsg_op_ext_local)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_recvmsg_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>a61fb147ee4e62f6dfcc765f098d5cb14</anchor>
      <arglist>(socket_type socket, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__recvmsg__op__ext__local.html</anchorfile>
      <anchor>ae6f59fd7e3a6d930667529e6b671c874</anchor>
      <arglist>(io_service_impl *owner, operation *base, const boost::system::error_code &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_base_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</filename>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext::base_implementation_type</class>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a10ddab961d6b4e041afecd0011a53d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a9b0f822de7700b79770cf62faaa700b8</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>shutdown_service</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adff286d75987d044fbf022e222360a4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abb5cc77b03d8bbf79f153ce1702406da</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad16d99d26cc627075da3745bb4992915</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a92077153b7321444991fe3ebba9e3fd6</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3c640800baa5935544cef130890ed10c</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a12bfc7a3b64f10531cb43acb71cd658e</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1700578473bcef8ba51885a43090dc39</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a5d5e3896f0315843d97ddaa5ab7b5b8b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>adfbc16764184810a31ff510578f3ee93</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a377e742acd99aac859f15f81570b2f31</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a1adc5394408a0df96444617b4f4a7d90</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a4c628aee04966b4b13eb6557cfb81bbd</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3f62e72ee4ba08c9c342d427ed9019bd</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af85d1c6677d013804ead6d4cc9aeee87</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a438338b27d46379603011dbb57c5885a</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a3760f410e87965c59f02939def8e569f</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2039a44462571f6d411e32c1510dc8a7</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a00364fed00046b09924484a30211051b</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a56a19a4c06f7da991b55731581e16953</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a93590062e260a71a0fc37af36a9689a2</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a46c07096c069c90497ec38fb1a92575f</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a9fcf7841330389092055220202909450</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>afc7827644865369f34b01cbae52c3302</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad338f60b42f47de3fd363c526083f942</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>abbbb06bde33f0c7cbfbe88a5ae282e76</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ab12d2f93b52fa3bf1259b7f3af9c3c7d</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a2026fe6943da1e573f682c26d6b49399</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>af407e9dd6321b82798c011ba1820e2f6</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a42b0c95c64b431b47b6842e344470192</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aee5a79357614e9f5c1e434133ea17591</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a203442dc1e1dac9a8b3676bf6fd6f65c</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a297c64cab4b211c88ea138baef48d199</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ae17eee9920d09f351a37ba626eaf4a53</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>a84e6ea60b1c3fd6bef8aaf34098200c5</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>ad57025e7a7087bf12e934c297b08376a</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>reactor &amp;</type>
      <name>reactor_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext.html</anchorfile>
      <anchor>aebe4cf83ac5a097512ba53ef5ffc3017</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_base_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</filename>
    <class kind="struct">boost::asio::detail::reactive_socket_service_base_ext_local::base_implementation_type</class>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a1a7587b8db499a822ede5a43416f0ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL</type>
      <name>reactive_socket_service_base_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a36025cc54c95bfc40a8587716d24c6a6</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>shutdown_service</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a22f4b9c59e3f3fe91f9ce6108343b52a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae133ff5030a8576be86a6ce18d51bd9b</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a190a192d8d756545e553baa9ec0cf7bd</anchor>
      <arglist>(base_implementation_type &amp;impl, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>base_move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a0a02df75fece9366f243b64023706918</anchor>
      <arglist>(base_implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, base_implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>acd42aa5ad119acce11b6eb8e4684d971</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2ef623b6fd77f83bb4bd4b956cfc9db9</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a28eae9f003242d7301508cc4bd5ff1af</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6b9a486d8cc4427b1fc5bde13122c05</anchor>
      <arglist>(base_implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a4b391e59f3d2a6ca0287f2dd53b12d03</anchor>
      <arglist>(base_implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a969352c24674fd6c2b80fc67b4497072</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adc3b79ed3ba5f5986e300bda7b2c2c94</anchor>
      <arglist>(const base_implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a318c0a48512da5ce09e0894d4ec70fc9</anchor>
      <arglist>(base_implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af064dfe873c1ac6c270ad81f1210601f</anchor>
      <arglist>(base_implementation_type &amp;impl, IO_Control_Command &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a14a25bb89b6b48196e45f5c722a4b768</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa35d8bab20e0a72ba8d4f296f4c18593</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a32fba15a921dcb1169a378195f5d0c6b</anchor>
      <arglist>(const base_implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>adde8e005dedc8d652b453dc06c16a1a2</anchor>
      <arglist>(base_implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae42295c59a6ca9a4e1b91578b7b42c4d</anchor>
      <arglist>(base_implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aca2168f0dd9b742902bdf65b6f6879d6</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a7a54cace7d48e3c782ea54d124def0ad</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>acd23d03153110e02cc3c761708a214cf</anchor>
      <arglist>(base_implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af1d7f72d3ff78a2a17dbe185d6a522b5</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a50a071a91d99a33557dc90fe88958196</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ad9301aff9465a4aed38cf8880f907d5f</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae807126f4bbc30b2c157fe4f49bc4775</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a193f65576ded415be8fb3d1675db4e11</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>aa6d1147ec79f34eadd47c9c0b61a00ed</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a6b9b1a6e680168b96156c831640772a4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags, socket_base::message_flags &amp;out_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a2e812c80bcd27f3bf69d2df3fe74f2fe</anchor>
      <arglist>(base_implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_with_flags</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>af6db2d321a7174d3b3ad92f121b3b3d4</anchor>
      <arglist>(base_implementation_type &amp;impl, const null_buffers &amp;, socket_base::message_flags in_flags, socket_base::message_flags &amp;out_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a527d7b6f3259820c21628c4ee520bc78</anchor>
      <arglist>(base_implementation_type &amp;impl, int af, int type, int protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL boost::system::error_code</type>
      <name>do_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>afb4874a071e7a9938d338c83b489951f</anchor>
      <arglist>(base_implementation_type &amp;impl, int type, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae25b5d54235ab8031fb738051dbe07ef</anchor>
      <arglist>(base_implementation_type &amp;impl, int op_type, reactor_op *op, bool is_continuation, bool is_non_blocking, bool noop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_accept_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ae982caad26ef32adc0dba263d0ad4adf</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, bool peer_is_open)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BOOST_ASIO_DECL void</type>
      <name>start_connect_op</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>a236b349a54abb87005d176d218bb5385</anchor>
      <arglist>(base_implementation_type &amp;impl, reactor_op *op, bool is_continuation, const socket_addr_type *addr, size_t addrlen)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>reactor &amp;</type>
      <name>reactor_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__base__ext__local.html</anchorfile>
      <anchor>ac693102400233079a057d6c40be71ae3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</filename>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_service_base_ext</base>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext::implementation_type</class>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa6a093ca84156fcba7e78f697b734244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a36d44a8ed49e4b00ea34adeb8776381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>af20044b22a112c522a16e9582e3691e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a6919f389ede2a9aea41192a69615cbf1</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a99934eccd43498c0d7306bc729d5b27f</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a09b08c29b044c7bcd9bde088ada5fb60</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a1a8cb72ca9c7d8add1036b0a8c6a4cd8</anchor>
      <arglist>(implementation_type &amp;impl, typename reactive_socket_service_ext&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae91d3784a67b8c7d0909334fbc7b41a3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a370dd3d1224a77100517667af7fc3d72</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a52f2903d8b12145983b461422d24fe58</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5f4df731956ff6f3c3ea9657e0f2266c</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a9ee1a1d116ef4ba9ddb7a1f327aadad3</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae5b665635b26e54b5172b56f518b5a00</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aa83f5d83a3d137f442c9151ccb41b2c5</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ac511ffa635aa57b53cfe5e973ce2a7f2</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a3b44a5047fccd2c43cb291809adf438d</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0e01a26a145c51dab9e225717fe71b41</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a0feca049975bc0282162538973d473a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a4df3de582d0d07faf93e452572b024fc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a5fd9681ae8f05fb8296da639dc17067b</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a70beb5ceddd532164fc0db0224793a79</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a8ae10f2e3c3416c0f09910d99c554d64</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a59d12d95149c182e7a35a944a378b30b</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ab80bb393279988c1e69f60bbfd418f7a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>a8cedb82bfd5d3e5eed3e201f36f13478</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>aed4f099a3c3744d9cf4694a9ff7d314b</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext.html</anchorfile>
      <anchor>ae1d36726a2a05723bb2e0771652e73dd</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactive_socket_service_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</filename>
    <templarg></templarg>
    <base>boost::asio::detail::reactive_socket_service_base_ext_local</base>
    <class kind="struct">boost::asio::detail::reactive_socket_service_ext_local::implementation_type</class>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a89996af624d787d870cd777f54531092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af122ac6efca740ffc8b20656b80f1082</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>socket_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>add5d1f8510a02fe7ccb59c764c952ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>reactive_socket_service_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a50dd2162f4219f37e9895b209927f0b1</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a85fa38f16a0049f8a6ec0a39f324819d</anchor>
      <arglist>(implementation_type &amp;impl, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a86c5fc30f1d2187d87a83231b71b6337</anchor>
      <arglist>(implementation_type &amp;impl, reactive_socket_service_base_ext_local &amp;other_service, implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>converting_move_construct</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a4a23856630562f8e0c372c39f6a2aa3f</anchor>
      <arglist>(implementation_type &amp;impl, typename reactive_socket_service_ext_local&lt; Protocol1 &gt;::implementation_type &amp;other_impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a3e2d16aac66cfcfb53533ef37e840448</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a6444a60baa0fcfbc872cfb762bbec837</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>af4e1efdb589784eeee4dffad08830a1d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a79ade71b3621f54724bd20a3426f9e58</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2129ab54cac789649bccbcdadd9f2dbf</anchor>
      <arglist>(implementation_type &amp;impl, const Option &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a254d502aa1393357acc2f4241abbbfec</anchor>
      <arglist>(const implementation_type &amp;impl, Option &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a685757c37c2b5fab03044664e5ce6c94</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a9dab01e1c0c0e6700144521a91f04b28</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac44234336af1e6b9b42e144c8c66b2a0</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a153e91d9b0ef80469d28a9b6877df5cc</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>aedfcd939c6e68152ca6d4484a9c24a79</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, const endpoint_type &amp;destination, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_send_to</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a18d137d5942dee3119f015be7a1c7178</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, const endpoint_type &amp;, socket_base::message_flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a2efe28f3aec85f47ad9bed10c324ed86</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ae238bb2df1580b57575fb40ced94ba6d</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a92479b4a0617f086f9dffa8b568463b1</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_receive_from</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a99fba9960b9c9306c97eba29e356ea4c</anchor>
      <arglist>(implementation_type &amp;impl, const null_buffers &amp;, endpoint_type &amp;sender_endpoint, socket_base::message_flags flags, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a0b0c88329aaa556cc889cfdb8a21ea9a</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_accept</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ac32ef845bee3eb527c7198b920e7dbfd</anchor>
      <arglist>(implementation_type &amp;impl, Socket &amp;peer, endpoint_type *peer_endpoint, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>ad28ca6fd59f438c564f1e18996842f5a</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>async_connect</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactive__socket__service__ext__local.html</anchorfile>
      <anchor>a8f312fe8043c40e6161e37bfca6aac1e</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, Handler &amp;handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactor_op_ext</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</filename>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>abd7742286af11d93a9469834ec47b938</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::ip::address</type>
      <name>da_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext.html</anchorfile>
      <anchor>a961c9a8b91b8b53de1ada7f96ef34eb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::detail::reactor_op_ext_local</name>
    <filename>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</filename>
    <member kind="function">
      <type></type>
      <name>reactor_op_ext_local</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a75dd9cb0345b97d3432893959e2fadba</anchor>
      <arglist>(perform_func_type perform_func, func_type complete_func)</arglist>
    </member>
    <member kind="variable">
      <type>std::uint32_t</type>
      <name>uid_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>af6f065132b508f276e1ee3836d6c4185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint32_t</type>
      <name>gid_</name>
      <anchorfile>classboost_1_1asio_1_1detail_1_1reactor__op__ext__local.html</anchorfile>
      <anchor>a939249826bb4136813f08ed7c17ad86f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::recv_header_set</name>
    <filename>structnexus_1_1quic_1_1detail_1_1recv__header__set.html</filename>
    <member kind="function">
      <type></type>
      <name>recv_header_set</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1recv__header__set.html</anchorfile>
      <anchor>ab84b04e3628443deba85327031a78130</anchor>
      <arglist>(int is_push_promise)</arglist>
    </member>
    <member kind="variable">
      <type>h3::fields</type>
      <name>fields</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1recv__header__set.html</anchorfile>
      <anchor>a336138c17573a75581ba989ec1bf91eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_push_promise</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1recv__header__set.html</anchorfile>
      <anchor>a3400109e52102d19d438006f7dbf59be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>lsxpack_header</type>
      <name>header</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1recv__header__set.html</anchorfile>
      <anchor>a8479f4a9606d753a8b84e472aa38f4b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; char &gt;</type>
      <name>buffer</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1recv__header__set.html</anchorfile>
      <anchor>a0d91a6285d37723a518634ef71f4ee2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::register_application_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1register__application__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>register_application_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__application__command.html</anchorfile>
      <anchor>a354071c4b367ee8de108808e4c4659ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__application__command.html</anchorfile>
      <anchor>aae86ef948c8e52132eb84517fa5f8f75</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__application__command.html</anchorfile>
      <anchor>a46485af786613d44295aa649d6cddd51</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>port_t</type>
      <name>get_port</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__application__command.html</anchorfile>
      <anchor>aae51d1c1b88f8266a5d9d5b3db16a971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_port</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__application__command.html</anchorfile>
      <anchor>ad10856ea38072115808b28e40d2d37a5</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::register_event</name>
    <filename>classvsomeip__v3_1_1protocol_1_1register__event.html</filename>
    <member kind="function">
      <type></type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a02344b70f123bfa0d46aaeebfa5eac1a</anchor>
      <arglist>(service_t service=ANY_SERVICE, instance_t instance=ANY_INSTANCE, event_t event=ANY_EVENT, event_type_e event_type=event_type_e::ET_UNKNOWN, bool is_provided=false, reliability_type_e reliability=reliability_type_e::RT_UNKNOWN, bool is_cyclic=false, uint16_t num_eventg=0, const std::set&lt; eventgroup_t &gt; &amp;eventgroups=std::set&lt; eventgroup_t &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a374ec28d0caca865471bb5fa2ee8eb91</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, size_t &amp;_offset, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a55acc2244e418c911190ef065f2bad83</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, size_t &amp;_offset, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a345638ceca91a3079057c698c4b9ce35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>afc60ed635c6a7c91329ad3b2afc1f72c</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a6a5c8affe36645dbd693aa5e3bb364f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a8a68519b7dd6dbfebdf10fd6436b4273</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>event_t</type>
      <name>get_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a14d9a417a704c7630c121329eec77086</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>aeb0c953792172184a9d1449c92c94c2d</anchor>
      <arglist>(event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>event_type_e</type>
      <name>get_event_type</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a3e5c89545db597b5533f2cd20a057635</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event_type</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>ab7f124ee85d5d8db22b7a561b53e24b7</anchor>
      <arglist>(event_type_e _event_type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_provided</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a1d69d1eb7959da816c53e5224b96206e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_provided</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a312940f24d6ea3ea4583ab0274609c7b</anchor>
      <arglist>(bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>reliability_type_e</type>
      <name>get_reliability</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a006d121b44b56d0e9ccc4f1acb7aee06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reliability</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a7151ed9f58407ea1c5abfbdffd02d392</anchor>
      <arglist>(reliability_type_e _reliability)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_cyclic</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>ac7dc0ce269b94359a4f68a6962153143</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cyclic</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>a0138cc47dc3ee91703ab214f2b36886f</anchor>
      <arglist>(bool _cyclic)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_num_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>ac7030fe5c695ad4dde6faf747eec60e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; eventgroup_t &gt;</type>
      <name>get_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>aef1a919334c389825ff2f7acd448819f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__event.html</anchorfile>
      <anchor>ac5cf4c9da84d74f59c21b9544ae16ff3</anchor>
      <arglist>(const std::set&lt; eventgroup_t &gt; &amp;_eventgroups)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::register_events_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1register__events__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>register_events_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__events__command.html</anchorfile>
      <anchor>a5f750be843c737cffa6b48d48709199f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__events__command.html</anchorfile>
      <anchor>a173f53853ff94d1fc3b81d00f0344b53</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__events__command.html</anchorfile>
      <anchor>a5a8a003f6397be52d2a86c943178ff0a</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>get_num_registrations</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__events__command.html</anchorfile>
      <anchor>a3e88c9cf660796aa3d4a44b28b9884ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_registration</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__events__command.html</anchorfile>
      <anchor>a73e5b69b43fc4cc3eee4638d8448f0fc</anchor>
      <arglist>(const register_event &amp;_register_event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_registration_at</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1register__events__command.html</anchorfile>
      <anchor>a54b752093b08d36c70a273ea3d31a7da</anchor>
      <arglist>(std::size_t _position, register_event &amp;_reg) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::registered_ack_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1registered__ack__command.html</filename>
    <base>vsomeip_v3::protocol::simple_command</base>
    <member kind="function">
      <type></type>
      <name>registered_ack_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1registered__ack__command.html</anchorfile>
      <anchor>a2a47c2be356d82a6b7f3458c59cf8b73</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::release_service_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1release__service__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>release_service_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>a2cd5f21c971b5c3e30bb921907db4bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>af30612c08a375631404da4798cc1d5be</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>a3d1fc87bb82708701953c1bcc48093ee</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>a71b5b8ee36ea924dd8dfdff4127519dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>a904a288330a5e4fd8401754af9095b79</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>a90533369cc9f32ee575b7e041147c588</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1release__service__command.html</anchorfile>
      <anchor>aa0e3fafbd1b6de3e61767f8c2e0cf42f</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::remote_info_t</name>
    <filename>structvsomeip__v3_1_1remote__info__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a261bcf02447f43be8ddf87c3430cdecf</anchor>
      <arglist>(const remote_info_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>ip_address_t</type>
      <name>ip_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a97899c7bbff5fbf24cfde3659cf653c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint16_t</type>
      <name>first_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a304276bd7d66691d56366bb2ba537d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::uint16_t</type>
      <name>last_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a7b0c1481e8c58b289c63e91d0250786d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_range_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a1dab3825367e030e5ee9ae5ac9a4f0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_reliable_</name>
      <anchorfile>structvsomeip__v3_1_1remote__info__t.html</anchorfile>
      <anchor>a6b95049248901aeef64ea30b30d62c20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::remote_subscription</name>
    <filename>classvsomeip__v3_1_1remote__subscription.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a11b59757d52be67683093b3fda3b574e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a8633eec7a05f976a977e5e52dcd90ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a58e451e5d0bc69ec38a8f80bd9889b41</anchor>
      <arglist>(const remote_subscription &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aa617788d3d9cf79feb8bc51ef9a7fed9</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>address_equals</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a5321cc1677f9a03953f7ad1674d000fe</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a6e21296bc3df636038059ca155a9e30e</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a49397b6fae9b301bddc9ce31c13e7388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a409bde6e7a0db163c6fd626ea8891375</anchor>
      <arglist>(const bool _is_initial)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>force_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a4972c38ac039e0ccbec3a3b667b004b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_force_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a123398833fc6a7d1ff3340419e96be3b</anchor>
      <arglist>(const bool _force_initial_events)</arglist>
    </member>
    <member kind="function">
      <type>remote_subscription_id_t</type>
      <name>get_id</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a92ca6e93e528471ea0cbca8e1130be80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_id</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a93a2dea6fb6ef287e57c780bfcec3a41</anchor>
      <arglist>(const remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; remote_subscription &gt;</type>
      <name>get_parent</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a04df8e2b163e1aa355c5802c03d14194</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_parent</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a33ecfccb73ebfb4f520df8973251160b</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_parent)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>get_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ab7f98aa3176b1b77200782978406aa5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a33f26d6aed127c473c9363d132ad05bd</anchor>
      <arglist>(const std::shared_ptr&lt; eventgroupinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a33f50e48c30da95efcd35771efa9dd75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a3b5afaefeb77244400a3d81878cb4c22</anchor>
      <arglist>(const ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>get_reserved</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aa8faddb3a79b74f579a85474c3a97f9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reserved</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a46d87ffef992b723537976a0af019bca</anchor>
      <arglist>(const uint16_t _reserved)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_counter</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a58fe81aac2d0fae458da4680e26da5c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_counter</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aeba9d4e3a17594b4672b59fbb13143aa</anchor>
      <arglist>(uint8_t _counter)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::set&lt; client_t &gt;</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a88300f91858676e165c5b4184ba04e2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a6184264a8b10a08caa93f4391d40c6fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a588e6c6ba5effd0fa919b7d5488d46a5</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a0b18f687ca7165e9f25c5202dd4b16b1</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT remote_subscription_state_e</type>
      <name>get_client_state</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a88aee655489aaa0a3b0b61b85da3bfd5</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_client_state</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a8d8b3dd6166df1e1a5b28528c91a25bf</anchor>
      <arglist>(const client_t _client, remote_subscription_state_e _state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_all_client_states</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ade8e96d499b795e2d92d20a960d03a34</anchor>
      <arglist>(remote_subscription_state_e _state)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::time_point</type>
      <name>get_expiration</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>af9b94a78b4b71737f709d9d7007dd41b</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a9ce898ff663ddceee6d3f0b9d6a25183</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>abbfec9b58b62bb53207e5202cb7ffa09</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_subscriber)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_reliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a2fe0d1b1cf079bffca48e22d5a5c6c2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ad1dff04980de335d226b12a37eb1052a</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_reliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint_definition &gt;</type>
      <name>get_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>ad389f97b23878aded36037d8028ebeeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_unreliable</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>aa844e061ae7b9fefb73cbeb9f5625079</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_unreliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_pending</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a6b6a31a1c0e582311318c653489141d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_acknowledged</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a349fa434ae8dbf22e74df310771fe6f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>update</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a78bb1ec0d729c05c988ea46e9145af71</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients, const std::chrono::steady_clock::time_point &amp;_timepoint, const bool _is_subscribe)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::uint32_t</type>
      <name>get_answers</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a87a7dcda893c3709a0d0d5494e094d27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_answers</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a7541bb2dc358d76b45ce360eabe3d77c</anchor>
      <arglist>(const std::uint32_t _answers)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>get_ip_address</name>
      <anchorfile>classvsomeip__v3_1_1remote__subscription.html</anchorfile>
      <anchor>a39371c9c233da9b8846d9e2e179ebc17</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::remote_subscription_ack</name>
    <filename>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</filename>
    <member kind="function">
      <type></type>
      <name>remote_subscription_ack</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a478a72f8abdd01ecf676d84f88a6176d</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_complete</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>aa10db34dcf64db36b848ead31022d437</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>complete</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a6925d0a0d625b3dc4ffd8683498f5c6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_done</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>aa3fde26477867d14f82c9e4831c75b41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>done</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a60d0374814a091a8e32d63f91e196e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::shared_ptr&lt; message_impl &gt; &gt;</type>
      <name>get_messages</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a4d2d48942303049e02690c6c62c35ab1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message_impl &gt;</type>
      <name>get_current_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a6f7a3269dff039f2cc59ce4667da237e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message_impl &gt;</type>
      <name>add_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a77789bc313302e25b4b61de0c0aa355e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::ip::address</type>
      <name>get_target_address</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a7fe4ae21f0344556a2f1f7536fdc48cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pending</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a6d278f9f61543fafff863a9df0b8fdd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::shared_ptr&lt; remote_subscription &gt; &gt;</type>
      <name>get_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a34568b3b5a967b8334a4481786d2da9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a155d4de557f3e19a2ffc8532c1a3c0ce</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>aea6de43b03b4bf3b51f7a48a8ccff450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_lock&lt; std::recursive_mutex &gt;</type>
      <name>get_lock</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1remote__subscription__ack.html</anchorfile>
      <anchor>a146cb8d8de9f42bf97b820bab71e2082</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::remove_security_policy_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>remove_security_policy_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>aa087590a96b33c9a0fc23499f28194bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>a45681d0e70706be84a85fdcfff0329c0</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>ad0024462840bbf86266041a1d5300984</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_update_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>a457e958699cfa823f2a8ff57ae7d31b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>a490cf84d43369b1c5b3d57fca0acbe9d</anchor>
      <arglist>(uint32_t _update_id)</arglist>
    </member>
    <member kind="function">
      <type>uid_t</type>
      <name>get_uid</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>ae4ef51f827b58e1286762003885bd0bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_uid</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>accbd335962d74a650b39eea30ae06f06</anchor>
      <arglist>(uid_t _uid)</arglist>
    </member>
    <member kind="function">
      <type>gid_t</type>
      <name>get_gid</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>aa0092e00f3e7042f6389effa9767d3aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gid</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__command.html</anchorfile>
      <anchor>a99faf606f827fbfdc593d38a673050dc</anchor>
      <arglist>(gid_t _gid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::remove_security_policy_response_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1remove__security__policy__response__command.html</filename>
    <base>vsomeip_v3::protocol::security_policy_response_command_base</base>
    <member kind="function">
      <type></type>
      <name>remove_security_policy_response_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1remove__security__policy__response__command.html</anchorfile>
      <anchor>a0d0ed17e13b8e07c806821d3b6f0a798</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::request</name>
    <filename>classvsomeip__v3_1_1sd_1_1request.html</filename>
    <member kind="function">
      <type></type>
      <name>request</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>abe9650e340ea0bb9cc11c4611a23124b</anchor>
      <arglist>(major_version_t _major, minor_version_t _minor, ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a3b24768f041fd34937bfa2190748887b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a411b9a566bf810d3f30d602b09aa6db4</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>minor_version_t</type>
      <name>get_minor</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>ad05ae09f0ed3fbaf120f346e0fe5af94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minor</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a34f3b4a6748eeb534c0e3636af1c39f2</anchor>
      <arglist>(minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a8434fe4c318faca82e62484b98380ac6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a4063b7f2e2f4c0cdf3bb5d42c5c8a6f4</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_sent_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>ac15021a82baeb808ac93d68ceae7d84f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sent_counter</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1request.html</anchorfile>
      <anchor>a34e9217367c740b61e89463e28838014</anchor>
      <arglist>(uint8_t _sent_counter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::request_service_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1request__service__command.html</filename>
    <base>vsomeip_v3::protocol::multiple_services_command_base</base>
    <member kind="function">
      <type></type>
      <name>request_service_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1request__service__command.html</anchorfile>
      <anchor>a8f1b237bba5535fd90ce8d3b6ed4e10c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::resend_provided_events_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1resend__provided__events__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>resend_provided_events_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1resend__provided__events__command.html</anchorfile>
      <anchor>aa4ef94b2eb28ec7d96a84808c05b2dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1resend__provided__events__command.html</anchorfile>
      <anchor>a19164d7c2daafc45385b0c8564992bb9</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1resend__provided__events__command.html</anchorfile>
      <anchor>a190268c8d9694d4670068fecf9c53e2c</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>pending_remote_offer_id_t</type>
      <name>get_remote_offer_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1resend__provided__events__command.html</anchorfile>
      <anchor>a9e4c6320871247d16cc71d8578c72c28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_remote_offer_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1resend__provided__events__command.html</anchorfile>
      <anchor>afe09b8e32e6b8f66edc3f63ba5a52fc6</anchor>
      <arglist>(pending_remote_offer_id_t _remote_offer_id)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::routing_guests_t</name>
    <filename>structvsomeip__v3_1_1cfg_1_1routing__guests__t.html</filename>
    <member kind="function">
      <type>routing_guests_t &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__guests__t.html</anchorfile>
      <anchor>af49d35056bda6795837043b62994c281</anchor>
      <arglist>(const routing_guests_t &amp;_other)</arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::ip::address</type>
      <name>unicast_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__guests__t.html</anchorfile>
      <anchor>aaa188e0817c9b126117da5057101423f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::pair&lt; uid_t, gid_t &gt;, std::set&lt; std::pair&lt; port_t, port_t &gt; &gt; &gt;</type>
      <name>ports_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__guests__t.html</anchorfile>
      <anchor>af628ed86f9a4b2175a985096baffe653</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_host</name>
    <filename>classvsomeip__v3_1_1routing__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>a824434c8be3000a56ce8eb4307881ccc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>ad7590a66f5caf1e8c879bf2eb9d5a527</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *_receiver, bool _is_multicast=false, client_t _bound_client=VSOMEIP_ROUTING_CLIENT, const vsomeip_sec_client_t *_sec_client=nullptr, const boost::asio::ip::address &amp;_remote_address=boost::asio::ip::address(), std::uint16_t _remote_port=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>a64b66a7d9581eab3086703771b44e86a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_known_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>a479d4f6b019881f430b40795082ebc88</anchor>
      <arglist>(client_t _client, const std::string &amp;_client_host)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__host.html</anchorfile>
      <anchor>a97eac0163f70ac05df772d257db92b6c</anchor>
      <arglist>(port_t _local_port, const boost::asio::ip::address &amp;_remote_address, port_t _remote_port)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::routing_host_t</name>
    <filename>structvsomeip__v3_1_1cfg_1_1routing__host__t.html</filename>
    <member kind="function">
      <type></type>
      <name>routing_host_t</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__host__t.html</anchorfile>
      <anchor>a5a0561d26eae8995c3bc8c291de8984e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>routing_host_t &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__host__t.html</anchorfile>
      <anchor>adfc18fb0d6a33520dbf45f74b5b5df7b</anchor>
      <arglist>(const routing_host_t &amp;_other)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__host__t.html</anchorfile>
      <anchor>a71c1f9371aee3a71342633b41922f301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::asio::ip::address</type>
      <name>unicast_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__host__t.html</anchorfile>
      <anchor>a808342ed84ecaa01f9e6c6d98b09106c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>port_t</type>
      <name>port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__host__t.html</anchorfile>
      <anchor>ab2196a785ddba3554ce47cef07380e08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::routing_info_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>routing_info_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</anchorfile>
      <anchor>aa2b1e789ace4d4311ae31e415db46ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</anchorfile>
      <anchor>ab59caa295b32cf35a2741e5baa4a230e</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</anchorfile>
      <anchor>a01c3f95e8c365bc5c698b96a8eb0b478</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; routing_info_entry &gt; &amp;</type>
      <name>get_entries</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</anchorfile>
      <anchor>a5e4e7248a3b6b1bbd158abe469d94781</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_entries</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</anchorfile>
      <anchor>a6468e17305e81d77c9f25ce04fd13b78</anchor>
      <arglist>(std::vector&lt; routing_info_entry &gt; &amp;&amp;_entries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_entry</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__command.html</anchorfile>
      <anchor>ada7ea6879ff481755d52e8b4310b5c91</anchor>
      <arglist>(const routing_info_entry &amp;_entry)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::routing_info_entry</name>
    <filename>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</filename>
    <member kind="function">
      <type></type>
      <name>routing_info_entry</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>ab259545c58edb93f27457504cede39dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>routing_info_entry</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>ac461f4f90a87f1256923a0f24fc16a36</anchor>
      <arglist>(const routing_info_entry &amp;_source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a94471cc7ba71263c6f1f7fc91116a88e</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, size_t &amp;_index, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>afe277108c3f9b9124b0d1ff4abc00734</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, size_t &amp;_index, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>routing_info_entry_type_e</type>
      <name>get_type</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a6f65d5e4dd7a2450ff7bec45125fdb99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a75ac66a8200a9a2f7becf20e77ad40db</anchor>
      <arglist>(routing_info_entry_type_e _type)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a32dc2cdbb8c8bf77adb0a09b1a1c83da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a413ad12c1a291f1f1f5b90378a341b99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a47b97c66f1cb588761939d87be470778</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::ip::address</type>
      <name>get_address</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a49a5558745b5f3e83c57b98089e13cbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_address</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a2bcdbf61731aeb9acf6af706347005c0</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>port_t</type>
      <name>get_port</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a39469285172e1e3e63a05a3b9e2bd8a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_port</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a82720bd3b1b5abb162acca0c09a9a45b</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; service &gt; &amp;</type>
      <name>get_services</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>a7de7c1cd34cad8eecbeeed0151ebfd3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1routing__info__entry.html</anchorfile>
      <anchor>aaaeee4155a3ea4f9555888a48c335615</anchor>
      <arglist>(const service &amp;_service)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager</name>
    <filename>classvsomeip__v3_1_1routing__manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a110830ac9034d1fded02edea800ee87d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a44dcf34f8cc38a9815e730725daf37ab</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a4a9a5b3a1d9a02cad26cefc1694bdfb1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a8130364652d7488e9677ec9ab0e28f51</anchor>
      <arglist>(bool _is_request)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const vsomeip_sec_client_t *</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a5c7a5aab689b194d20baa63c276ba401</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a1a7c2fe5f07f25eea39bca522dfdedf4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a2016f9ccc0f2da3d9098c9ecd41e87fa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>affa93e3ece2faf64ba64ab3d3fffa297</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ad14963084d6c430ab8123ec770c192d9</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>af1395544fbb1754ac16c0c4957d0fb3d</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a5c7aadeae105be632661845b5ebd2a13</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a0f94c3d1136bcd9ce2e8f4e1f97a361f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab8a7b1d6337a849a1e093d3a86389d3f</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>af0fdaeb2a38ac9472b0399f9cf33b211</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a9558d07bbc0e510e424594e12e36a797</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a812176251b89fe170fe04897d58e8a86</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client=VSOMEIP_ROUTING_CLIENT, const vsomeip_sec_client_t *_sec_client=nullptr, uint8_t _status_check=0, bool _sent_from_remote=false, bool _force=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ae8c19791e938a537d90d2db9072985a1</anchor>
      <arglist>(const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab027c9680fa750274e072defe5cf7398</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a89c2d7664053810e7239a2247f2e6246</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow=false, bool _is_cache_placeholder=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>abf09a01a2e477b63a126189497ca9738</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; event &gt;</type>
      <name>find_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a025db26138d654c9b98a9582f179a554</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>find_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a4d460df35decabab5d1c9840c6e70e3e</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ae38a9791b507c75fde237a96bab38b5e</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a511c530097e6b11f04974d6b75b003c1</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>a0237766212b17b21ce5fc4546c4fab51</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>ab94d1570174d9fac738d3e065a4eb790</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>debounce_timeout_update_cbk</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>acd14ab4d87694e5c082b7154bdfeeb22</anchor>
      <arglist>(const boost::system::error_code &amp;_error, const std::shared_ptr&lt; vsomeip_v3::event &gt; &amp;_event, client_t _client, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_debounce</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>aadc4da3eb216a64bfe624f5cdcbfb9b0</anchor>
      <arglist>(const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter, client_t _client, const std::shared_ptr&lt; vsomeip_v3::event &gt; &amp;_event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_debounce</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>aa37ce421b2d68d4473b1ffab8aadbf83</anchor>
      <arglist>(client_t _client, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_debounce_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager.html</anchorfile>
      <anchor>aaf7f26201e67950d65ccef25b21f4ff3</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients, event_t _event)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_adapter</name>
    <filename>classvsomeip__v3_1_1routing__manager__adapter.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_adapter</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__adapter.html</anchorfile>
      <anchor>a519ec2b289aad1f4f0c514bdf3b46bd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual routing_manager *</type>
      <name>get_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__adapter.html</anchorfile>
      <anchor>acc34fa819532f9060a056dda041bdd3d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>process_command</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__adapter.html</anchorfile>
      <anchor>af983df6657a3cb36c4c95aab929f3757</anchor>
      <arglist>(const byte_t *_data, length_t _length)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_base</name>
    <filename>classvsomeip__v3_1_1routing__manager__base.html</filename>
    <base>vsomeip_v3::routing_manager</base>
    <base>vsomeip_v3::routing_host</base>
    <class kind="struct">vsomeip_v3::routing_manager_base::subscription_data_t</class>
    <member kind="function">
      <type></type>
      <name>routing_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3254b2e335e13123304fe781d4dbf01f</anchor>
      <arglist>(routing_manager_host *_host)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_base</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4fa288b722cb06bbb4db2cb40d3fe581</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab660f2b6baa8fdb211823caa19843fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5e621f1f2ea424eaa8995a4e8865ce7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>get_client_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a120171d444e90ea4f08d04f7dbc02efd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_client_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a0284fb11631012b829ebc5a9ad4add87</anchor>
      <arglist>(const std::string &amp;_client_host)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7c407f7cbe87c3bf86ae424017d2c219</anchor>
      <arglist>(const client_t &amp;_client)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad9792b55766321c668c68d1b18871ecc</anchor>
      <arglist>(bool _is_request)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const vsomeip_sec_client_t *</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2c8ae6d785e93503099dfe4850d7fc6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_sec_client_port</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab92789be38da45d73b21a6b93a80c926</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get_env</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aca3cadc5d779e1e3ac9c14cc2cd43375</anchor>
      <arglist>(client_t _client) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>debounce_timeout_update_cbk</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a79ad9251dbc830194f7fdbf3de918bc3</anchor>
      <arglist>(const boost::system::error_code &amp;_error, const std::shared_ptr&lt; vsomeip_v3::event &gt; &amp;_event, client_t _client, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_debounce</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a20c140e6548f76e4b67f68ea42fd364d</anchor>
      <arglist>(const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter, client_t _client, const std::shared_ptr&lt; vsomeip_v3::event &gt; &amp;_event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_debounce</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ae694614ecabf394e7f16b4bc1b253ae5</anchor>
      <arglist>(client_t _client, event_t _event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_debounce_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2f51eb703dc57df4e1f12464ec5feb43</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients, event_t _event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>adbe125dd031cf6c84a04d70079801730</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a79f5d23599b9254618d5da5fc1fb5f0d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab9d458702e1bca20993120fd383f2dc9</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_manager_base &gt; &amp;_endpoint_manager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5cc4ec6be7ab39996fc6d70e299c467b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afd752f1c68a088cff0b5523363eb3669</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a1917d5117a6b1f62121a11d332361467</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a6be428f22cc21f78c45b9937986e7db2</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a097993c7b7646bdf337467f4c202f3e6</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow=false, bool _is_cache_placeholder=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregister_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3bab20d25561b0693d395014a60d834a</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; std::shared_ptr&lt; event &gt; &gt;</type>
      <name>find_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a022a8c092d7cb385129dd3636d8a764d</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a9b73e85218ebcc4bb2a8556d0256d422</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a0b0842f10c0bf334f92381119032cef4</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ada31bef27679116ee8f842b56e30ba13</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, bool _force)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a92657fbf0c8bb3d3d625b77869e1cbe6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a538b68e20fa38427beda1086bb2e72e6</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message, bool _force)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>af287046c85170148f479dd2ca8bbdf61</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, uint8_t _status_check, bool _sent_from_remote, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a82f449b7643f797f02ad8fb8a0e1ee3e</anchor>
      <arglist>(const byte_t *_data, length_t _length, endpoint *_receiver, bool _is_multicast, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8ea936a233f8e4f787e5088b1e8709ac</anchor>
      <arglist>(routing_state_e _routing_state)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual routing_state_e</type>
      <name>get_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5cd44cde5ed32bf167a39b238d43c0a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_client_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aa274b94c93eaa0c8db95921139d9c388</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a756e61bbdad64b62e2d0923a8e5f080a</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)=0</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>find_local_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a0fa616d67a23bdc102212a67f0969da6</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>find_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4e292de5248c4978f4f3b342418958e1</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>find_local_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad4cc7aa428cb571aa687808e4cce8667</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>find_local_client_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8751d1375dc2722267f62c70b2e806c3</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; event &gt;</type>
      <name>find_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>addb6f54d415167c573fc98e2ff5aa7c6</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_guest</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a24a072f811d70122cda840956198f669</anchor>
      <arglist>(client_t _client, boost::asio::ip::address &amp;_address, port_t &amp;_port) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_guest</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>acd8f0cb1a8bb08eabc45129e3ce948f6</anchor>
      <arglist>(client_t _client, const boost::asio::ip::address &amp;_address, port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_guest</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a500411c4d2db52a60120fb7c4a543b26</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab38dd2a46ce1c0c83cbec9e3230815a8</anchor>
      <arglist>(port_t _local_port, const boost::asio::ip::address &amp;_remote_address, port_t _remote_port)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aa3a672bbe99c6336b3e486a64af27f3d</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a213fd4f9a6840cd42ea25ecc03ce5f50</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::tuple&lt; major_version_t, minor_version_t, client_t &gt; &gt; &gt;</type>
      <name>local_services_map_t</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aed5abcf61bc9aeba320702f2d69f852e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>create_service_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ab944317d60a09f63ded7992de2901423</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, bool _is_local_service)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear_service_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a32a63a4af7b3ea7731abcc7a6900ccb9</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>services_t</type>
      <name>get_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7499069864558eea70fdf78774ab252b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>services_t</type>
      <name>get_services_remote</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a83e9431265431b78b9d7ae9fea00cbd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>is_available</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a06792165fd01b2657f4b57c7e2c56376</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8469965ecf507a0973b1b960ea11a9f4</anchor>
      <arglist>(client_t _client, bool _remove_sec_client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a9fb5cf7864bbdea343d3b1367af88595</anchor>
      <arglist>(client_t _client, const std::set&lt; std::tuple&lt; service_t, instance_t, eventgroup_t &gt; &gt; &amp;_subscribed_eventgroups, bool _remove_sec_client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; std::shared_ptr&lt; eventgroupinfo &gt; &gt;</type>
      <name>find_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5bd43abef9d23568149bd54943aa44a2</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>find_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aee407185382ec9e8bfad1273ff24e013</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_eventgroup_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a581d310292a86c45291ab3cfb9740046</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>send_local_notification</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a826a1075a7fd2940d1056aa1ef94e129</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, uint8_t _status_check, bool _force)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>send_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a236cb3ea3dc154662e56ec2991c59b50</anchor>
      <arglist>(std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, protocol::id_e _command, uint8_t _status_check) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>insert_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4c7e13dc9d597f13a5c58e2f597120aa</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter, client_t _client, std::set&lt; event_t &gt; *_already_subscribed_events)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; serializer &gt;</type>
      <name>get_serializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a94c89c0c3d9cf8d294cf87f17d0950ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>put_serializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>abf3cb6e491a7e9f1a341cc36af8d2533</anchor>
      <arglist>(const std::shared_ptr&lt; serializer &gt; &amp;_serializer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; deserializer &gt;</type>
      <name>get_deserializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8fb10c771ac15477accbf8e7ab09a44b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>put_deserializer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a0934a21ce2fdc3c59e15916c05b2d04e</anchor>
      <arglist>(const std::shared_ptr&lt; deserializer &gt; &amp;_deserializer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>send_pending_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>adc724166d9a63570beac45909121382c</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>send_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a9b15e9a17348067b28cf327091cd8b3d</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remove_pending_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afe79b7facee030f49f8e80d6312cf887</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unset_all_eventpayloads</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a07a39d407ba8044ca346d4362c5b1586</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unset_all_eventpayloads</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>adc2ae8d2969139f7aa3a94bac0b5e125</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notify_one_current_value</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad3754d40cdb069ea4b6708dedcd695e9</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, const std::set&lt; event_t &gt; &amp;_events_to_exclude)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; std::tuple&lt; service_t, instance_t, eventgroup_t &gt; &gt;</type>
      <name>get_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a17de8bfb616c7a0c35249fbfc6f82827</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; event_t &gt;</type>
      <name>find_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a219721f92ceade45d8d43f1121b59055</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>is_response_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3d9f4d0902b5f69728d48750ac728439</anchor>
      <arglist>(client_t _sender, service_t _service, instance_t _instance, method_t _method)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>is_subscribe_to_any_event_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7900d97eb0f84c65613c3d0a42797ff7</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add_known_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ae038f98b2a1cdc67b871159e0a23c054</anchor>
      <arglist>(client_t _client, const std::string &amp;_client_host)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>routing_manager_host *</type>
      <name>host_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>af0c6d8d3b6a6d104b8aa0c52ae9d15b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::io_context &amp;</type>
      <name>io_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>af63283d3cb5b1fc6e7958335d088e774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>configuration_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a6c29276c8f34f37d38b88add0e284467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::queue&lt; std::shared_ptr&lt; serializer &gt; &gt;</type>
      <name>serializers_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aeeb9738a0c7d4798dc85a74c92639273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>serializer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5252ca3b86e394b1c048425c95256734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::condition_variable</type>
      <name>serializer_condition_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad638494138aea07b6b7d61798f12bc76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::queue&lt; std::shared_ptr&lt; deserializer &gt; &gt;</type>
      <name>deserializers_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afe51d57789b1803283040f020c10860c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>deserializer_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a252bfaa09f56225d90acf38d13a48593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::condition_variable</type>
      <name>deserializer_condition_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2367bc4b8a9bd50f9a331694e9d168aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>local_services_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a1ba8fe63a07a71cac512bfd499479f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>local_services_map_t</type>
      <name>local_services_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a70bb54dbd5238f29499429dc4a329dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::set&lt; client_t &gt; &gt; &gt;</type>
      <name>local_services_history_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ac51c0ac013c2b00d2eff3ef455502fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>eventgroups_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a405d55dcf887a6befd1678dbea9ac6c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroupinfo &gt; &gt; &gt; &gt;</type>
      <name>eventgroups_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a5b4548f44bd552212c5548900d250ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>events_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a8647904e1082e4f60c1cc282440da66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; event_t, std::shared_ptr&lt; event &gt; &gt; &gt; &gt;</type>
      <name>events_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a7406ba0ee0c39a459c0d447c8d6a6409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boost::asio::steady_timer</type>
      <name>debounce_timer</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ad0dc4ba1778609ac5248b3aebfdd6602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::multimap&lt; std::chrono::steady_clock::time_point, std::tuple&lt; client_t, bool, std::function&lt; void(const boost::system::error_code)&gt;, event_t &gt; &gt;</type>
      <name>debounce_clients_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>abfebbce75f923d07865a344f40919e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>debounce_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a3be0a4eb0391bb3224fcf1c457c87ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>event_registration_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a219ee503019c443218c6d8c977e6e2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; subscription_data_t &gt;</type>
      <name>pending_subscriptions_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>ac3265914f1d65116f89bed07d0511ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>services_t</type>
      <name>services_remote_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2e2c7dd7bb372a9ed83c53cd50a62fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>services_remote_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a4b201b7e95a789610f99bf77af547113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; endpoint_manager_base &gt;</type>
      <name>ep_mgr_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a44bae3b7800a1603781cf635d4a2f3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>known_clients_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a2d9ee613117700713905d1df669d8094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; client_t, std::string &gt;</type>
      <name>known_clients_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a6ba05ef8de6f9d9db44905334e2e2acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>env_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>afaf2ee9293adf48dd4ace93acccd826e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>env_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>aa313e85b4c1ce45c96c950e993831f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>routing_state_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a9f6c06204662189d42365a01e8e14b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>routing_state_e</type>
      <name>routing_state_</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__base.html</anchorfile>
      <anchor>a9384891a484bd1b76ad90ef77a71f7a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_client</name>
    <filename>classvsomeip__v3_1_1routing__manager__client.html</filename>
    <base>vsomeip_v3::routing_manager_base</base>
    <member kind="function">
      <type></type>
      <name>routing_manager_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a40bc91e188b25eba62fff86d935578b0</anchor>
      <arglist>(routing_manager_host *_host, bool _client_side_logging, const std::set&lt; std::tuple&lt; service_t, instance_t &gt; &gt; &amp;_client_side_logging_filter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>af94bc02f10545286f8a2a58206aa06bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>ac4e7ef68d5ff36a5368549d07a2e26a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a34627d6bfd2469ffe8b6c10668196f5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a1a295bf2e816626c260d41c09c5962e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>afa229fdeed55034c42364dae9f76a9c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_env</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a37b5d02c295d6d55d42808b5f8e94fdf</anchor>
      <arglist>(client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_env_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>ae7234910b554405729928de270313994</anchor>
      <arglist>(client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>afca552b39a948bb705b0487cb2fbb309</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a69cd2766ec96464c59f83b18aa2a5650</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>af369594b5ad9be2aac096efa5550d3c8</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a1aefb4e09eaf34be3929395307c07d3f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>aaa4b4dcb8663bf99ee9ef37796e3b2fb</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>ae21240532084a94ddd956099a083957b</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a39124bb8f2ca540b22f6a4a6c87f2e95</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, uint8_t _status_check, bool _sent_from_remote, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a52206a46ba78c9eae954712b8eed8e6d</anchor>
      <arglist>(const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a37f968f4f63d1f5a5a490730bb506dd9</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a398b87f868ebf4735d7bbbd210e2c21f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow, bool _is_cache_placeholder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a9268a60307458016aae72d70f4d5243d</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>aed94ad0cb9183ae7a8db1a90a783a3de</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>ae4c8730cac9feb1ec8140b8c3ebbb6bb</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a3f62399024b8a0c87d26735e7d805776</anchor>
      <arglist>(const byte_t *_data, length_t _size, endpoint *_receiver, bool _is_multicast, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a1fe0c27a864b53fceade1d3f811cbe41</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_client_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a1cc3d609c7d2938875b1a2b306c481e5</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_client_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a467e656d202d9dce3b79c53cb04be3e6</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>ad95c788131333d54871e7c436252a6dd</anchor>
      <arglist>(protocol::offered_services_response_command &amp;_command)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__client.html</anchorfile>
      <anchor>a212c7af652ce2880d71a65c5652c7f70</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_host</name>
    <filename>classvsomeip__v3_1_1routing__manager__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a9cd63fc7c00e8ffb33143344c3c49432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a6d05c4cb42bda27c54cfce560e8fd8de</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a6989a3ea32c6b0d8f91b63a5b240ae14</anchor>
      <arglist>(const client_t &amp;_client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual session_t</type>
      <name>get_session</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a3355e9163adac10bf7143b02c850ff80</anchor>
      <arglist>(bool _is_request)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const vsomeip_sec_client_t *</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a8c026ba7d6a18e5d1ca4c8da08af0aba</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_sec_client_port</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a63cacaf49c88de166a44c832d8623dfa</anchor>
      <arglist>(port_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>get_name</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a6e3ef9bc88da22555e4db130370b7227</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; configuration &gt;</type>
      <name>get_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a8c23d10e0911caae647d8d3087f6d499</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a63bfbe3936c046e356463984cd928f61</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a6ec6cecee098f789bdbbdc9b9f900764</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_state_e _state, major_version_t _major=DEFAULT_MAJOR, minor_version_t _minor=DEFAULT_MINOR)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a251cd9da419252291d4906363f784b6b</anchor>
      <arglist>(state_type_e _state)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>afbd36851bfd1577b61059cde145a25ed</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; &amp;&amp;_message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a79c4bfc49f99ad25b2b4a2ec3ca02863</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client, const vsomeip_sec_client_t *_sec_client, const std::string &amp;_env, bool _subscribed, const std::function&lt; void(bool)&gt; &amp;_accepted_cb)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscription_status</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>aa54765a84ce93f15928e966586d5e7ca</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, uint16_t _error)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>af00a6be75323908850322df1e32d628e</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a2b926f666bf04b7c5bbd7b5b100ead75</anchor>
      <arglist>(std::vector&lt; std::pair&lt; service_t, instance_t &gt;&gt; &amp;_services)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_routing</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__host.html</anchorfile>
      <anchor>a05a63794eb235fb5a93b3ec4498a9259</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_impl</name>
    <filename>classvsomeip__v3_1_1routing__manager__impl.html</filename>
    <base>vsomeip_v3::routing_manager_base</base>
    <base>vsomeip_v3::routing_manager_stub_host</base>
    <base>vsomeip_v3::sd::service_discovery_host</base>
    <member kind="function">
      <type></type>
      <name>routing_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aeefe66d29cf75d00bfb229da1d3fe558</anchor>
      <arglist>(routing_manager_host *_host)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~routing_manager_impl</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0fdc0a7aebf0366dd1be78027a5ae9bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>adc041dff720efe53be446f072e63754d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>adf4ee7dccd0cd00bb82f4195f060e6d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const vsomeip_sec_client_t *</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a544d18a29299823a816f7932dbf15d40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_client_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ab0542bd214b1617c577e53034b6e41c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_client_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a27060c4a28a79f9838e5fa6ac8bc345f</anchor>
      <arglist>(const std::string &amp;_client_host)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ac1403eab4fa425c2254e473c4903a344</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0f1927ad67c93ebff4e40f2ec9c43010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa1b01c3627410f0c70ed8586ba987f76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a07abd77e4304b1efeb090ddc5c912d56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a415bb6eb51f0910c263eff3b33df113f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a7a306a5cd4a9dbbef4045817143e07d4</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ac893721f7939d0adb922fb0fd7a94dd8</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6f6ec34b214aa862e2fd1768fb12d56b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ae2f49b60cb8698054bde3eaa5bbef0f0</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0e5dc135b8275d749b6c28e7a53ceae8</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>add545a2482505563043d91bf983e9b29</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ae575d911d7c2e40e18015232eb356f64</anchor>
      <arglist>(client_t _client, const byte_t *_data, uint32_t _size, instance_t _instance, bool _reliable, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, uint8_t _status_check, bool _sent_from_remote, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a469a565527ed8a598d9d43a17f1b647f</anchor>
      <arglist>(const client_t _client, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6242c9497b34c43a40e725d8fe80e12c</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_via_sd</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a4de6906acb4b5dcf3a46b7ac3d34f362</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, uint16_t _sd_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a979c7ab6ddd88b3d070d4f39cc9d7f87</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, const event_type_e _type, reliability_type_e _reliability, std::chrono::milliseconds _cycle, bool _change_resets_cycle, bool _update_on_change, epsilon_change_func_t _epsilon_change_func, bool _is_provided, bool _is_shadow, bool _is_cache_placeholder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aff9e4b1909ef113047b72f8e0a486b9b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, reliability_type_e _reliability, bool _is_provided, bool _is_cyclic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0c5efe5496be9fa8d6af34063b538bab</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_one</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aabdc0f68ec53b5fb2d8a8cb2c6753989</anchor>
      <arglist>(service_t _service, instance_t _instance, event_t _event, std::shared_ptr&lt; payload &gt; _payload, client_t _client, bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5f3160a9ee75435074edb2ff61ceb174</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ab2fc6ea322fbf4faebff970250a47f70</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, bool _remove, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a334050f751e0aa04ac790d64adb9c931</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a18528a38d78fa8caba7a0d5b46a7c21e</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6ab289640d3e0656ae60525cffc14691</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2677e246e2ff61c55e66bc7ccb634b43</anchor>
      <arglist>(client_t _client, bool _remove_uid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ae970a87dac8fe18db99b08265ceb4a29</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a93d0730bef8d8cb651ef29d43998f52a</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_state_e _state, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_pong</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a8d199a6a5967df60bb39c90ad99cbf99</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_subscribe_ack_with_multicast</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a10ff9ee80828fa1d20cd32e0bd2471ef</anchor>
      <arglist>(service_t _service, instance_t _instance, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_unsubscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a19fd6b7f2c4b4e5c53874e6373d7a3db</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5c5e90f3db43767723bf824934ceb583</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_disconnect</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a866f839be5658bd734f0df2fa16d042f</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a42950855434cc66f4021e70ed4d8837e</anchor>
      <arglist>(const byte_t *_data, length_t _size, endpoint *_receiver, bool _is_multicast, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a1f42bfd77aa8b614e9b46c25412c3e44</anchor>
      <arglist>(service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _reliable, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, uint8_t _check_status=0, bool _is_from_remote=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_notification</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a96d3bb21b63940702597929ceeccd533</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _notify_one)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>offer_service_remotely</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a05a901e3b60a8cc8f45268da423df84e</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop_offer_service_remotely</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa16f901fb03f81c13b73f6cdb6815041</anchor>
      <arglist>(service_t _service, instance_t _instance, std::uint16_t _port, bool _reliable, bool _magic_cookies_enabled)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>find_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa82ed1917c9009bce5b4b52df4b78648</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const</arglist>
    </member>
    <member kind="function">
      <type>services_t</type>
      <name>get_offered_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2badf0d0039c8608e10f0d8a9f9f1512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>get_offered_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a374f5300d958d1d500aeb6fc327c0a0f</anchor>
      <arglist>(service_t _service, instance_t _instance) const</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt;</type>
      <name>get_offered_service_instances</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0788d2c0695a0a30b1830d6048309d4a</anchor>
      <arglist>(service_t _service) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_service_discovery_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0304fd421e7fa3a14a5398996b1f9beb</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a7abb90bed19d9c3aab3494e0b03631e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a2cdf4dbed7da55c32a8167aa79f07fdf</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, const boost::asio::ip::address &amp;_reliable_address, uint16_t _reliable_port, const boost::asio::ip::address &amp;_unreliable_address, uint16_t _unreliable_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>del_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a901b789b2a3c96a21a9a7d1665ae4811</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _has_reliable, bool _has_unreliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ae1628dcdb011d4fbea7b5fc4662cbc1f</anchor>
      <arglist>(std::chrono::milliseconds _elapsed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_remote_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a00688408ba732263926f5428c8278006</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription, const remote_subscription_callback_t &amp;_callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_remote_unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ad93e74662c684f59ae6353023d83a039</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a73e80df101d2e5204afb16c9d1586205</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a432c8cf83549df89bb5da431a20dd9f2</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5a2c2c2ff1b49f74b7fb3048026a8745</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const configuration::port_range_t &amp;_range, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aee6f2b47e40b7066fcadb4ff4c803f04</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ab9fa50585871184aa6019977d00eee0b</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>afe8afa128c35fea0f9c59e66621a246d</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const configuration::port_range_t &amp;_range, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::time_point</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a61da1845e0206ce6ff12ff7b3285ad35</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_client_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0e8b0891a3dd83e7fcb9c40d846abb0c</anchor>
      <arglist>(client_t _client, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_client_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a53684973276ef96fc595f278d5825fd9</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint_manager_impl &gt;</type>
      <name>get_endpoint_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a757f9fb2c50c7d13c376e167bc808d39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_routing_state</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a99bdb7d238dc56549f945351e329a62a</anchor>
      <arglist>(routing_state_e _routing_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_get_offered_services_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ac89fa86704fb743642f7eddf56b0c86a</anchor>
      <arglist>(client_t _client, offer_type_e _offer_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_initial_events</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a164ef2d6f087e40ad20b3da0425eaf32</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, const std::shared_ptr&lt; endpoint_definition &gt; &amp;_subscriber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_stub_status</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a58dc5c0656b90caaa151c7d01e85bc38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5707be24ae580117cc329a8721f6deb2</anchor>
      <arglist>(return_code_e _return_code, const byte_t *_data, length_t _size, instance_t _instance, bool _reliable, endpoint *const _receiver, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>service_endpoint_connected</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a5baf956005dfe3a8cfb3577662a4ca8a</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _unreliable_only)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>service_endpoint_disconnected</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0737c2edd01e342d78b630ae914e8493</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>ade1455bf3fa01b5706c2ab565e3432e9</anchor>
      <arglist>(const sd_acceptance_handler_t &amp;_handler) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a16b38073c5a7a9f7b0c43e8fb0b0219a</anchor>
      <arglist>(const reboot_notification_handler_t &amp;_handler) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_routing_ready_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>afbd221bf9d5b4871a8c431079a0bc55f</anchor>
      <arglist>(const routing_ready_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_routing_state_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a7fb080abaddee13a8c644cc1e93eef58</anchor>
      <arglist>(const routing_state_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sd_acceptance_enabled</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a1fc7149eb222ca5427215f87e604cdd1</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, const configuration::port_range_t &amp;_range, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_resend_provided_events_response</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a9a2a5c4f918acecdb3d1b0817b3706fe</anchor>
      <arglist>(pending_remote_offer_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>find_local_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a457eec240469393a28b87b478ce63d83</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>find_local_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a1d4cec2c172fda1748df9e3b890c681b</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_subscribe_to_any_event_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a6b0709c756a9c6392f09008818a3f246</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>adc07eb661a5fc34d125a5b90b9be01dc</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy, const std::shared_ptr&lt; payload &gt; &amp;_payload, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>a0018319f943718f25d6538a118b67ce6</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_known_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>adc4b1ee91321ab4c1b6c33a97efa7bf1</anchor>
      <arglist>(client_t _client, const std::string &amp;_client_host)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_message_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aecff2a56906c38ef7d94a8c32b3eb4bf</anchor>
      <arglist>(const message_acceptance_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__impl.html</anchorfile>
      <anchor>aa42d994ba20c2e5e40503c49655d45eb</anchor>
      <arglist>(port_t _local_port, const boost::asio::ip::address &amp;_remote_address, port_t _remote_port)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_stub</name>
    <filename>classvsomeip__v3_1_1routing__manager__stub.html</filename>
    <base>vsomeip_v3::routing_host</base>
    <member kind="function">
      <type></type>
      <name>routing_manager_stub</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ace97197177b5e9ffa47daa85c55297ff</anchor>
      <arglist>(routing_manager_stub_host *_host, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_stub</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a23e20b7d21a70e95ad702a09cef6bb3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ac287ef72952b6effe746e25b61bb23c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aea5b82fe564aaf3aa4d39de66e942a3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aaacbec34a97c7f937271074ba499d718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ac1007e7f7ddb3f8e3aa8cafac6ac4648</anchor>
      <arglist>(const byte_t *_data, length_t _size, endpoint *_receiver, bool _is_multicast, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, const boost::asio::ip::address &amp;_remote_address, std::uint16_t _remote_port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a0d79e4980aae197ee4998ca9b837a8fc</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af0efdbd1f4c55560b199d465e5fef3b9</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aa3430ed55329fc666b9474069d713400</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a9c09edc2c9818024e6042aca0b99f7bc</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_expired_subscription</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a25aba6f3650e4085db8978666518959c</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_target, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a1faad57b0205a00ef2c88575d972fd2f</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a6505c893334fa8950b48004d9e792729</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contained_in_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a4eb48ecef7b59c4ae8a5bc89a5b972a0</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_local_receiver</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a903ccb56df91863313030b76a0cd293b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_ping</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a7c706bdeaa05a720c0a7e7d6fcc774e3</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_registered</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a6871b6c06771c187eb0c4742eee9fa1d</anchor>
      <arglist>(client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a8666c56310c07b26a34f64e72897aaaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_credentials</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ab8a3e8f9f577d105b9f6ff90fee4703b</anchor>
      <arglist>(const client_t _client, std::set&lt; protocol::service &gt; &amp;_requests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handle_requests</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ad50c37cc6995f25ac9e5286cebe9cced</anchor>
      <arglist>(const client_t _client, std::set&lt; protocol::service &gt; &amp;_requests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_registration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>abbee41383471bc82f6ba98277c3479a6</anchor>
      <arglist>(client_t _client, registration_type_e _type, const boost::asio::ip::address &amp;_address, port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_endpoint_status</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a055d765c4cccc0c93ba4ee6d7d686517</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_provided_event_resend_request</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ab9bc0c4bf9a131db6ab1dc4ab1cdce2c</anchor>
      <arglist>(client_t _client, pending_remote_offer_id_t _id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a45bb82ac1ccaf569af0314ec5dc0d35f</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const std::shared_ptr&lt; policy &gt; &amp;_policy, const std::shared_ptr&lt; payload &gt; &amp;_payload, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_security_policy_configuration</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a4a937b54fb94c70c6cb494c2662f757c</anchor>
      <arglist>(uint32_t _uid, uint32_t _gid, const security_update_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_security_update_response</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af2a5aff43bb318423e89c035db6c8a25</anchor>
      <arglist>(pending_security_update_id_t _id, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>policy_cache_add</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ae82d04f3abc7cae859fe90f1be903317</anchor>
      <arglist>(uint32_t _uid, const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>policy_cache_remove</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a926f2adb322dfabb0f3dd04e34f42cc4</anchor>
      <arglist>(uint32_t _uid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_policy_cached</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>aa3fb11562775ad5b81906e94d58a3f24</anchor>
      <arglist>(uint32_t _uid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_update_security_policy_request</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a871c1be5c27b65a54e46545834e79e8f</anchor>
      <arglist>(client_t _client, pending_security_update_id_t _update_id, uint32_t _uid, const std::shared_ptr&lt; payload &gt; &amp;_payload)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_remove_security_policy_request</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a96bf6b44a05977863727d03e2533264b</anchor>
      <arglist>(client_t _client, pending_security_update_id_t _update_id, uint32_t _uid, uint32_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_cached_security_policies</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a5205eca20d93ac31b27c8e3e6d4a81fa</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a6ad35253f701f2f2c516851b436e5d0f</anchor>
      <arglist>(uid_t _uid, gid_t _gid, const std::set&lt; std::shared_ptr&lt; policy &gt; &gt; &amp;_policies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_requester_policies</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>af5903df0e91f8edf5223211915bbe727</anchor>
      <arglist>(uid_t _uid, gid_t _gid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_known_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a673e308586b52508638d248577ed57ac</anchor>
      <arglist>(client_t _client, const std::string &amp;_client_host)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_suspend</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>a279a03f20cc789ecfd5270f37e32442c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub.html</anchorfile>
      <anchor>ac36d49dec2de8ae30e8075aba137b33c</anchor>
      <arglist>(port_t _local_port, const boost::asio::ip::address &amp;_remote_address, port_t _remote_port)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::routing_manager_stub_host</name>
    <filename>classvsomeip__v3_1_1routing__manager__stub__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~routing_manager_stub_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ad453889d5d21667c873424c23f8b1aac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aeeeea852a4db06e8094a32897569a865</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, bool _must_queue=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ac8ce2ca2bb0dbc0ca003d49aae32dc48</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, bool _must_queue=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a5d55be5003c12b4e3cec89c4fe18fac3</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>adc340763151321e4f6084c91d448d7a5</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a0fd5fc50ed89c5b4699d8945b323c5f0</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _notifier, const std::set&lt; eventgroup_t &gt; &amp;_eventgroups, event_type_e _type, reliability_type_e _reliability, bool _is_provided, bool _is_cyclic)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unregister_shadow_event</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a5d6298886ef292fa7fbb99c50db96530</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, event_t _event, bool _is_provided)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a61cc235e7756d42e26d31b2a2e013822</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, event_t _event, const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ae8579fb16b437227f9772bf711b7bc7a</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ad1d8b23de62d1d5d8aea2e512cf76240</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, bool _remove, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aabd2d2793942d8b6802640eb66304b62</anchor>
      <arglist>(client_t _client, const vsomeip_sec_client_t *_sec_client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_unsubscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aba3231e0a6f814d8d36bc0570bcfd394</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, remote_subscription_id_t _unsubscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a29075f597f83f6f40ed271a9ac971895</anchor>
      <arglist>(service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _reliable, client_t _bound_client, const vsomeip_sec_client_t *_sec_client, uint8_t _status_check=0, bool _is_from_remote=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_notification</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a0f9cb5eb229fad751b641381298f4e88</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, const byte_t *_data, length_t _size, bool _notify_one=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>aceffd2db0e8f7a23b48f77992301561a</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_availability</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ad569254fd7ef8c66e97b80f422a2eba5</anchor>
      <arglist>(service_t _service, instance_t _instance, availability_state_e _state, major_version_t _major, minor_version_t _minor)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a3e3283248aab47b431ed4ad690f35155</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a202f2ce36d69179dbded0a121a0c1a2a</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_local</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a138f10abef0452a951073257e205dc88</anchor>
      <arglist>(client_t _client, bool _remove_local)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ab9b537ab3269b4ecb6886c290ff1e93b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>get_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a4440ff6e59650d28e1db933855942692</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const vsomeip_sec_client_t *</type>
      <name>get_sec_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a5c381ae3a2fcc1a7fca5d966cc88d92b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_pong</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a65a538f621094dfa1053784e2ae279c7</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handle_client_error</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ad2f753b2ea055405f10154a70c43313a</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint_manager_impl &gt;</type>
      <name>get_endpoint_manager</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ab0ec5f3172d84c26af6b4a69d533e49b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_resend_provided_events_response</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a213624de1f1f1320189f08b1c8a9a440</anchor>
      <arglist>(pending_remote_offer_id_t _id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual client_t</type>
      <name>find_local_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a685f06ff7acdf844df0d400880958819</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; client_t &gt;</type>
      <name>find_local_clients</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a688545cc0bf1fbe2a7ef5489c538a5cd</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_subscribe_to_any_event_allowed</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a7d293022ee745ef607634e24a4974528</anchor>
      <arglist>(const vsomeip_sec_client_t *_sec_client, client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_known_client</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>abd20b3a5e3cc833d69312f7c53995573</anchor>
      <arglist>(client_t _client, const std::string &amp;_client_host)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_client_host</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a71d8c94c0b12d617a8dc736d528354c1</anchor>
      <arglist>(const std::string &amp;_client_host)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_guest</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>ae39c7da563973060f822c3bfa1973538</anchor>
      <arglist>(client_t _client, boost::asio::ip::address &amp;_address, port_t &amp;_port) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_guest</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a92c04a409db291627167495d14954a39</anchor>
      <arglist>(client_t _client, const boost::asio::ip::address &amp;_address, port_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_guest</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a473ab99ddbca31f31891bfe4f196f09d</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear_local_services</name>
      <anchorfile>classvsomeip__v3_1_1routing__manager__stub__host.html</anchorfile>
      <anchor>a7fae73d9dc4221f8e4967f05c81419e8</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::routing_t</name>
    <filename>structvsomeip__v3_1_1cfg_1_1routing__t.html</filename>
    <member kind="function">
      <type></type>
      <name>routing_t</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__t.html</anchorfile>
      <anchor>a607a6b25e8c9357933d156bb802e20ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>routing_t &amp;</type>
      <name>operator=</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__t.html</anchorfile>
      <anchor>a9d98eb788c99b7d8191c513f2b7020df</anchor>
      <arglist>(const routing_t &amp;_other)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_enabled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__t.html</anchorfile>
      <anchor>a484d12f761e3d5f69ecb08e5fed851a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>routing_host_t</type>
      <name>host_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__t.html</anchorfile>
      <anchor>a0277ea89be30103fba8236bc3fd78cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>routing_guests_t</type>
      <name>guests_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1routing__t.html</anchorfile>
      <anchor>a7e7859ddef2f87afc4531f5aadfba374</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::runtime</name>
    <filename>classvsomeip_1_1runtime.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a6543751e63fd895ef060eaaf926c35da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ae577db52d793661d61483c510e2c0427</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a30c6bb3675dca4aca89e4c2de6e08b3f</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a92ccfdd8958df526a6ab14fdf88aa144</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a8d41ff1afe3ab7b2564f1d4a9177e961</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a567471e31bfd900a7c6b7eb92574653b</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>aec72ad2b5499bce22fc476835fb453d8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a57ae5292ef0e920a95f71f3a98b0b96b</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ac4e66005facb1a5df1b7d59c4e23e310</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a583d6050367175b2905daf8aacbc664d</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a14567a7458e9d72be23601655c5253c1</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a48877487033b1cc0d92faefa1c77a3d5</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>a638f07cfaaa950b2fa45890e8cf92d78</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip_1_1runtime.html</anchorfile>
      <anchor>ae84dc0df98b3e88ec0bfcda805307815</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::runtime</name>
    <filename>classvsomeip__v3_1_1runtime.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a1ae035f8c8bdb04db64474505af00aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>ac79ac3ad0d0cf5703101fd9bf77dcaec</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a71c222b43fed7fb41fc530158583c768</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a8bb1fc51102405053a278459af018a10</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a284f86f4fe3cb594cf8e4d2f2326290f</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a662c555a336ec841c091bd8791b0cd72</anchor>
      <arglist>(bool _reliable=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a0762dea5750e193116f9b7ec2f32f5c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>acfba9325c49024344a8c8cfcbe3574b7</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>ac82de63e8eee080e121e407269dcf68c</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>aae9a6005759e9e2537a77ae8515595fd</anchor>
      <arglist>(const std::string &amp;_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a3abb88ed839c3507aa16bee14236a768</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a41a0202c9688bd81df33a277a5375802</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_path)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>aac5b3da1816536dc614927c2b26d8055</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>a4589018e02d4162a9989ad89916d76bc</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1runtime.html</anchorfile>
      <anchor>adbc45aca613505212e5be2bad0a55494</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::runtime</name>
    <filename>classvsomeip__v3_1_1sd_1_1runtime.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime.html</anchorfile>
      <anchor>a128490dd3dd69f1c2685001a6662027d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; service_discovery &gt;</type>
      <name>create_service_discovery</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime.html</anchorfile>
      <anchor>a5bdfc8928d4e3a89035419795f71d927</anchor>
      <arglist>(service_discovery_host *_host, std::shared_ptr&lt; configuration &gt; _configuration) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::runtime_impl</name>
    <filename>classvsomeip_1_1runtime__impl.html</filename>
    <base>vsomeip_v3::runtime</base>
    <member kind="function">
      <type></type>
      <name>~runtime_impl</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a1422efcfb3c3cae7998d6e6203dace63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>abf05746121d6ccf42d235c949304a538</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>abbe4c4a5aea32d9a72395fdfad8641a8</anchor>
      <arglist>(bool _reliable=false) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>ae4ff8ac74ff78746e0d629f983288964</anchor>
      <arglist>(bool _reliable=false) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a3d31647b87b95d98a263ba0cf004d5ed</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a62acd9c4d78932a6f7af7b1c180b0c93</anchor>
      <arglist>(bool _reliable=false) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>ada611cda08156c70f2a066eb6d3395fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a001d6c64c84b292570a4aa6f90d31627</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a64ad4b7b0abd1817f6d1e20752d11811</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a4d67f4aeae9276cd0893716179ee1e29</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>addc21f326195270af3b06e0fc5c036f7</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a32a4788f5ec55116f9291944204fa93d</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a44f84706245976bb9f7e0b508f5801e1</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip_1_1runtime__impl.html</anchorfile>
      <anchor>a108a4f197d6f0cc27cc8ab441034b7e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::runtime_impl</name>
    <filename>classvsomeip__v3_1_1runtime__impl.html</filename>
    <base>vsomeip_v3::runtime</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime_impl</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>afa733901a0f9c7b031f74f27638268a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a1eb7ce27098aed92f23ea428c1b79e95</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>create_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>ac5af5f010878553a73ac651e0fecdef3</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_message</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a45c27994d36fb8439e196bf907750966</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_request</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a09d69bb1645e09ef02a4026308e999a8</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_response</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a8fa9f85b41415db6654fc5430e43a454</anchor>
      <arglist>(const std::shared_ptr&lt; message &gt; &amp;_request) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; message &gt;</type>
      <name>create_notification</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>aeba73694010a60e3bf261a10e42f417b</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a0776ab695a2269c3a23354276d07083f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>aa9eae16ecdc250aa95337a66daf6f566</anchor>
      <arglist>(const byte_t *_data, uint32_t _size) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; payload &gt;</type>
      <name>create_payload</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a53110a1a8fa50c64f81e1b879b3bb250</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; application &gt;</type>
      <name>get_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a8662a78e1b9dd42e9634c1d1af9435b7</anchor>
      <arglist>(const std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_application</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a6de580e026ee2bd43bbcb8c9399215cd</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a5a11b863da5d067df26138afe49125e2</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_property</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>aaf5952930818388aaab39028db47ed49</anchor>
      <arglist>(const std::string &amp;_name, const std::string &amp;_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; runtime &gt;</type>
      <name>get</name>
      <anchorfile>classvsomeip__v3_1_1runtime__impl.html</anchorfile>
      <anchor>a3861b9c044bef197f69e83597947ad8b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::runtime_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1runtime__impl.html</filename>
    <base>vsomeip_v3::sd::runtime</base>
    <base>plugin_impl&lt; runtime_impl &gt;</base>
    <member kind="function">
      <type></type>
      <name>runtime_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime__impl.html</anchorfile>
      <anchor>aba28e993738bd6447b7628311f04f75c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~runtime_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime__impl.html</anchorfile>
      <anchor>ae355e6fdee46bd2553bfbeb1a0b7f6ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; service_discovery &gt;</type>
      <name>create_service_discovery</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1runtime__impl.html</anchorfile>
      <anchor>a3caed2c65e3863684f128d7d1b978862</anchor>
      <arglist>(service_discovery_host *_host, std::shared_ptr&lt; configuration &gt; _configuration) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::security</name>
    <filename>classvsomeip__v3_1_1security.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>load</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a5a8c4f423f213e5721cec741cc3e93b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;vsomeip_sec_policy_initialize)</type>
      <name>initialize</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a2146a7e96c761f7e73df56cbc965397e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;vsomeip_sec_policy_authenticate_router)</type>
      <name>authenticate_router</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>acdb353267979031cab515c51446b7d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;vsomeip_sec_policy_is_client_allowed_to_offer)</type>
      <name>is_client_allowed_to_offer</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a7db58dbdf5e188b7f3312d2d60d930e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;vsomeip_sec_policy_is_client_allowed_to_request)</type>
      <name>is_client_allowed_to_request</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a47cd44f2b32a718bd17bc2a13ce1e9f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;vsomeip_sec_policy_is_client_allowed_to_access_member)</type>
      <name>is_client_allowed_to_access_member</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>a6fdf29c8d332b36944421afcf6c35122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static decltype(&amp;vsomeip_sec_sync_client)</type>
      <name>sync_client</name>
      <anchorfile>classvsomeip__v3_1_1security.html</anchorfile>
      <anchor>aed217edd4b17e51236da07142e1a043f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::security_policy_response_command_base</name>
    <filename>classvsomeip__v3_1_1protocol_1_1security__policy__response__command__base.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>security_policy_response_command_base</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1security__policy__response__command__base.html</anchorfile>
      <anchor>a0b011fdc5902d5692e7784b664e2b531</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1security__policy__response__command__base.html</anchorfile>
      <anchor>ae093a9efc4735305be258b6d74cdfe24</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1security__policy__response__command__base.html</anchorfile>
      <anchor>a561c3e358cedfee43d32e58e96228914</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_update_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1security__policy__response__command__base.html</anchorfile>
      <anchor>a832e4a8bedd3daa3803856d100187b00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1security__policy__response__command__base.html</anchorfile>
      <anchor>aeb1f726ed9718f9d3b5670109903c537</anchor>
      <arglist>(uint32_t _update_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::selective_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>selective_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>ade3a21bd38d04e5eb81ef5e53dff8c74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~selective_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>affc3cc72c18a5a27d7b4f0e2ec574a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equals</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>aed7624428f263c902e3b5218d6b4665d</anchor>
      <arglist>(const option_impl &amp;_other) const</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>add084d1d07db324035ee96ed078ee59e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a3d7e1b64ebc4776dba508902e309fb2c</anchor>
      <arglist>(const std::set&lt; client_t &gt; &amp;_clients)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a1b98df04ed7fe6acca467b1c5cc30e8a</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a5dc2dacdb07639debea79551c684b61e</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a44801f5cbe01f993f0357117e652aecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a3d9a5c3ed7f10ef9e0c19a13de681e69</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a504c0ae3f61b5212f67f3bd9c05b2d19</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1selective__option__impl.html</anchorfile>
      <anchor>a660f09c10468520ea6983ff4aeab1174</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::send_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1send__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>send_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a0a75fba7caf9be9ac3ccacaf2368ae40</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>ab5abed9ae17e90d0647cfefd78185aa8</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a75469b46c8e8df1fa62250bdecac70ae</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>ab1bd4be6604d88b0b83db649733e2ad8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>af85c6bb49ad91aa9f768179cebae91bc</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>aa724e012f919f0677e5049ee9da22e52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reliable</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a23018ef7e018076b3dee882ca3f395b8</anchor>
      <arglist>(bool _is_reliable)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>get_status</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a495adae285438c14980ebef0944ef7cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_status</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a04299f56e53d8e05ff28fffcbc59de36</anchor>
      <arglist>(uint8_t _status)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_target</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a7c03218226f71ec0d74ca4c709469df3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_target</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a63b7a8e44235dedbb27888448f1194fe</anchor>
      <arglist>(client_t _target)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>get_message</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>a6821eee5a357e1a967f13517508ad234</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_message</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1send__command.html</anchorfile>
      <anchor>adcd22fe29a9bc79ff02dcfd7f3bf49bb</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip::serializable</name>
    <filename>classvsomeip_1_1serializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~serializable</name>
      <anchorfile>classvsomeip_1_1serializable.html</anchorfile>
      <anchor>aa9e5e67fb3db376ae88d6d7e08706f4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip_1_1serializable.html</anchorfile>
      <anchor>aa7f7229f0572c58c7af21c10bd1d6e33</anchor>
      <arglist>(serializer *_to) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::serializable</name>
    <filename>classvsomeip__v3_1_1serializable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~serializable</name>
      <anchorfile>classvsomeip__v3_1_1serializable.html</anchorfile>
      <anchor>af3fd9f077db8c1a9f5ca91de99082c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializable.html</anchorfile>
      <anchor>a3d4c89fe1ad561e160c3f7006f528a31</anchor>
      <arglist>(serializer *_to) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::serializer</name>
    <filename>classvsomeip__v3_1_1serializer.html</filename>
    <member kind="function">
      <type></type>
      <name>serializer</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a6fc58e0719da43edf7e5ace536640678</anchor>
      <arglist>(std::uint32_t _buffer_shrink_threshold)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~serializer</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a56b9b3f8a86055f105e2a305b0a86c5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>ad856a5c72a2e375994974a8c3a4d21ac</anchor>
      <arglist>(const serializable *_from)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>adc1c0fc9be5d51b74d068a6b91019489</anchor>
      <arglist>(const uint8_t _value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a8f3fffa8a538460047fed36b62cd8736</anchor>
      <arglist>(const uint16_t _value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a61fd514c2cdc581388b94d57674bbe45</anchor>
      <arglist>(const uint32_t _value, bool _omit_last_byte=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a9d8ddbf45988e49757166ad34e534d37</anchor>
      <arglist>(const uint8_t *_data, uint32_t _length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a55e7201e60176e8cdf73b66943c357d0</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const uint8_t *</type>
      <name>get_data</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>aa0266ddb3ead4ee6624bcd705ebb5c29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>get_capacity</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>af218f31116440bb670ff6e3d6421a77c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>get_size</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>aa07831b0436db26af8a9564fe7bcaeaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_data</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a65b569a8dfc839eb0a39864404212ff1</anchor>
      <arglist>(uint8_t *_data, uint32_t _capacity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classvsomeip__v3_1_1serializer.html</anchorfile>
      <anchor>a152d65fa0559c1477df3df1053b0808c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::server</name>
    <filename>classnexus_1_1h3_1_1server.html</filename>
    <member kind="typedef">
      <type>quic::detail::engine_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1h3_1_1server.html</anchorfile>
      <anchor>ace1959209e02c4a4ebf8cb8ec1fcb662</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server</name>
      <anchorfile>classnexus_1_1h3_1_1server.html</anchorfile>
      <anchor>abdb852c180833c30bc84e8bfa272444e</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server</name>
      <anchorfile>classnexus_1_1h3_1_1server.html</anchorfile>
      <anchor>afa40965b43ba42212b4844ba7b3d2f00</anchor>
      <arglist>(const executor_type &amp;ex, const quic::settings &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1h3_1_1server.html</anchorfile>
      <anchor>a5dac6201b38fbdf50dacdb57367ce346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1server.html</anchorfile>
      <anchor>af43beb6ce6892e12e7b498702b306f0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1h3_1_1server.html</anchorfile>
      <anchor>a8828d59850b298b54f96fb5cb49eb660</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::server</name>
    <filename>classnexus_1_1quic_1_1server.html</filename>
    <member kind="typedef">
      <type>detail::engine_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1quic_1_1server.html</anchorfile>
      <anchor>a776e414c6e0c06bea46e69da664094dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server</name>
      <anchorfile>classnexus_1_1quic_1_1server.html</anchorfile>
      <anchor>a4cf9a55de1db9084400d1712713be6df</anchor>
      <arglist>(const executor_type &amp;ex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server</name>
      <anchorfile>classnexus_1_1quic_1_1server.html</anchorfile>
      <anchor>a440a7a0470009751e9542dc564b58e0b</anchor>
      <arglist>(const executor_type &amp;ex, const settings &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1quic_1_1server.html</anchorfile>
      <anchor>ace790da8807b83b45614424ca8bf43e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1server.html</anchorfile>
      <anchor>a3a77108d21b804e3a0f96a201deb7a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1quic_1_1server.html</anchorfile>
      <anchor>a8828d59850b298b54f96fb5cb49eb660</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::server_connection</name>
    <filename>classnexus_1_1h3_1_1server__connection.html</filename>
    <member kind="typedef">
      <type>quic::detail::connection_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a184e4b71819bc891e9d447955b4cde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server_connection</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a805f64359f912d4017e7a2677434aca0</anchor>
      <arglist>(acceptor &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a033bc89d7f6820761500349065e314ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a805cda227c3a230040d27cda4cb0ac04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quic::connection_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>ac556c2a28f97c0293eaf08e6cbe63844</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>quic::connection_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a63c4e25493d1074735598e85705524f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a6a66ba662012caa1c0e510f1c11dfbdc</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>acd0418a851d24575a441be075aee0fff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_accept</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a696a6e21b9dcaa3d9653d2be30e9ba5c</anchor>
      <arglist>(stream &amp;s, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a35bfbbbdd3f199aaebd4a42a5442aa63</anchor>
      <arglist>(stream &amp;s, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a9cd6700bcf4445629b4b7913c1cfd82d</anchor>
      <arglist>(stream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a2e859b7cc4b2ff30508d0d7723b4a6a2</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>go_away</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a805b543ba75a37a17734824c49059a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a757c53a0af3426283e4f11f797f11d8a</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a8ef87452152c68239d898cfa29c65b97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>acceptor</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>a8828d59850b298b54f96fb5cb49eb660</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>stream</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>ad6cdd83c821525ef93cdeb8332fd7de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>quic::detail::socket_impl</name>
      <anchorfile>classnexus_1_1h3_1_1server__connection.html</anchorfile>
      <anchor>ada535edffbb477938a55666f5e024310</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1server__endpoint__impl.html</filename>
    <templarg></templarg>
    <base>vsomeip_v3::endpoint_impl</base>
    <class kind="struct">vsomeip_v3::server_endpoint_impl::endpoint_data_type</class>
    <member kind="typedef">
      <type>Protocol::socket</type>
      <name>socket_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a6dd61e5ad1cc0c70f9727f14194b1025</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aeadfda43979d08ace37b26e183817235</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; endpoint_type, endpoint_data_type &gt;</type>
      <name>target_data_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a88a5976b940f414ea01dc1aaba2af851</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>target_data_type::iterator</type>
      <name>target_data_iterator_type</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aba66f15581cb22cf39cd738e377a0503</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a488005aae92b1af568af7dd132df1cfc</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, endpoint_type _local, boost::asio::io_context &amp;_io, std::uint32_t _max_message_size, configuration::endpoint_queue_limit_t _queue_limit, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ae50fdd2cb56f06c38bd50c209d470b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_client</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a671c0a633560bf6efd38882868c61d2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aeaae5b447b095b5fc2a6f9e7e8bea915</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a8e89859a2cfd06bf90556fe1b75cd690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>adbba384962e96c60e2d27839cef80300</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a1ef0accde9dc6481556c3d151e8928ae</anchor>
      <arglist>(bool _established)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a69a468b7a2be9194f1119aa1ebb09733</anchor>
      <arglist>(bool _connected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>afd829ac10c94c1b7210381bb51335cce</anchor>
      <arglist>(const uint8_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a7e394cf012fb83d6cffc2f637b7bbb99</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_cmd_header, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aaf25caa6dd5f6614db71fcae938e2463</anchor>
      <arglist>(const endpoint::prepare_stop_handler_t &amp;_handler, service_t _service)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a68b8db2302a671aa2bca98940560be7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>flush</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a1e22d3c230f4f474e950f74b5cca7ce4</anchor>
      <arglist>(endpoint_type _it)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aab691b9c196769b5ef8b9ecf962b9570</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a58aad5494ac7510f7449bfef55008d55</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a56170f0fdfb72c9f049528d8b89d4c1e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>af4a8118f84186b2f78c1275ff1edc098</anchor>
      <arglist>(uint16_t _port)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_cbk</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>af900914eab4f09c4fb80c940e8c3acd0</anchor>
      <arglist>(boost::system::error_code const &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>acc89a531d2d98b9578bd7c731a1afe2b</anchor>
      <arglist>(const endpoint_type _key, boost::system::error_code const &amp;_error, std::size_t _bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush_cbk</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aad1ce41f9ecc8c64bdb972e7456592e8</anchor>
      <arglist>(endpoint_type _key, const boost::system::error_code &amp;_error_code)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_stop_handler</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>afba9e78f78a07defa7c50fc3fad13782</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>send_intern</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ad64a9993d986d4c6b136b32b101e9f3f</anchor>
      <arglist>(endpoint_type _target, const byte_t *_data, uint32_t _port)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aeb8001d10e748d22293d45a5fc44c32f</anchor>
      <arglist>(const target_data_iterator_type _it)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>abe22dba037f541b22c2d59a963a7a756</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a1206cbd56d65cdf782b558e385897d1f</anchor>
      <arglist>(service_t _service, endpoint_type &amp;_target) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a2b60e8c09a6a4a9c3c4cb2db89bcdd81</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>endpoint_impl&lt; Protocol &gt;::cms_ret_e</type>
      <name>check_message_size</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>abe04f68d846a1ea8323ed94a87adcb71</anchor>
      <arglist>(const std::uint8_t *const _data, std::uint32_t _size, const endpoint_type &amp;_target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>check_queue_limit</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a7f52b9f10bfdd1c7f465f47c58264049</anchor>
      <arglist>(const uint8_t *_data, std::uint32_t _size, std::size_t _current_queue_size) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>queue_train</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a7a3498f6444ffdfecc8aedfe78bfd253</anchor>
      <arglist>(const target_data_iterator_type _it, const std::shared_ptr&lt; train &gt; &amp;_train)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>send_segments</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a731666c70b45a8c7dc2eb1b79f1787d6</anchor>
      <arglist>(const tp::tp_split_messages_t &amp;_segments, std::uint32_t _separation_time, const endpoint_type &amp;_target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>target_data_iterator_type</type>
      <name>find_or_create_target_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a5844b318067ad74e3cfafc1b0314f6a1</anchor>
      <arglist>(endpoint_type _target)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>clients_mutex_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>aa603816408dbae761da7dfb006db5a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; client_t, std::map&lt; session_t, endpoint_type &gt; &gt;</type>
      <name>clients_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ab036baac8fff34015bea1d1d99758c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>target_data_type</type>
      <name>targets_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a18b09ae699d8f1f5c050130bc191e4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; service_t, endpoint::prepare_stop_handler_t &gt;</type>
      <name>prepare_stop_handlers_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>a496b9ef6277b310b774d8c2a1fdf160f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>classvsomeip__v3_1_1server__endpoint__impl.html</anchorfile>
      <anchor>ab11cd35f70cdddb88aa0645fd4f09eee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::detail::service</name>
    <filename>classnexus_1_1quic_1_1detail_1_1service.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>service</type>
      <name>key_type</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>ae9e87f1ac3e283b8b19633a3375e0acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>service</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>af97dfabcae468d2aecdba159ad42d31c</anchor>
      <arglist>(boost::asio::execution_context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>ac6d7383d0eecc016024907f5cc14ccb3</anchor>
      <arglist>(IoObject &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>abde50ac39343432b440a9e97430324bb</anchor>
      <arglist>(IoObject &amp;entry)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static boost::asio::execution_context::id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>abfe70ee004b7769e126ff6d25d2d9e4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::service</name>
    <filename>structvsomeip__v3_1_1cfg_1_1service.html</filename>
    <member kind="typedef">
      <type>std::map&lt; method_t, std::array&lt; std::chrono::nanoseconds, 2 &gt; &gt;</type>
      <name>npdu_time_configuration_t</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>ac5706216d42c39c0c2e13ac893b2aab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a8218efcf6c9fb15a69a7c93135937198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a5c738524209ffaa493a2663c3f0091c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>unicast_address_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a27191bc14ad5d3bc343304319da501b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>reliable_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>af4f7a674076186008211e7df0e436d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>unreliable_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>adba948a0e2e7c0ddbf611a3fe2136f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>multicast_address_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>aea73a039d9749f2fe253e1cf605e411a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>multicast_port_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>ab0312abb95726c249da4ed5c8b589d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>protocol_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a87088ce4bfd1e83dea6267f210475c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>npdu_time_configuration_t</type>
      <name>debounce_times_requests_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>aae27562a53402fa3639be659782817e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>npdu_time_configuration_t</type>
      <name>debounce_times_responses_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a250ebc5608453342b9cd336330baaa84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; event_t, std::shared_ptr&lt; event &gt; &gt;</type>
      <name>events_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a90d52df15593a9f639647dc98af903ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroup &gt; &gt;</type>
      <name>eventgroups_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a091041df1bd2b46b6bab898f1e49867e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; method_t, std::pair&lt; uint16_t, uint32_t &gt; &gt;</type>
      <name>tp_client_config_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a189c2b3b7b4e9b872f85976fd2cb3946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; method_t, std::pair&lt; uint16_t, uint32_t &gt; &gt;</type>
      <name>tp_service_config_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service.html</anchorfile>
      <anchor>a3874ebf92a6f0174b8143391c1c4b26b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::protocol::service</name>
    <filename>structvsomeip__v3_1_1protocol_1_1service.html</filename>
    <member kind="function">
      <type></type>
      <name>service</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>ae5371028f42e8cf3743d8baa498ab76d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>service</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>a90966fe6dcfbcfbee19f32a3af85fdcb</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>a6b15d3b15d7fdb45aa15fbefe47b8122</anchor>
      <arglist>(const service &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>a2b7dc9cc23e1454d42e4e457fe6af372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>a2f5e5128d2ae3c3586dfc236df7e2b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>major_version_t</type>
      <name>major_</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>ac36b459076aab3383affe81c7d41f410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>minor_version_t</type>
      <name>minor_</name>
      <anchorfile>structvsomeip__v3_1_1protocol_1_1service.html</anchorfile>
      <anchor>a29a8e2b6f70656715a1234b9f50c4645</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>service&lt; nexus::quic::detail::connection_impl &gt;</name>
    <filename>classnexus_1_1quic_1_1detail_1_1service.html</filename>
    <member kind="typedef">
      <type>service</type>
      <name>key_type</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>ae9e87f1ac3e283b8b19633a3375e0acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>service</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>af97dfabcae468d2aecdba159ad42d31c</anchor>
      <arglist>(boost::asio::execution_context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>ac6d7383d0eecc016024907f5cc14ccb3</anchor>
      <arglist>(nexus::quic::detail::connection_impl &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>abde50ac39343432b440a9e97430324bb</anchor>
      <arglist>(nexus::quic::detail::connection_impl &amp;entry)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static boost::asio::execution_context::id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>abfe70ee004b7769e126ff6d25d2d9e4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>service&lt; nexus::quic::detail::stream_impl &gt;</name>
    <filename>classnexus_1_1quic_1_1detail_1_1service.html</filename>
    <member kind="typedef">
      <type>service</type>
      <name>key_type</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>ae9e87f1ac3e283b8b19633a3375e0acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>service</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>af97dfabcae468d2aecdba159ad42d31c</anchor>
      <arglist>(boost::asio::execution_context &amp;ctx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>ac6d7383d0eecc016024907f5cc14ccb3</anchor>
      <arglist>(nexus::quic::detail::stream_impl &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>abde50ac39343432b440a9e97430324bb</anchor>
      <arglist>(nexus::quic::detail::stream_impl &amp;entry)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static boost::asio::execution_context::id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1detail_1_1service.html</anchorfile>
      <anchor>abfe70ee004b7769e126ff6d25d2d9e4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::service_command_base</name>
    <filename>classvsomeip__v3_1_1protocol_1_1service__command__base.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a5bd82e765ad6796441d82ac5e444cc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>ae8604d13ad5af990beeb853e1f8d54ab</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>adadf9b1864123a2ab43d057dfe650727</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a523c3850e52a826cf21b7afdffbe1fa9</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a3d77374684c194e1ca2493ccee646d2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a39579a770c00f1989c23214769694f38</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>minor_version_t</type>
      <name>get_minor</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a46a15241b4626f395bde25a59033159f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minor</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a2d96b6558fa4c078f2489da1727ca512</anchor>
      <arglist>(minor_version_t _minor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a5d3b03de54b4dcf1daaac63120ced52e</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>a15c52d9b66aff5998904b3c33037c1f8</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>service_command_base</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1service__command__base.html</anchorfile>
      <anchor>aff23bc057cffd484bbcce10f7bf06fbc</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::service_discovery</name>
    <filename>classvsomeip__v3_1_1sd_1_1service__discovery.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~service_discovery</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>ae3e984495cd2e36f8284e922844e8dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a073bcd718136efe4c943edf8715eba14</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a2fde602f9d979ead3aa3c42ef8b131ce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a81698af3507471632a42ee1c84bc55f3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a05f0a9a526e1944503f900dffdfbfaac</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a4b5e9b0b0a6e0b91e57e9845676f492c</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a8839ba5e6db2d71b8ec389609d0178a0</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>aa4d3b3f28d60c93d5dc3feff67e4e27c</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, ttl_t _ttl, client_t _client, const std::shared_ptr&lt; eventgroupinfo &gt; &amp;_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a5758aa8f63ac1d64e3cee386dc54b252</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe_all</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a56b90bb173e88bb80fcaadd5d6b1e301</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsubscribe_all_on_suspend</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a69bb780aee81003ab9334af0e91d3e5f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>aece1c0c04406049afb96ec4c5ec16eb9</anchor>
      <arglist>(bool _is_announcing)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>abf18e42200821e25a4ff1ffe4a32241e</anchor>
      <arglist>(const byte_t *_data, length_t _length, const boost::asio::ip::address &amp;_sender, bool _is_multicast)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_endpoint_connected</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>adb3378df1326752ed9ea522937dc5ad0</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a5ee0b6fdf313d7b0c17ecdcd8fb57107</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>acbe700f3b7b0a24ec16cd1ff1c965c93</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info, bool _send)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_collected_stop_offers</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a17eb39bdcbfbf5305c93369107ac7c59</anchor>
      <arglist>(const std::vector&lt; std::shared_ptr&lt; serviceinfo &gt;&gt; &amp;_infos)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>ade6128a6746c5db69dad14ad3c695965</anchor>
      <arglist>(const bool _activate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>get_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a2869e4c7563762b29037ef3ebb2ad8c0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a27f1748f4acde4da4d352490ec90dcda</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a3f283bef9b7808ad2ab1fe595dde5737</anchor>
      <arglist>(const sd_acceptance_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>afab0c7e6d7cc3c165398264ae40d04ea</anchor>
      <arglist>(const reboot_notification_handler_t &amp;_handler)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::recursive_mutex &amp;</type>
      <name>get_subscribed_mutex</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery.html</anchorfile>
      <anchor>a1f2a14a6d828cf91b43fe6f6616237a8</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::service_discovery_host</name>
    <filename>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~service_discovery_host</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a8f9967b25996fafac963829e133b79a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ab24b6f6565fc0e94fcf45385d0a49b60</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>create_service_discovery_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>abd464332c3f9170e0f0dbe48ab89586f</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual services_t</type>
      <name>get_offered_services</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a76f3a0b60745e5913e8c2e0d0c993d2b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; eventgroupinfo &gt;</type>
      <name>find_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a9421de30db76c8d7472e931df6d3de48</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ad670317cecc185c5fa72e6874f8e9ff8</anchor>
      <arglist>(client_t _client, std::shared_ptr&lt; message &gt; _message, bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>send_via_sd</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a265f5a0cfb5ac345d2450029febb76d3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_target, const byte_t *_data, uint32_t _size, uint16_t _sd_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a06ff3b49a8fd48c835c0cfcfec4b6346</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, const boost::asio::ip::address &amp;_reliable_address, uint16_t _reliable_port, const boost::asio::ip::address &amp;_unreliable_address, uint16_t _unreliable_port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>del_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a3d8dcd32b82b51a7e6b351b0f0db372c</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _has_reliable, bool _has_unreliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update_routing_info</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a940fbca9e1b16c3ba19a701a2ee87da8</anchor>
      <arglist>(std::chrono::milliseconds _elapsed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_remote_unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ab3e1ed4d6c13d766a20906e6683bcdc8</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_ack</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a818815cd881cbc0626ce6b8379439e0b</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, event_t _event, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_ack_with_multicast</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a8eae0a56f31c76dec77c11e055219fdf</anchor>
      <arglist>(service_t _service, instance_t _instance, const boost::asio::ip::address &amp;_sender, const boost::asio::ip::address &amp;_address, uint16_t _port)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; endpoint &gt;</type>
      <name>find_or_create_remote_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>aece7bfcc6ed9a3eaac97d65e9844b738</anchor>
      <arglist>(service_t _service, instance_t _instance, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a4f0216a16088c5d123b365310ae85fff</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a661be79b7f5b2cb143de4fd86991037c</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ae1cec475fb1fe61d52ccc4f367534b45</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expire_services</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a2df4e6134051ee615ae74e05941ac8c5</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, std::uint16_t _port, bool _reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_remote_subscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>aed10c8edc9bbf8929aa39aefc1433803</anchor>
      <arglist>(std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription, const remote_subscription_callback_t &amp;_callback)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>on_subscribe_nack</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a9c1ad97a1216e4a5a0da09abed132915</anchor>
      <arglist>(client_t _client, service_t _service, instance_t _instance, eventgroup_t _eventgroup, bool _remove, remote_subscription_id_t _subscription_id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::chrono::steady_clock::time_point</type>
      <name>expire_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ab7a2b4bf59cae239e039807457d955c7</anchor>
      <arglist>(bool _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; serviceinfo &gt;</type>
      <name>get_offered_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>ae540bf7779eb40e54c643ae04befdc0f</anchor>
      <arglist>(service_t _service, instance_t _instance) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt;</type>
      <name>get_offered_service_instances</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a407cde4448b17c41ab7c6ffc4ac873e1</anchor>
      <arglist>(service_t _service) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::set&lt; eventgroup_t &gt;</type>
      <name>get_subscribed_eventgroups</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__host.html</anchorfile>
      <anchor>a4501895707c89dfa63fb371fef292b1f</anchor>
      <arglist>(service_t _service, instance_t _instance)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::service_discovery_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</filename>
    <base>vsomeip_v3::sd::service_discovery</base>
    <member kind="function">
      <type></type>
      <name>service_discovery_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>ab49b48cc307d7daaa14bffc90aad90f9</anchor>
      <arglist>(service_discovery_host *_host, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~service_discovery_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a0e1241c6021e6547ad57b66d595fb949</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boost::asio::io_context &amp;</type>
      <name>get_io</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>af5d014a991ac3aa88ac5dfc6c5304555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::recursive_mutex &amp;</type>
      <name>get_subscribed_mutex</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a7492bf194dddc491f55de58adf7b1c4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a7e1154e621b5c4dab07d4cc1842e5bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a9178c62e746b9b7546702337060354d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>ad417a338266e50bb30f057455865a61c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aa421901081b62f02bb2ef2e9d280ad82</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aec7abb984d94659cf036ea4f04d363fd</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>aa4a915b16cf78d0d8daab1c5a3aa7f00</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, major_version_t _major, ttl_t _ttl, client_t _client, const std::shared_ptr&lt; eventgroupinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>adf962a469c213237f1db54f9b1f39c81</anchor>
      <arglist>(service_t _service, instance_t _instance, eventgroup_t _eventgroup, client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe_all</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a4e1a99f6b483cb70545a242d8b85dd04</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe_all_on_suspend</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a99228f7844b2a61368c283c1e0652ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_subscriptions</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a9582f87790e01e46e9d66a48e4d5d1fe</anchor>
      <arglist>(service_t _service, instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>abf17596719054d7992dfe2ce549dd9f6</anchor>
      <arglist>(bool _is_announcing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_message</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>ae37a7e3620713bd3de8bed93cde77a5a</anchor>
      <arglist>(const byte_t *_data, length_t _length, const boost::asio::ip::address &amp;_sender, bool _is_multicast)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_endpoint_connected</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a1be412ab8ba3246b08d0c68765a04427</anchor>
      <arglist>(service_t _service, instance_t _instance, const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a5a06d4b18fe7b7ca796d2eb015b4bed8</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop_offer_service</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a5b34b4fed0071067017c7766301dd427</anchor>
      <arglist>(const std::shared_ptr&lt; serviceinfo &gt; &amp;_info, bool _send)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_collected_stop_offers</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a130d8b36a6a964f7ae174aa17c748134</anchor>
      <arglist>(const std::vector&lt; std::shared_ptr&lt; serviceinfo &gt;&gt; &amp;_infos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>afeed4f95695fc1d08f46b613db288a39</anchor>
      <arglist>(const bool _activate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_diagnosis_mode</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>adc33efe2107b8aefa26cb09093826e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_remote_subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a2d0988076add0b09f9f74d34786edbcb</anchor>
      <arglist>(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_sd_acceptance_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a40e42598c38338440ef9680d3dc68a0b</anchor>
      <arglist>(const sd_acceptance_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_reboot_notification_handler</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1service__discovery__impl.html</anchorfile>
      <anchor>a77d55e25bd2c40777d066206ba357c93</anchor>
      <arglist>(const reboot_notification_handler_t &amp;_handler)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::service_instance_range</name>
    <filename>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</filename>
    <member kind="variable">
      <type>service_t</type>
      <name>first_service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a0c5d9f1f6ab2f5482144145b5b1383d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>last_service_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a5531f4538bce8d785f3182ab2bd49407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>first_instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a82bc714521fde3b2d740b6a1e1287c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>last_instance_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1service__instance__range.html</anchorfile>
      <anchor>a3c55980861622299a5b27213d26c94f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::service_tag</name>
    <filename>structnexus_1_1quic_1_1detail_1_1service__tag.html</filename>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::serviceentry_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</filename>
    <base>vsomeip_v3::sd::entry_impl</base>
    <member kind="function">
      <type></type>
      <name>serviceentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a16ec0e7f08668d248a00ea393d3b8953</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~serviceentry_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a6289264b8088b6d39807c83b5f17f5cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>minor_version_t</type>
      <name>get_minor_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a3c9e3d6077f26543bf6e0d4ac447d210</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minor_version</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a07d68b403d63e96396d63f8b86a03c20</anchor>
      <arglist>(minor_version_t _version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a8d196bcc921a910d87e775c21b428262</anchor>
      <arglist>(vsomeip_v3::serializer *_to) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1serviceentry__impl.html</anchorfile>
      <anchor>a8353bcdf69aba054b38d8fda71119d1f</anchor>
      <arglist>(vsomeip_v3::deserializer *_from)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::serviceinfo</name>
    <filename>classvsomeip__v3_1_1serviceinfo.html</filename>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>serviceinfo</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a57ca76a31264d12c4eda081a06e8ea3d</anchor>
      <arglist>(service_t _service, instance_t _instance, major_version_t _major, minor_version_t _minor, ttl_t _ttl, bool _is_local)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>serviceinfo</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>aba7e47e72d69e23f5a4224f2b54fa66e</anchor>
      <arglist>(const serviceinfo &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT</type>
      <name>~serviceinfo</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3d1bc511e81bfba3f5dcd484ba7bfcf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a7f3b4bbaa76172e49ba6389411be02af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a0a39ffa0160f51894943e8d2eb59a048</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a0b921bc73b066307702e1b031c4dacaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT minor_version_t</type>
      <name>get_minor</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>af8a38d81b440765ec184c2c6005933da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3ea17bfc6476922f187add595c5ab83d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>acc0b7519eb3037cec4cd7b5fd3734552</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::chrono::milliseconds</type>
      <name>get_precise_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a04c1f52dd8f4c4b3f6581c629009d087</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_precise_ttl</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a4e994c12ffcdd95bf9222feea2f98555</anchor>
      <arglist>(std::chrono::milliseconds _precise_ttl)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT std::shared_ptr&lt; endpoint &gt;</type>
      <name>get_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>ae3cb0d6adc7bbd095904edea64628115</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3dcb87c76950255e9b0683fcb5e1467a</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>add_client</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a7a2fb8d641e945913895152a44159f69</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>aad493151143264b194a788177f36a72d</anchor>
      <arglist>(client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT uint32_t</type>
      <name>get_requesters_size</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>abdd61b1743446afd3edacc66e885fedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a467e3a0b0ad8a8240d80899bcf40570e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_in_mainphase</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a3d973c01e1318e6cf47ae68d464daf55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_is_in_mainphase</name>
      <anchorfile>classvsomeip__v3_1_1serviceinfo.html</anchorfile>
      <anchor>a0ca393e00baa0aae94c7163f566aba83</anchor>
      <arglist>(bool _in_mainphase)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::settings</name>
    <filename>structnexus_1_1quic_1_1settings.html</filename>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>handshake_timeout</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>ae965919d8d9a76c05310e50fc273999a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>idle_timeout</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>af5462c31a09137454aa7d4539e88f1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_streams_per_connection</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>a6063d422d636ed226a7e6d67f8366109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>connection_flow_control_window</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>a29f6d0e25dac8b4ae86f75bdc2b1e38f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>incoming_stream_flow_control_window</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>a4559fd51ac395e027a688a4953482f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>outgoing_stream_flow_control_window</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>ae25d57d1c4ae15813f78537b4592971b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_client_settings</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>a76139aca1d629926fe9e7a55b91b08f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_server_settings</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>a0f63702abde3ac305275816aa2d2b24e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_client_settings</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>ac60c53a49232f042feeeee0d6d172b19</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_server_settings</name>
      <anchorfile>structnexus_1_1quic_1_1settings.html</anchorfile>
      <anchor>af416b8d618d459441fcaeb917b381e28</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::receiving_stream_state::shutdown</name>
    <filename>structnexus_1_1quic_1_1detail_1_1receiving__stream__state_1_1shutdown.html</filename>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::sending_stream_state::shutdown</name>
    <filename>structnexus_1_1quic_1_1detail_1_1sending__stream__state_1_1shutdown.html</filename>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::simple_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1simple__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1simple__command.html</anchorfile>
      <anchor>a1fdc00e88def559479c450596abae1ad</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1simple__command.html</anchorfile>
      <anchor>a07091d99f1b2b5631d2eb82749d86c7f</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>simple_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1simple__command.html</anchorfile>
      <anchor>abb6538ff6738e1512169199e7839301b</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>nexus::quic::detail::sockaddr_union</name>
    <filename>unionnexus_1_1quic_1_1detail_1_1sockaddr__union.html</filename>
    <member kind="variable">
      <type>sockaddr_storage</type>
      <name>storage</name>
      <anchorfile>unionnexus_1_1quic_1_1detail_1_1sockaddr__union.html</anchorfile>
      <anchor>a0f76e553a0626df90bf328489b6f694f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sockaddr</type>
      <name>addr</name>
      <anchorfile>unionnexus_1_1quic_1_1detail_1_1sockaddr__union.html</anchorfile>
      <anchor>a427bfb3b7f10bbb726375376b920d3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sockaddr_in</type>
      <name>addr4</name>
      <anchorfile>unionnexus_1_1quic_1_1detail_1_1sockaddr__union.html</anchorfile>
      <anchor>abcdf0f9309b672ab5a7e994350c97456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sockaddr_in6</type>
      <name>addr6</name>
      <anchorfile>unionnexus_1_1quic_1_1detail_1_1sockaddr__union.html</anchorfile>
      <anchor>a366ac9eb621fd6e7ef297326cb013dcf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::socket_acceptor_service_ext</name>
    <filename>classboost_1_1asio_1_1socket__acceptor__service__ext.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>adb7924a4e558c86d7e0f38ead8c8948c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>protocol_type::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a4991b3de9b53d8680c36c5f391291f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::implementation_type</type>
      <name>implementation_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a9a10aef47a9bff9fba21d8803bf79824</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a4c0362aadbe00e428a96aeea839599fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a6e17b53110489e266f31b100830de676</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>socket_acceptor_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a47678a72e0ee60f39104457451751a6d</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a4c54df78e38b1d610ef0d91fbf42d8c3</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>aa0ca58f285aaf0ee5c86246167edadb1</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a121cb0bea1c267731fa329d238b404e8</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>abe567cfc7628fa0cf139b66d4a68a143</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_acceptor, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a244f0e9839a65ea45362041ee2e03bcd</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a3b1ec44f4f035622dffe668b6e09b476</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>aa656a0950040f52755e1c82ac1577d49</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>listen</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a58349c7f97fa911c167b1a3886948f4e</anchor>
      <arglist>(implementation_type &amp;impl, int backlog, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a0884436cbfc6ba7e6269187788e5c6ae</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a7117a2cf6ebbe2142fc53c9a778e7711</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>abca20d5bc2f6ce0270f53f30a554a61f</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a3a9aeb41ecd6797fa7acd7086499f83e</anchor>
      <arglist>(implementation_type &amp;impl, const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a8ba8817714b12eddd1b4b5bf6bb9df72</anchor>
      <arglist>(const implementation_type &amp;impl, GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a2e7fd2497ec13c02ddac7528cb52022d</anchor>
      <arglist>(implementation_type &amp;impl, IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a7f262535980b7b2352f962176874bfeb</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a7420f37cf00113b5386f8b8f9d5fd67d</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a23a324701d24b6cfa0740c39f18e9dc6</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>af4bd05169a27cc087c973ea75d20f557</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>af30b3118eba18953309460eced44eb83</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>accept</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a426e39f27fb0f9819363f78a089c60bb</anchor>
      <arglist>(implementation_type &amp;impl, basic_socket&lt; Protocol1, SocketService &gt; &amp;peer, endpoint_type *peer_endpoint, boost::system::error_code &amp;ec, typename enable_if&lt; is_convertible&lt; Protocol, Protocol1 &gt;::value &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>a343ae6caf1ed89169b3dacce4ba921c1</anchor>
      <arglist>(AcceptHandler, void(boost::system::error_code)) async_accept(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>basic_socket&lt; Protocol1, SocketService &gt; endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>aa991dc914208293c20aa9217cec3bc63</anchor>
      <arglist>(AcceptHandler) handler</arglist>
    </member>
    <member kind="variable">
      <type>basic_socket&lt; Protocol1, SocketService &gt; &amp;</type>
      <name>peer</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>ae173d459a7988d1722d9ac9feae44846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>basic_socket&lt; Protocol1, SocketService &gt; endpoint_type *</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1socket__acceptor__service__ext.html</anchorfile>
      <anchor>adc2f1118b1430c41e74e4f8d91ac11a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::socket_impl</name>
    <filename>structnexus_1_1quic_1_1detail_1_1socket__impl.html</filename>
    <member kind="typedef">
      <type>boost::asio::any_io_executor</type>
      <name>executor_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a69a20f758a2b9d9f3d9f5c9bf9e54a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>socket_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>af83e5fc4d4ec3cfcaa0e49f9ccc9b60b</anchor>
      <arglist>(engine_impl &amp;engine, udp::socket &amp;&amp;socket, ssl::context &amp;ssl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>socket_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a001d55196bc4c6f8a5f51afa94559c44</anchor>
      <arglist>(engine_impl &amp;engine, const udp::endpoint &amp;endpoint, bool is_server, ssl::context &amp;ssl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~socket_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a77993ce68f1c4be55ce6d2518e13a97d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a17ff52fab13c3852195d4d9448a231c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>local_endpoint</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a16da938f3f2b0a3a572f0fe75b597a9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listen</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>adda30a171b4af3ace9efa69357a358d3</anchor>
      <arglist>(int backlog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>aaeac32c73d81e186a9180dfc192dba98</anchor>
      <arglist>(connection_impl &amp;c, const udp::endpoint &amp;endpoint, const char *hostname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a2de0b05e7eccf9f40b8e3973f443e74c</anchor>
      <arglist>(connection_impl &amp;c, lsquic_conn *conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a0d9ed656b9874595f1e006e394cad1b3</anchor>
      <arglist>(connection_impl &amp;c, accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>connection_context *</type>
      <name>on_accept</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>abd51672e60c631526329aae05315c496</anchor>
      <arglist>(lsquic_conn *conn)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_accept</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a608f0d1b8d8989c40b0ae1762fb60425</anchor>
      <arglist>(Connection &amp;conn, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a9fe8a8db128e1321004c7a7c2277c58a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abort_connections</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>ab27de0cda5168ea70a2bef14831cb285</anchor>
      <arglist>(error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_recv</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a9a301f48c451f0319ea4c058458c6171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_readable</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a725740650a5baa048b918de63410890d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_writeable</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a805175aecfead702f1b40e73b0d1f8b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const lsquic_out_spec *</type>
      <name>send_packets</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a364f2727cd9554ebe75223efdc581bd7</anchor>
      <arglist>(const lsquic_out_spec *begin, const lsquic_out_spec *end, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>recv_packet</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a4320010ebdaf04787db1310bbee2a030</anchor>
      <arglist>(iovec iov, udp::endpoint &amp;peer, sockaddr_union &amp;self, int &amp;ecn, error_code &amp;ec)</arglist>
    </member>
    <member kind="variable">
      <type>engine_impl &amp;</type>
      <name>engine</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a55aa8c4e2279c2f32bf51e060801294d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>udp::socket</type>
      <name>socket</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a8c89595be5340eec90c278a179dd0d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ssl::context &amp;</type>
      <name>ssl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a5859e24807ca80e3a7e3ad85600b21c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>udp::endpoint</type>
      <name>local_addr</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>aedcdf6d75bace91c35391bcb0a09934a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::circular_buffer&lt; incoming_connection &gt;</type>
      <name>incoming_connections</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>ae6d3fc0d5c9b20e69ea37d60344ff297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>connection_list</type>
      <name>accepting_connections</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>aaa80449c7d3c5d7170909d095bb58a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>connection_list</type>
      <name>open_connections</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a34caf27d9fc7feeef49e9859f696be0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>receiving</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1socket__impl.html</anchorfile>
      <anchor>a4ea717415f06a37e424633de0b19fc18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::detail::socket_option</name>
    <filename>classnexus_1_1detail_1_1socket__option.html</filename>
    <templarg>Name4</templarg>
    <templarg>Name6</templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>socket_option</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>abb1524fa407737c8ebabe4f95b4a3f38</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>a7b11d9757947b88b50ed52dc7ba27d44</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>level</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>a80754609fef433e8e8ccdcee7b3ec4cf</anchor>
      <arglist>(const Protocol &amp;proto) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>name</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>a047ee2cec7e96a6f07f1782a23476c39</anchor>
      <arglist>(const Protocol &amp;proto) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr size_t</type>
      <name>size</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>aec5d7a886e01203a43cbc822f16ceb0e</anchor>
      <arglist>(const Protocol &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr void *</type>
      <name>data</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>a0b2b2a811c6ec8b246d4117ab3ce6036</anchor>
      <arglist>(const Protocol &amp;)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const void *</type>
      <name>data</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>a0b50e9ac829c287ca6c2112a8f21960e</anchor>
      <arglist>(const Protocol &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr void</type>
      <name>resize</name>
      <anchorfile>classnexus_1_1detail_1_1socket__option.html</anchorfile>
      <anchor>ab4420c55956d437c1bfeb1ec18d07e4e</anchor>
      <arglist>(Protocol &amp;, std::size_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::stop_offer_service_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1stop__offer__service__command.html</filename>
    <base>vsomeip_v3::protocol::service_command_base</base>
    <member kind="function">
      <type></type>
      <name>stop_offer_service_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1stop__offer__service__command.html</anchorfile>
      <anchor>ae6561866d062b8a7a30f110188d765be</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::h3::stream</name>
    <filename>classnexus_1_1h3_1_1stream.html</filename>
    <base>nexus::quic::stream</base>
    <member kind="function">
      <type></type>
      <name>stream</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>ad330c1f16e7e91cc4bc3b0d6a91a85b0</anchor>
      <arglist>(client_connection &amp;conn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>ab4624f88b2f8ed43aa1599e2d0c84ded</anchor>
      <arglist>(server_connection &amp;conn)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_read_headers</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>af45bfe3a00f0d9d866eaf255e33eaeb0</anchor>
      <arglist>(fields &amp;f, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_headers</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>a0d9e99d6c337338b49faf4233990e629</anchor>
      <arglist>(fields &amp;f, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_headers</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>a02341fe84d6d7b0ad7823930113cdaa2</anchor>
      <arglist>(fields &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_write_headers</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>ae108ee917a403e665f5c4e50217d9aed</anchor>
      <arglist>(const fields &amp;f, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_headers</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>af78185fbd2c85d771a1b797e1f13b964</anchor>
      <arglist>(const fields &amp;f, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_headers</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>a8df9a3420e3718ee85ad34cb4a03385b</anchor>
      <arglist>(const fields &amp;f)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>client_connection</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>a884d374d770719700e2a4806f9273290</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>server_connection</name>
      <anchorfile>classnexus_1_1h3_1_1stream.html</anchorfile>
      <anchor>a270a6e9922976c6ce43de74425c9cd52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nexus::quic::stream</name>
    <filename>classnexus_1_1quic_1_1stream.html</filename>
    <member kind="typedef">
      <type>detail::stream_impl::executor_type</type>
      <name>executor_type</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>adb324755c419a7629eadc3eaecb425bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ae5046d21da017a1294cce52cddc3c486</anchor>
      <arglist>(connection &amp;conn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~stream</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a60e5740c05db32076c96117307dd7a86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>aab4325e0208ea8fe5f66546486ba2dfb</anchor>
      <arglist>(const stream &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>stream &amp;</type>
      <name>operator=</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a0d0d908cc06ff250b855058421001b43</anchor>
      <arglist>(const stream &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ac2a4186313295eba3570a3f3b748933d</anchor>
      <arglist>(stream &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>stream &amp;</type>
      <name>operator=</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ae5733b8562db280c1d72f7ce1d0fb3f7</anchor>
      <arglist>(stream &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a99da04e6125a81a62515db44d3f7ef1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>aa45d81c0048e0889da7881a880f6b8ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>stream_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a16fc2470551f9bcd4c552df490b55e79</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>stream_id</type>
      <name>id</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a022b8b74c01af6de4476ef3cc3515243</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_read_some</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>af7853806fe85440976e0be15858a622f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>read_some</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ad0bbab1f0003a7d4b4b01804bb70fe4f</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>read_some</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a99a200434a7e9e0fe6fa97706f1f1f5b</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_write_some</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ab162147edeb94612bb4fee8eb346fe84</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>write_some</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a3e15251bc0dae26eb071ca767e5da002</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>write_some</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a4690113a33a483a7b147119216a1ba37</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>aafe8afbda40ac96653d4da92a5bcc745</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a072931593deae276645944bddc3a5832</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>aef1e003616a961e0c60ff80ed1b67cac</anchor>
      <arglist>(int how, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ad238ef4dacfd3074fcbae6a4109788f8</anchor>
      <arglist>(int how)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_close</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a6319d8ab5a8c1fc0c976333fe58964ef</anchor>
      <arglist>(CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ac4a79ff5685d946a9a6e423ce695c9a6</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>a07ff93f517e5d0baa5f6e0ff25128feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ac3deb3777ddf26e824a42b0f016821c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>stream</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>ad5b0adac029e8b9750c9163dbe1a2437</anchor>
      <arglist>(detail::connection_impl &amp;impl)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>detail::stream_impl</type>
      <name>impl</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>adc734611f38d719dd9224837f1381aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>connection</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>adb115488bb4890f7fc705ee527ad71e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>detail::connection_impl</name>
      <anchorfile>classnexus_1_1quic_1_1stream.html</anchorfile>
      <anchor>adf7e6145927dadbae2b58af8877cface</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_accept_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__accept__operation.html</filename>
    <base>operation&lt; error_code &gt;</base>
    <member kind="function">
      <type></type>
      <name>stream_accept_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__accept__operation.html</anchorfile>
      <anchor>aadf81af6e3de2619be24355e6271a200</anchor>
      <arglist>(complete_fn complete, stream_impl &amp;stream) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>stream_impl &amp;</type>
      <name>stream</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__accept__operation.html</anchorfile>
      <anchor>aa1535c9ab3a38fdb35879baeef6bef1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_close_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__close__operation.html</filename>
    <base>operation&lt; error_code &gt;</base>
    <member kind="function">
      <type></type>
      <name>stream_close_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__close__operation.html</anchorfile>
      <anchor>a5e791f5f260ef6a9b3ac3a7f45553a8d</anchor>
      <arglist>(complete_fn complete) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_connect_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__connect__operation.html</filename>
    <base>operation&lt; error_code &gt;</base>
    <member kind="function">
      <type></type>
      <name>stream_connect_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__connect__operation.html</anchorfile>
      <anchor>af7b16b597a46e8885173029f9fcb7a10</anchor>
      <arglist>(complete_fn complete, stream_impl &amp;stream) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>stream_impl &amp;</type>
      <name>stream</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__connect__operation.html</anchorfile>
      <anchor>a0fe73b982e028d106393790dd0d3d413</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_data_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__data__operation.html</filename>
    <base>operation&lt; error_code, size_t &gt;</base>
    <member kind="function">
      <type></type>
      <name>stream_data_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__data__operation.html</anchorfile>
      <anchor>a0a2a5fdb40f87810305ce486e555230e</anchor>
      <arglist>(complete_fn complete) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>iovec</type>
      <name>iovs</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__data__operation.html</anchorfile>
      <anchor>a4e4141f665702a3d4bfc18146b7ea14a</anchor>
      <arglist>[max_iovs]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>num_iovs</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__data__operation.html</anchorfile>
      <anchor>a923ae04429fe0bf61fcdf8daa6f4dbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bytes_transferred</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__data__operation.html</anchorfile>
      <anchor>ac0ad99cab73856d38177d355e10e0855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr uint16_t</type>
      <name>max_iovs</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__data__operation.html</anchorfile>
      <anchor>ab9341fc8e0e76ea66e9e1ea586e610e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_factory</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__factory.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Stream</type>
      <name>create</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__factory.html</anchorfile>
      <anchor>aefb8903f189582d81e7a617fc6b661e7</anchor>
      <arglist>(std::unique_ptr&lt; stream_impl &gt; s)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_header_read_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__header__read__operation.html</filename>
    <base>operation&lt; error_code &gt;</base>
    <member kind="function">
      <type></type>
      <name>stream_header_read_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__header__read__operation.html</anchorfile>
      <anchor>a2c5cd3a8f6f4d5593374eb3e5f36716b</anchor>
      <arglist>(complete_fn complete, h3::fields &amp;fields) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>h3::fields &amp;</type>
      <name>fields</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__header__read__operation.html</anchorfile>
      <anchor>a9b03850313e4226aa24f328bfb029299</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_header_write_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__header__write__operation.html</filename>
    <base>operation&lt; error_code &gt;</base>
    <member kind="function">
      <type></type>
      <name>stream_header_write_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__header__write__operation.html</anchorfile>
      <anchor>a1c10d08f4ea266f0e864e8eb4c4722c2</anchor>
      <arglist>(complete_fn complete, const h3::fields &amp;fields) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>const h3::fields &amp;</type>
      <name>fields</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__header__write__operation.html</anchorfile>
      <anchor>adc0404e7db128e2bdb07062e763cc4f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_impl</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__impl.html</filename>
    <member kind="typedef">
      <type>boost::asio::any_io_executor</type>
      <name>executor_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>accc28e0a8e11c9d5897a66b3aa758529</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a92ffdeb7a0d4ec20a7602e5e441d8a33</anchor>
      <arglist>(connection_impl &amp;conn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~stream_impl</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>ad905e2bd1fe07d646cf29148bf64ba4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>service_shutdown</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a8ecbb84d6b113f5301f110f30a8d860a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>executor_type</type>
      <name>get_executor</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>ac27798c72822a19ce37d037a0f267de9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>af20bb2bc16d293f978e374b071060e3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>stream_id</type>
      <name>id</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a9752ad8b21b32f33ef1224569979a579</anchor>
      <arglist>(error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_headers</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a7f7902fa7f5933d65e598d87cbe2125b</anchor>
      <arglist>(stream_header_read_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_read_headers</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>adf5e212687e5929ce4395b648581bfd9</anchor>
      <arglist>(h3::fields &amp;fields, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_some</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a5e8bc1b6273b14cbc37bab6ca4d12d6b</anchor>
      <arglist>(stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a2ae06bc8cd364e25c5e642cc387a715e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_read_some</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a7b297cf0e071c4bb2d6b906cf6d708f5</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if_t&lt; boost::asio::is_mutable_buffer_sequence&lt; MutableBufferSequence &gt;::value, size_t &gt;</type>
      <name>read_some</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>acf6496b681a7ae81a50e2782a30caa3b</anchor>
      <arglist>(const MutableBufferSequence &amp;buffers, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_headers</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>acf581f3cf018733f5de576e9d1e2cc6c</anchor>
      <arglist>(stream_header_write_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_write_headers</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a155a6fabf3485f9918b54edfb4ae3569</anchor>
      <arglist>(const h3::fields &amp;fields, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_some</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>aa0c84f0e93c087b115b029f2cf13b491</anchor>
      <arglist>(stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a0d270eba51a1def34e4784c1aae02578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_write_some</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a70bebd19d8ccc089c4025a3ef1ea79a9</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if_t&lt; boost::asio::is_const_buffer_sequence&lt; ConstBufferSequence &gt;::value, size_t &gt;</type>
      <name>write_some</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a66ea3fd69940d33c44a5dd4f00aec74a</anchor>
      <arglist>(const ConstBufferSequence &amp;buffers, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a16b50496122ca7297ff84fc5c38034e8</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a68a372b7fc4997d46db60e7cb164fa2f</anchor>
      <arglist>(int how, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a00b17fda0fe689c694735982a51acb98</anchor>
      <arglist>(stream_close_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a7d22d33c8fd876ede1f019e68cdd9667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>decltype(auto)</type>
      <name>async_close</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>ad15d8ba653cbe45343ecbdb866601ae7</anchor>
      <arglist>(CompletionToken &amp;&amp;token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>a037c57652642e59affbbbf8d617c0536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init_op</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>adf79d5f4fcdbe319232f9ef3bce3bdfa</anchor>
      <arglist>(const BufferSequence &amp;buffers, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="variable">
      <type>engine_impl &amp;</type>
      <name>engine</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>acb288fa4dfe6f984527f5c23d8e08406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>service&lt; stream_impl &gt; &amp;</type>
      <name>svc</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>adde82f6b5fc129d8f9b7b66f80a3add7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>connection_impl &amp;</type>
      <name>conn</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>ae1c5d2b31dfddaf5b543e83436df9899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>stream_state::variant</type>
      <name>state</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__impl.html</anchorfile>
      <anchor>ae8575205278483498a85dec5ffd8202a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::stream_open_handler</name>
    <filename>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>boost::asio::associated_allocator_t&lt; Handler &gt;</type>
      <name>allocator_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</anchorfile>
      <anchor>ac65a81f262d12035ef3fe2645c9c75dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream_open_handler</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</anchorfile>
      <anchor>ae1fdef9f071bea3632be6d885cc5b990</anchor>
      <arglist>(Handler &amp;&amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</anchorfile>
      <anchor>a790515835c5f8da22f30cfbab036f23b</anchor>
      <arglist>(error_code ec, std::unique_ptr&lt; stream_impl &gt; s) &amp;</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</anchorfile>
      <anchor>a3e79d92fcf0233bae6fed186582c7d30</anchor>
      <arglist>(error_code ec, std::unique_ptr&lt; stream_impl &gt; s) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>allocator_type</type>
      <name>get_allocator</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</anchorfile>
      <anchor>a9acefb5a6a8cfa9b04907ab3fc58d3fd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Handler</type>
      <name>handler</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1stream__open__handler.html</anchorfile>
      <anchor>abd72701f9f92399f5a1860f0bb57db02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::stream_socket_service_ext</name>
    <filename>classboost_1_1asio_1_1stream__socket__service__ext.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Protocol</type>
      <name>protocol_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>afc8a574ad20f1afdc740c566df045e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Protocol::endpoint</type>
      <name>endpoint_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a3216942fe3d388d8627a7d501ab95163</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::implementation_type</type>
      <name>implementation_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>adf670bfa862f470892d810bac861fd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a1ced2048c97408e667f14434ed0924aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>service_impl_type::native_handle_type</type>
      <name>native_handle_type</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a74b24071b41f2b55eabbdaae3eb41f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>stream_socket_service_ext</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae57d271e3cdff8d71fe5b48dec07ac53</anchor>
      <arglist>(boost::asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ada87cefcb04189f6567e7f4dca79dd2f</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a1b77e30042446d11e6ffc86c862a497d</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>open</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a7bdcb752bf7c1fc77459861b7403daa3</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>assign</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a43a6e071a13df41480405c3959047fe4</anchor>
      <arglist>(implementation_type &amp;impl, const protocol_type &amp;protocol, const native_handle_type &amp;native_socket, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a3f07f3eff5f28cb39910d3b7d86cc912</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>close</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a63e17e347217c02ba24c4955879a96d4</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>native_type</type>
      <name>native</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>af84a7085f6496475127b9a2ce1dc8f70</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>native_handle_type</type>
      <name>native_handle</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>aff5f656eda199177c5d67a0aaf7f60ee</anchor>
      <arglist>(implementation_type &amp;impl)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>cancel</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a99626f76452d737b05a9c8a1429fcf3f</anchor>
      <arglist>(implementation_type &amp;impl, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>at_mark</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a3427bc6d7355bae57c469f7ea5f987a6</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>available</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>acba882fccb894b3a72ff732b0e702137</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>bind</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ac38b28a4146b4dc9c48c91b6768d8cdf</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>connect</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a93551bc3cd874bab650b49f561cce0ce</anchor>
      <arglist>(implementation_type &amp;impl, const endpoint_type &amp;peer_endpoint, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a5f8e812de7413a662ba8d92779c83cf6</anchor>
      <arglist>(ConnectHandler, void(boost::system::error_code)) async_connect(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const endpoint_type</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a8d9eb341a9d0c18c69f503dd7c5ed079</anchor>
      <arglist>(ConnectHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>set_option</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae7e41b5e5ec66ddc8012a0fdf01378c5</anchor>
      <arglist>(implementation_type &amp;impl, const SettableSocketOption &amp;option, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>get_option</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a490c5efc2bec8ea9443bc3e27e714970</anchor>
      <arglist>(const implementation_type &amp;impl, GettableSocketOption &amp;option, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>io_control</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ab1fbe8a5410ab3234586afb016f13c62</anchor>
      <arglist>(implementation_type &amp;impl, IoControlCommand &amp;command, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ad8e3ef2c291c3cf25d3c971cfd3afeb4</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae6f7bdaca222f066e392e3458748c204</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a2fd9a4ed91757632d5a0aeac2517e14e</anchor>
      <arglist>(const implementation_type &amp;impl) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>native_non_blocking</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>aabf61eea72c9b4bf0cd11223824be9da</anchor>
      <arglist>(implementation_type &amp;impl, bool mode, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>local_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>af8d595463faf803e2b72d575e68d1a72</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>endpoint_type</type>
      <name>remote_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a70d96ebcdfe495f70b08cd888a25fe43</anchor>
      <arglist>(const implementation_type &amp;impl, boost::system::error_code &amp;ec) const</arglist>
    </member>
    <member kind="function">
      <type>boost::system::error_code</type>
      <name>shutdown</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>acceeb24ecb87e1d03c12b5fb78aaebf2</anchor>
      <arglist>(implementation_type &amp;impl, socket_base::shutdown_type what, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>send</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a2133eaabfab7ce3bd662e17657f3b401</anchor>
      <arglist>(implementation_type &amp;impl, const ConstBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a4b3c97bf2f80350c61b62f85c136f4c7</anchor>
      <arglist>(WriteHandler, void(boost::system::error_code, std::size_t)) async_send(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>af7d4e23e8b279bc22a6834d379c46b01</anchor>
      <arglist>(WriteHandler) handler)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>receive</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a6e4ccdf96eab0912a63c978f35c856ff</anchor>
      <arglist>(implementation_type &amp;impl, const MutableBufferSequence &amp;buffers, socket_base::message_flags flags, boost::system::error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BOOST_ASIO_INITFN_RESULT_TYPE</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a8b50735ed54aa292cffb2b8c79a294c7</anchor>
      <arglist>(ReadHandler, void(boost::system::error_code, std::size_t, std::uint32_t, std::uint32_t)) async_receive(implementation_type &amp;impl</arglist>
    </member>
    <member kind="function">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>BOOST_ASIO_MOVE_ARG</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ab7576991221df38d2a176cd1f4fde0f6</anchor>
      <arglist>(ReadHandler) handler)</arglist>
    </member>
    <member kind="variable">
      <type>const endpoint_type &amp;</type>
      <name>peer_endpoint</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae5403f7b3ccf831a8699550b228f816f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a9e54ae314a81433fab817fac428fe980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ConstBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>a0312cbdd5a73102ba9097b786f5fef96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence &amp;</type>
      <name>buffers</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ac498c45e779f22d8f1fb4f6ba36df91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const MutableBufferSequence socket_base::message_flags</type>
      <name>flags</name>
      <anchorfile>classboost_1_1asio_1_1stream__socket__service__ext.html</anchorfile>
      <anchor>ae6cf6b276c5adb97c17f3115faa27f39</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::subscribe_ack_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command.html</filename>
    <base>vsomeip_v3::protocol::subscribe_ack_command_base</base>
    <member kind="function">
      <type></type>
      <name>subscribe_ack_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command.html</anchorfile>
      <anchor>a431227178a8763ee3adbaf01d58b9793</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::subscribe_ack_command_base</name>
    <filename>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a9ba89ed3ee8ee71fb4653264f77b8c9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>ab44c4b3036f06303c7ce46ea0e4e06d1</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>aa0bf287e70862445b340054bc0a7bfcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>aaa4b73f3cac77712ffe59ff72ddf27f1</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a52104a46ab28a9426d098a9291c42285</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a71257df0b60ff913ad9168bec81ab488</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>client_t</type>
      <name>get_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a8dc558fd262a6fb8382eef9d92d1329e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_subscriber</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a1696f960a68305714dc378528ae5181e</anchor>
      <arglist>(client_t _subscriber)</arglist>
    </member>
    <member kind="function">
      <type>event_t</type>
      <name>get_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>aeb107f3bddea37433eb5beae5b667093</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a3d3b84838a0d1f5f82a7083a4cf55492</anchor>
      <arglist>(event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>pending_id_t</type>
      <name>get_pending_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a2037d922e0a172d82c0e008ce736e8f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pending_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>ac5f545b970e5605f3820b0c5a556188b</anchor>
      <arglist>(pending_id_t _pending_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>ae5c4fadc1e65c8fa34e1ebbd7b3ee3e0</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a78df1402f52789d7c36067a6cf76cf38</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>subscribe_ack_command_base</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a8f5d670aea061f1f087c1b23a40c301a</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a5d4b69914fbeb7c06cde352ab2e5acec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a4b04c88ab17f71e586b6480aa3ca14a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>eventgroup_t</type>
      <name>eventgroup_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>af3cb1f3a683e17ae51a8ea9ec930230e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>client_t</type>
      <name>subscriber_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a21276a52dc3b7383033ebba81d10356b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>event_t</type>
      <name>event_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a574737a05fa4c5b8c925fea9bf03187a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pending_id_t</type>
      <name>pending_id_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__ack__command__base.html</anchorfile>
      <anchor>a85bafb3a2642adcb9f728146de754149</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::subscribe_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1subscribe__command.html</filename>
    <base>vsomeip_v3::protocol::subscribe_command_base</base>
    <member kind="function">
      <type></type>
      <name>subscribe_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command.html</anchorfile>
      <anchor>ad42d2f3e141c18974d1ae23a0626d341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; debounce_filter_impl_t &gt;</type>
      <name>get_filter</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command.html</anchorfile>
      <anchor>aa421ccec198866a7cfb696f63e7e1d5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command.html</anchorfile>
      <anchor>ab252e92cb246f66cac32923f854df54b</anchor>
      <arglist>(const std::shared_ptr&lt; debounce_filter_impl_t &gt; &amp;_filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command.html</anchorfile>
      <anchor>a854d367134a68a58c27f52d236bb83ee</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command.html</anchorfile>
      <anchor>aadeacc2fe5c1e9e69ecc0463adb28629</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::subscribe_command_base</name>
    <filename>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>afd246f29c3ac3e4e0387f5e18ff192cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a236da73b8c3f40f0dd930d7934173bbf</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a05dd532edf013a39e6abd8e96098591a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a03bf7ee563c469b3a7b9b9d767fc4174</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a8c551de693fcc7ae81a9103076e515b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a36ff6628d93b73db7208fe03ae620367</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>aaa9072536cd16f293c49b3470c50543e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a2b0dbac226aa4e66610cbaec66ff87ed</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>event_t</type>
      <name>get_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a20589d2364144d9df9ddd98f1b89391b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a187613d704da71170a816fba84c3ca94</anchor>
      <arglist>(event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>pending_id_t</type>
      <name>get_pending_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a0f90d5ad8775f29311b7b27f7e4b0549</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pending_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a8b64a4ec0e9d4571be82ad65026a81b0</anchor>
      <arglist>(pending_id_t _pending_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>af9a5c2005f4de3dfb1e0520d2d0b4c3a</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>ab2cc871eea6717c566574071b86da75c</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>subscribe_command_base</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a0734b56f486cb95e69edde1fb8004921</anchor>
      <arglist>(id_e _id)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a3ef05ddf51019c39e1fb473013e87667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a32dc3ab7640296d393bd0d625b488379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>eventgroup_t</type>
      <name>eventgroup_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a9cd37dae6e12f39d19a92ff6898a466c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>major_version_t</type>
      <name>major_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>a3be7aa478c71ac09f1e17fa0191e7576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>event_t</type>
      <name>event_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>ac30c8a0d7191568f17e2c5056c81f3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>pending_id_t</type>
      <name>pending_id_</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__command__base.html</anchorfile>
      <anchor>ac9829f7a8b8609bd674a4e2738147319</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::subscribe_nack_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1subscribe__nack__command.html</filename>
    <base>vsomeip_v3::protocol::subscribe_ack_command_base</base>
    <member kind="function">
      <type></type>
      <name>subscribe_nack_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1subscribe__nack__command.html</anchorfile>
      <anchor>ac3467d4af0737c5249a899ed79349473</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::subscription</name>
    <filename>classvsomeip__v3_1_1sd_1_1subscription.html</filename>
    <member kind="function">
      <type></type>
      <name>subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a8a900d1580de759ca091a4b4303df7c1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~subscription</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ad3234da24b87e162457bb013fd2f6962</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>major_version_t</type>
      <name>get_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a352629f23e7980c797b4fcbc665f188e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_major</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a23ea710618796e0bd1672d10353c303c</anchor>
      <arglist>(major_version_t _major)</arglist>
    </member>
    <member kind="function">
      <type>ttl_t</type>
      <name>get_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ada5979f708f9f959d6c885b8e60f492d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ttl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a6211bedc2afb2ccfec2722950ab14b64</anchor>
      <arglist>(ttl_t _ttl)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; endpoint &gt;</type>
      <name>get_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>af793a433ebc360089c52adf989e0af48</anchor>
      <arglist>(bool _reliable) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a7bd64765b8d41999576b50d9a4a846d4</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint &gt; &amp;_endpoint, bool _reliable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selective</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a67538f25d642a74cacec0624468328c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selective</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a4946ae681e2880aed942eea348fdc4a8</anchor>
      <arglist>(const bool _is_selective)</arglist>
    </member>
    <member kind="function">
      <type>subscription_state_e</type>
      <name>get_state</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a63009b96773ab04a977561684b67bce8</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ad655be24aa19248c58a1d1874113bc34</anchor>
      <arglist>(const client_t _client, subscription_state_e _state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_tcp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>afd217a61e57d73affa1963c6c7ed3a1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tcp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ab7ce9372949c2c8196470eb4bb5500d6</anchor>
      <arglist>(bool _is_established)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_udp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a638c33b5383a0c6962be37ee073094b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_udp_connection_established</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>acc2b4cc46702cd702f4c9d71dd6e9c60</anchor>
      <arglist>(bool _is_established)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>acd6d97684304f3944a37c1094573b1c9</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>adbb62ed4230bf16c6090799c918cd061</anchor>
      <arglist>(const client_t _client)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; client_t &gt;</type>
      <name>get_clients</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a39934a4bedff6be37b55b8ffd269dd02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a685c97e05226fb7dfc41726caabe3c36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_client</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a63cedeac838f90487202af187b37f3ff</anchor>
      <arglist>(const client_t _client) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>ab814570adac141d9aad863aa80a7a37f</anchor>
      <arglist>(const std::shared_ptr&lt; eventgroupinfo &gt; _info)</arglist>
    </member>
    <member kind="function">
      <type>std::weak_ptr&lt; eventgroupinfo &gt;</type>
      <name>get_eventgroupinfo</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1subscription.html</anchorfile>
      <anchor>a6135467079ca445eb4fef20ee53c3aa4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::routing_manager_base::subscription_data_t</name>
    <filename>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>aaa303bdf915d6782de6223faeae8d4d5</anchor>
      <arglist>(const subscription_data_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a39b2d862e635a7aeee22034291877082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a0002e58927a8c5798fe6bb309d4e646c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>eventgroup_t</type>
      <name>eventgroup_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a53e122b424bd63d14592eae0e0ae8bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>major_version_t</type>
      <name>major_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a134e158aa8978cddbbfa558e5d4136be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>event_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>afd96431c1b077955aa3f9f1854bf9896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; debounce_filter_impl_t &gt;</type>
      <name>filter_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>a7ac6968f725b82aee9896c783474f9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_sec_client_t</type>
      <name>sec_client_</name>
      <anchorfile>structvsomeip__v3_1_1routing__manager__base_1_1subscription__data__t.html</anchorfile>
      <anchor>ab387a9d9cf314b9b7595ffe1405d247b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::eventgroupinfo::subscription_t</name>
    <filename>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</anchorfile>
      <anchor>a7155bae42e7fc0008a77af0459115f79</anchor>
      <arglist>(const subscription_t &amp;_other) const</arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; remote_subscription &gt;</type>
      <name>subscription_</name>
      <anchorfile>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</anchorfile>
      <anchor>aeafa8fe5637ab1cb11d40a84793ac14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>expiration_</name>
      <anchorfile>structvsomeip__v3_1_1eventgroupinfo_1_1subscription__t.html</anchorfile>
      <anchor>a760b445af42ce17dca268440f449ba7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::suppress_t</name>
    <filename>structvsomeip__v3_1_1cfg_1_1suppress__t.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1suppress__t.html</anchorfile>
      <anchor>a0e986ee4ae3dcea90d2098ed9b213758</anchor>
      <arglist>(const suppress_t &amp;entry_) const</arglist>
    </member>
    <member kind="variable">
      <type>service_t</type>
      <name>service</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1suppress__t.html</anchorfile>
      <anchor>abbfabcd0d5845771c7af79e4bd076d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>instance_t</type>
      <name>instance</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1suppress__t.html</anchorfile>
      <anchor>a008080667cc1a4763aace01ceae6c54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>event_t</type>
      <name>event</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1suppress__t.html</anchorfile>
      <anchor>a5d52452d10a1995701a09b2d9428d58f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::suspend_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1suspend__command.html</filename>
    <base>vsomeip_v3::protocol::simple_command</base>
    <member kind="function">
      <type></type>
      <name>suspend_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1suspend__command.html</anchorfile>
      <anchor>a2c08aefbb09d5b0ebfdb457b8698c3b2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nexus::quic::detail::sync_operation</name>
    <filename>structnexus_1_1quic_1_1detail_1_1sync__operation.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename Operation::operation_type</type>
      <name>operation_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>a244615ab4867bbcc878568af6f70ed24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename Operation::tuple_type</type>
      <name>tuple_type</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>aa9d9060f1e098734371840c59276c31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sync_operation</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>a7721a3039134209a97a27fff0280d8ae</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>a9e83745cb4dc7d937c3fbc8407c4c353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>do_complete</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>af49497f905dd12dd851c52efa724e08f</anchor>
      <arglist>(completion_type type, operation_type *op, tuple_type &amp;&amp;result)</arglist>
    </member>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mutex</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>afef359e74e56597f4877dc405f2a5d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::condition_variable</type>
      <name>cond</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>a659f889534095e6db45a897ed465bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; tuple_type &gt;</type>
      <name>result</name>
      <anchorfile>structnexus_1_1quic_1_1detail_1_1sync__operation.html</anchorfile>
      <anchor>afab8414f04891423382a51f1aa89034d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tcp_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</filename>
    <base>vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>tcp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a32a2cde7ea97073a57a43f67ca1a72c1</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~tcp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a4f1d32d3f6805b686ea574e6d4b40c21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a50565f37905b01f3b0aa5c28d9b55c3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>af9bf359d2ef03433fa6f7e2ba965c056</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a0144ca4096699969d2ccd2b8a6b9e82e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>ae43a522477cf64bc9ff3747dcc251b42</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a5745373bcfb466d8c76fb01fb6191bd2</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a64d126c4e28bfa7a1f33e9e3bd9cb6fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a04ccf159488bf084d03ce20deeb46685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a1cdacb209664afccef7963e1dd8b6e17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a1da2d5a02d9a7df0f047c55612abc826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1tcp__client__endpoint__impl.html</anchorfile>
      <anchor>a323569f0bc971eaf5c2b5fa743397acd</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_sent_msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tcp_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>tcp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a44318cd95c09a6be2b03c7f8347b4fcf</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~tcp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a586cf575258e32acc750f712cfffbaf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a2986a84c00c63e5c05a2f3f9c66e6585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a21de406cc01098a7ec74f3290defc77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a5f8f6dc427b7c23abd53cb6ec99ce560</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a1d56cbdad1aef76b4e0401fc4c0b2049</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a6fbde6ffd120036c30f363a6a14f8a01</anchor>
      <arglist>(const target_data_iterator_type _it)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>adc7cde17a4e570eea5e62c8423ca3275</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT bool</type>
      <name>is_established_to</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a932bad19d1459ae183ae3f723d9a7907</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; &amp;_endpoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>ad95d609e02bd122008df5958c0c39bd7</anchor>
      <arglist>(service_t, endpoint_type &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a808efabf9ec63120835e16583c2dbbc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a459ca2ab6d56bd65a94ae813ad459d2e</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a5d9fbf32fc3dc3ae3bf6c48ca4753644</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a4c672216e00175ee423e9fd87bb5076a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>aceec490762cd24c41fb28dbded28cf44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1tcp__server__endpoint__impl.html</anchorfile>
      <anchor>a8c9e43ba30e4acb840eb39b436dba8fa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tp::tp</name>
    <filename>classvsomeip__v3_1_1tp_1_1tp.html</filename>
    <member kind="function" static="yes">
      <type>static length_t</type>
      <name>get_offset</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a30687ed70ffcce81fd79689822030388</anchor>
      <arglist>(tp_header_t _tp_header)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>more_segments</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a103f8f8b0069120eead37ae64edc7079</anchor>
      <arglist>(tp_header_t _tp_header)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>tp_flag_is_set</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>aa6df2ae4fa5bc71900d6e2d02de27245</anchor>
      <arglist>(tp_message_type_t _msg_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tp_message_type_t</type>
      <name>tp_flag_set</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>aa97fc20ed06bc694a4d4f18c2f1559c0</anchor>
      <arglist>(message_type_e _msg_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static message_type_e</type>
      <name>tp_flag_unset</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>a8e848fffda379178d7b3d67a0faf399b</anchor>
      <arglist>(tp_message_type_t _msg_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tp_split_messages_t</type>
      <name>tp_split_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>ae67be4eeac5911d99b14c3d78e445424</anchor>
      <arglist>(const std::uint8_t *const _data, std::uint32_t _size, std::uint16_t _max_segment_length)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::uint16_t</type>
      <name>tp_max_segment_length_</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp.html</anchorfile>
      <anchor>ac8d9f79f326318f96c869ccda30951c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tp::tp_message</name>
    <filename>classvsomeip__v3_1_1tp_1_1tp__message.html</filename>
    <member kind="function">
      <type></type>
      <name>tp_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>a305f8439564880fe6f8c8fa353246c09</anchor>
      <arglist>(const byte_t *const _data, std::uint32_t _data_length, std::uint32_t _max_message_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_segment</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>ab4a34f13164a6b031c5c72107ef5e1e2</anchor>
      <arglist>(const byte_t *const _data, std::uint32_t _data_length)</arglist>
    </member>
    <member kind="function">
      <type>message_buffer_t</type>
      <name>get_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>a9cc5ec72331a2c2be7af1a679af6b2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::steady_clock::time_point</type>
      <name>get_creation_time</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__message.html</anchorfile>
      <anchor>a60b0bda9c0dbd4b27908d217b8c35970</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::tp::tp_reassembler</name>
    <filename>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</filename>
    <member kind="function">
      <type></type>
      <name>tp_reassembler</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>adbc1a379fa7b7d7671df32c1486cfc25</anchor>
      <arglist>(std::uint32_t _max_message_size, boost::asio::io_context &amp;_io)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, message_buffer_t &gt;</type>
      <name>process_tp_message</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>a1dc5c614925ac29ca57c9192e6c50c01</anchor>
      <arglist>(const byte_t *const _data, std::uint32_t _data_size, const boost::asio::ip::address &amp;_address, std::uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cleanup_unfinished_messages</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>a95d9d0ee7553d978567fc16f05a62ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1tp_1_1tp__reassembler.html</anchorfile>
      <anchor>ac53438b5db64a487fde8e364201f9f08</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::trace</name>
    <filename>structvsomeip__v3_1_1cfg_1_1trace.html</filename>
    <member kind="function">
      <type></type>
      <name>trace</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>aa58a6023476c71c20e361f8a9e8ee51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_enabled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>a9e65b10856e2bb023fefb32dfa772924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_sd_enabled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>ab04a7ae04b0c4beba5a6c3105a63a9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; trace_channel &gt; &gt;</type>
      <name>channels_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>a551a8e8f21868933850d2ee4f19782d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; trace_filter &gt; &gt;</type>
      <name>filters_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace.html</anchorfile>
      <anchor>a6e97e924be9dd358c497e2a13801c8e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::trace_channel</name>
    <filename>structvsomeip__v3_1_1cfg_1_1trace__channel.html</filename>
    <member kind="variable">
      <type>trace_channel_t</type>
      <name>id_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__channel.html</anchorfile>
      <anchor>a4940124917eda610e2b9843374a99e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__channel.html</anchorfile>
      <anchor>ae9d5700bac997573b9b3abf2ee2fed74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::trace_filter</name>
    <filename>structvsomeip__v3_1_1cfg_1_1trace__filter.html</filename>
    <member kind="function">
      <type></type>
      <name>trace_filter</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a9bc1938b80df1aad38a9f7094ffc7aaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; trace_channel_t &gt;</type>
      <name>channels_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a7d7456fe75955468bfc7819a0c4f97d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_v3::trace::filter_type_e</type>
      <name>ftype_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a4ac4c0705a2fd9c6ea8de4c80f011ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_range_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>aa289d2918afd6a7d25ae55a80c63b2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; vsomeip_v3::trace::match_t &gt;</type>
      <name>matches_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1trace__filter.html</anchorfile>
      <anchor>a8dda326129c91aa8212de4e6c4bc88a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::train</name>
    <filename>structvsomeip__v3_1_1train.html</filename>
    <member kind="function">
      <type></type>
      <name>train</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>ab7b84e34c79f364a777ec1e78eee0d52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a105dd7286f4506f61ae4f359cecede99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>message_buffer_ptr_t</type>
      <name>buffer_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>aa32ec86c42c200fd8983e61490654269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; std::pair&lt; service_t, method_t &gt; &gt;</type>
      <name>passengers_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a57d4db0692b69605f2f6ab073c8433e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>minimal_debounce_time_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>ae5998125c9530a757c9ab7eedb8b9607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::nanoseconds</type>
      <name>minimal_max_retention_time_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>a653ae1930f66d46bb191043d9f8f8412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::steady_clock::time_point</type>
      <name>departure_</name>
      <anchorfile>structvsomeip__v3_1_1train.html</anchorfile>
      <anchor>abb5cf337d122983b7316e7a6fc10a1be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::udp_client_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1udp__client__endpoint__impl.html</filename>
    <base virtualness="virtual">vsomeip_v3::client_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>udp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a4fa0795a3cfdf03c964771b08c3f9fdd</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, const endpoint_type &amp;_remote, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~udp_client_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a9f682880353afa747eaf81aa531e103e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>ace809afd856aeaa43098b45bc704dfdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>ae07ae6f260316ac2450563e9409a4bc4</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive_cbk</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a380db8c48070dd0cd4a42e56084abc5b</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_recv_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>af8179e0b0ad9599c3d28b23246eb11ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a407ee0fbda4895165fcff5ebc3d94234</anchor>
      <arglist>(port_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a0952650cb2b151b6f4c55ec0ec416e90</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a0d1554a208487110df946560af23ba02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>abe8864c3e95f5b676e4063d8c4d75cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a41e05e22dc34c69390d164b36b924d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>a3e85026c73c0845233c1da053483a992</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_cbk</name>
      <anchorfile>classvsomeip__v3_1_1udp__client__endpoint__impl.html</anchorfile>
      <anchor>ad1943a992b2abef6f4cb0c91773faa28</anchor>
      <arglist>(boost::system::error_code const &amp;_error, std::size_t _bytes, const message_buffer_ptr_t &amp;_sent_msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>boost::asio::ip::udp_ext</name>
    <filename>classboost_1_1asio_1_1ip_1_1udp__ext.html</filename>
    <member kind="typedef">
      <type>basic_endpoint&lt; udp &gt;</type>
      <name>endpoint</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>ab2464141554224d5dd911e4696103029</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_datagram_socket_ext&lt; udp &gt;</type>
      <name>socket</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adc04448b7e6bfabd24fc275bce198138</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_resolver&lt; udp &gt;</type>
      <name>resolver</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a72f3be7aa9c302bb1a865d9ba09687cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>type</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3ca070dc303b4598be23459921ca576f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocol</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a0911c9407387826470721d74480ed5b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>family</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>adfc1a7cfa79ec219f8180ff15fec0e80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v4</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a2977f05dfcac42836b688073ff08eec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static udp_ext</type>
      <name>v6</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>afe60d730a6c5e21892bd4991ae1c17cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a4537403dee46ec274e2b8c15670a0344</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classboost_1_1asio_1_1ip_1_1udp__ext.html</anchorfile>
      <anchor>a3a918561cd5040580b21660717b9804a</anchor>
      <arglist>(const udp_ext &amp;p1, const udp_ext &amp;p2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::udp_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1udp__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::server_endpoint_impl</base>
    <member kind="function">
      <type></type>
      <name>udp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>af740fcd685a52d7bebf28cce36c0175e</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_host &gt; &amp;_endpoint_host, const std::shared_ptr&lt; routing_host &gt; &amp;_routing_host, const endpoint_type &amp;_local, boost::asio::io_context &amp;_io, const std::shared_ptr&lt; configuration &gt; &amp;_configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~udp_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a658c9f106b0833f43d2c52056e16a2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>ae9cedc496ff9df0a74571fc362d91430</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>aedf77df9ef31b9a72f3d3a6bd82d303a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a0b3a0039b1abc70e80c3c5d73e0a646f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a56a80be1b3d8ef9aea3394880b14bd4c</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>aa08b61a9cd3962098db939fc71f474a3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_queued</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a5de09d4bb81628147443881b724cdebb</anchor>
      <arglist>(const target_data_iterator_type _it)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_configured_times_from_endpoint</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a397de8d0aaeafc1802fc59639c73d701</anchor>
      <arglist>(service_t _service, method_t _method, std::chrono::nanoseconds *_debouncing, std::chrono::nanoseconds *_maximum_retention) const</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>join</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>aa1f403d160d6bb5110b7be94319658bc</anchor>
      <arglist>(const std::string &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>join_unlocked</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>afd5aabdda1e74cf83cceb7d810c6efba</anchor>
      <arglist>(const std::string &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>leave</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>ab45fbc8341d9c7186ee5b46e5706b407</anchor>
      <arglist>(const std::string &amp;_address)</arglist>
    </member>
    <member kind="function">
      <type>VSOMEIP_EXPORT void</type>
      <name>set_multicast_option</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>ac28f5ec4094e387662576ee94b39bb9a</anchor>
      <arglist>(const boost::asio::ip::address &amp;_address, bool _is_join)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a3942f0e884c8ff460014b360fbb0e2d5</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a8e8de40ac209b1ecb9600d13de3f2bee</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_default_target</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>acd3bb2ba1dfc82509324a71166aa17f0</anchor>
      <arglist>(service_t _service, endpoint_type &amp;_target) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a71de81cd245a4ad5761bb2da3b0a7771</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>ac78093091c81e976b81c8ed2060ddf41</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a975051a29df525fe6a9efb720e80cd1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a77434f4aae14a308cd9f95a12d6770f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1udp__server__endpoint__impl.html</anchorfile>
      <anchor>a0ef475a981ad1f615edc863629b73a86</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::sd::unknown_option_impl</name>
    <filename>classvsomeip__v3_1_1sd_1_1unknown__option__impl.html</filename>
    <base>vsomeip_v3::sd::option_impl</base>
    <member kind="function">
      <type></type>
      <name>unknown_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1unknown__option__impl.html</anchorfile>
      <anchor>a097e9c09816dc1efe79663446e746ea1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~unknown_option_impl</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1unknown__option__impl.html</anchorfile>
      <anchor>a4ac3e4b283a135e84a315b2276d93d7c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1unknown__option__impl.html</anchorfile>
      <anchor>aa09b3e9f88bfa1144f35946ebba33737</anchor>
      <arglist>(deserializer *_from) override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; uint8_t &gt; &amp;</type>
      <name>get_payload</name>
      <anchorfile>classvsomeip__v3_1_1sd_1_1unknown__option__impl.html</anchorfile>
      <anchor>a20d3b4b9fb1df4e218538a9e397d3686</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::unregister_event_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>unregister_event_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a3ce9976b9335582e49a6009d987f14e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a6b77cfeeb4dd4a87639df21e0ba39d19</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>aa799869e16f4447fbe933d8abf29fea7</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>ab601c71d5473c45062f736250ac228d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a689853b9903c6a7fd8bdab0c3ea0ad0f</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a24170ce4b66d219c45a48df566fbd589</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a2bde961051e13b1a20776f460820192e</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>event_t</type>
      <name>get_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>aea89a3f200a2ab4f817d8b8082bb171f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>acece6b58ca7e873fe084dafd6dad7f11</anchor>
      <arglist>(event_t _event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_provided</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a4965fea9dec69d361c12e6f965497715</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_provided</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unregister__event__command.html</anchorfile>
      <anchor>a206ab0cd4d94793bc96811b53ec34d30</anchor>
      <arglist>(bool _is_provided)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::unsubscribe_ack_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>unsubscribe_ack_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a219b166bffebbe749839fe83ac45f28b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>service_t</type>
      <name>get_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>aebb617d58aec1d6bc230720aa4e31e7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_service</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a62ff9caf9d4a58587fc724757f0f3fc5</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>instance_t</type>
      <name>get_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a6fda4d83b74d704f96c355c8811ec70a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_instance</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a6927a7914f6ad7b5384419e8934cd190</anchor>
      <arglist>(instance_t _instance)</arglist>
    </member>
    <member kind="function">
      <type>eventgroup_t</type>
      <name>get_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a4b4ff0c5bb6aa5d68f21a96e3dd42cd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_eventgroup</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a42e62187c1dc4016264bdc32b9055c69</anchor>
      <arglist>(eventgroup_t _eventgroup)</arglist>
    </member>
    <member kind="function">
      <type>pending_id_t</type>
      <name>get_pending_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>af17c2008d4b86ac830f76c375318506d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pending_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a2ad63e83dc818ef9e94d646fcaa2bff7</anchor>
      <arglist>(pending_id_t _pending_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>a08a2f254e9bc9085436cde566779cc77</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__ack__command.html</anchorfile>
      <anchor>ab4ed33c4ca4eb9132ecfe5498d212f76</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::unsubscribe_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1unsubscribe__command.html</filename>
    <base>vsomeip_v3::protocol::subscribe_command_base</base>
    <member kind="function">
      <type></type>
      <name>unsubscribe_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__command.html</anchorfile>
      <anchor>a0db6736b1dbb91a6d617ded53f1ab35d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__command.html</anchorfile>
      <anchor>ab2573677f5f75e204a49347aabb72b0c</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1unsubscribe__command.html</anchorfile>
      <anchor>a6cdbcb7ba78743c0416b6ee9fb47e7d4</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::update_security_credentials_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1update__security__credentials__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>update_security_credentials_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__credentials__command.html</anchorfile>
      <anchor>a550f87b4c825ded4881dbf84a7588ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__credentials__command.html</anchorfile>
      <anchor>ab96e9b307a9b6552ae4d9fb6f3fe1c87</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__credentials__command.html</anchorfile>
      <anchor>af01f9746878b5e77060444fe287bcbf9</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::pair&lt; uid_t, gid_t &gt; &gt;</type>
      <name>get_credentials</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__credentials__command.html</anchorfile>
      <anchor>a70e341b0b2ae3000cd1578bcdcd4f70f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_credentials</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__credentials__command.html</anchorfile>
      <anchor>a30ff74bc8305a1c2fc4e7d9bdb5b1dbd</anchor>
      <arglist>(const std::set&lt; std::pair&lt; uid_t, gid_t &gt; &gt; &amp;_credentials)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::update_security_policy_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</filename>
    <base>vsomeip_v3::protocol::command</base>
    <member kind="function">
      <type></type>
      <name>update_security_policy_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>a9fcfe386044c10aa8da269d9fe8cbd2d</anchor>
      <arglist>(bool _is_internal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>a540fec886e7a1aed065b1b5bbd5f593e</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>a508505cc0a80398a809087caf5096cca</anchor>
      <arglist>(const std::vector&lt; byte_t &gt; &amp;_buffer, error_e &amp;_error)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_update_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>ac24beae45f278af24511324505c4c2a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_id</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>af028e9141f48caa253d8a7aacc2b448a</anchor>
      <arglist>(uint32_t _update_id)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; policy &gt;</type>
      <name>get_policy</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>a3b0923b80770e0d038a6db54cf2db2ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_policy</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__command.html</anchorfile>
      <anchor>a000af327d1a05e6ee75c6cbe0e2e697f</anchor>
      <arglist>(const std::shared_ptr&lt; policy &gt; &amp;_policy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::protocol::update_security_policy_response_command</name>
    <filename>classvsomeip__v3_1_1protocol_1_1update__security__policy__response__command.html</filename>
    <base>vsomeip_v3::protocol::security_policy_response_command_base</base>
    <member kind="function">
      <type></type>
      <name>update_security_policy_response_command</name>
      <anchorfile>classvsomeip__v3_1_1protocol_1_1update__security__policy__response__command.html</anchorfile>
      <anchor>a4b5d3a4e659dc8b9c8042b36c52198be</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::utility</name>
    <filename>classvsomeip__v3_1_1utility.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5e4f21b716b04633c37c0c4fe8c96d56</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a2613884f5c84d0e261c438f01cbf1538</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>af12d49bad947ba8994aee0846e6b2290</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request_no_return</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a571b03592deb39d59a03f3188d591b00</anchor>
      <arglist>(std::shared_ptr&lt; message &gt; _message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request_no_return</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a4745d62e01f0dc3eb8c7bc7c820c42d0</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_request_no_return</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a3674b573a8064e979463aee31a78771c</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_response</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aa8b01e6cbf770fcb929abbce7c7188b2</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_response</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>af1263167ea06cf74351f39194e2a7542</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_error</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a82c6b94a2e270edc9dbba266a4a95721</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_error</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aa6d92f11dbaf1858daf79f905570cc82</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_notification</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a3cbb8701c4f0049394f12a9f824ee3e9</anchor>
      <arglist>(byte_t _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_notification</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a688ad4ab6b578644d8e4834334febf04</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>get_message_size</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a644e5f9632bbf8996971497fb6858847</anchor>
      <arglist>(const byte_t *_data, size_t _size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>get_message_size</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5b52df00127b85190cb55a550d56f45a</anchor>
      <arglist>(std::vector&lt; byte_t &gt; &amp;_data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>get_payload_size</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aee8c8c86df32a4f008bc141e1d2aa10c</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_routing_manager</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aad3f99db77c504aa4f731ac5674b594e</anchor>
      <arglist>(const std::string &amp;_network)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove_lockfile</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>ad44421ea6f6feb88df9d55519eff1406</anchor>
      <arglist>(const std::string &amp;_network)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>exists</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a88b024ac5bb386edbfdd8eced59eb08f</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool VSOMEIP_IMPORT_EXPORT</type>
      <name>is_file</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a92950b21a6ee33e1d5d233d9a1e6d209</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool VSOMEIP_IMPORT_EXPORT</type>
      <name>is_folder</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a5696767d1190da0277d5d37db5025081</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>get_base_path</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a233176bbc1ea693f877f85e292b16c87</anchor>
      <arglist>(const std::string &amp;_network)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static client_t</type>
      <name>request_client_id</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a01450faddb588ee9b684d2e425f791e9</anchor>
      <arglist>(const std::shared_ptr&lt; configuration &gt; &amp;_config, const std::string &amp;_name, client_t _client)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>release_client_id</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a50f4ab48f0429e5c05c9891b10af0f4d</anchor>
      <arglist>(const std::string &amp;_network, client_t _client)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; client_t &gt;</type>
      <name>get_used_client_ids</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>ac2c39f3033de3099a3e87b4f91bd804d</anchor>
      <arglist>(const std::string &amp;_network)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reset_client_ids</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>ab5244bae34457dbc4d02bf3ea560754f</anchor>
      <arglist>(const std::string &amp;_network)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_valid_message_type</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a40dc8dd32139f7000295e5b98c955216</anchor>
      <arglist>(message_type_e _type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>is_valid_return_code</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>a2bb3b6e3311628e75ccf85535e8abaf5</anchor>
      <arglist>(return_code_e _code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compare</name>
      <anchorfile>classvsomeip__v3_1_1utility.html</anchorfile>
      <anchor>aeecf32989febd2deb799722c036c5472</anchor>
      <arglist>(const vsomeip_sec_client_t &amp;_lhs, const vsomeip_sec_client_t &amp;_rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>vsomeip_v3::virtual_server_endpoint_impl</name>
    <filename>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</filename>
    <base>vsomeip_v3::endpoint</base>
    <member kind="function">
      <type></type>
      <name>virtual_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ad63a678d61016fb9de248dd9cafd923a</anchor>
      <arglist>(const std::string &amp;_address, uint16_t _port, bool _reliable, boost::asio::io_context &amp;_io)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~virtual_server_endpoint_impl</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aa95daa93013d8bc8292829d1d3c1af04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>acc876dd4cd42176c160b41f7599d68f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_stop</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ad8eae171ab04718ee8d18ea2c933daa8</anchor>
      <arglist>(const endpoint::prepare_stop_handler_t &amp;_handler, service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>af577597caa8d784eb759f21feb97060c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aaefa50ebdbf25fddf7e9e286dd304b6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_established_or_connected</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a093f37d4c369f27b36cb1f19813b7de5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_established</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a7eab4e47fa04b893d207895472130554</anchor>
      <arglist>(bool _established)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_connected</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a76ef085c44be9497d556754facd9e227</anchor>
      <arglist>(bool _connected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aa2dcc2944949687200e0e68a8d962ef5</anchor>
      <arglist>(const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_to</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>afe0d86c24fc73dc5c748ffc2fa4a6825</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_error</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ad56ffae54c96314667b416808022c2d3</anchor>
      <arglist>(const std::shared_ptr&lt; endpoint_definition &gt; _target, const byte_t *_data, uint32_t _size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_magic_cookies</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a3bc9aecda254c95ed51c8d64db7121e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receive</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a42a5219468763febf56f52166af530ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default_target</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a5797ee52540ade708800b512d7282925</anchor>
      <arglist>(service_t _service, const std::string &amp;_address, uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default_target</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>adec7488e31e41bd33d56c08bd709c7a5</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_stop_handler</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ab06edc597018d229fa8a72355ef92862</anchor>
      <arglist>(service_t _service)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_remote_address</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a18611c4876efe2552dc36b96920aacb3</anchor>
      <arglist>(boost::asio::ip::address &amp;_address) const</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_local_port</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ac2c67ab49244ffd3355b0d02a31db636</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_port</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a7372efaec3168ecf76bdc13494cde376</anchor>
      <arglist>(uint16_t _port)</arglist>
    </member>
    <member kind="function">
      <type>std::uint16_t</type>
      <name>get_remote_port</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ac2f59b21e467ad5c445cddee68a2e826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_reliable</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>aeffceabfbb320d9e925ac8f1817d4ffd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a0c297b972fef3d99dd8ffd58e980f62d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment_use_count</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a92e43ffadeabf712d41724d36652e7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrement_use_count</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>ae5cfe6aa34db046ab1a3bb39eaf46f7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>get_use_count</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a7799ec14551ccb6d793f127844e7016b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restart</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a663421bc8045d83b760311f212968884</anchor>
      <arglist>(bool _force)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_error_handler</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a49f754c9ea0c0fa37b7f01124027330a</anchor>
      <arglist>(const error_handler_t &amp;_handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_status</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a181e8936ff4711f1ef82a73f213c60eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_queue_size</name>
      <anchorfile>classvsomeip__v3_1_1virtual__server__endpoint__impl.html</anchorfile>
      <anchor>a9a00c1687ea646073b5d920754b87994</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_sec_client_t</name>
    <filename>structvsomeip__sec__client__t.html</filename>
    <member kind="variable">
      <type>uid_t</type>
      <name>user</name>
      <anchorfile>structvsomeip__sec__client__t.html</anchorfile>
      <anchor>a1ba6ba1ce81ece21b76739cacc5a3045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>group</name>
      <anchorfile>structvsomeip__sec__client__t.html</anchorfile>
      <anchor>af19531dc2fd9073778ca5c4f8e0714c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_sec_ip_addr_t</type>
      <name>host</name>
      <anchorfile>structvsomeip__sec__client__t.html</anchorfile>
      <anchor>a9e235b0421d772ce074b013ef0ae6c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vsomeip_sec_network_port_t</type>
      <name>port</name>
      <anchorfile>structvsomeip__sec__client__t.html</anchorfile>
      <anchor>a4dd78637cdfa082555f382051b3a64d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>vsomeip_v3::cfg::watchdog</name>
    <filename>structvsomeip__v3_1_1cfg_1_1watchdog.html</filename>
    <member kind="function">
      <type></type>
      <name>watchdog</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>af60b7264f70af4d739f0208f9924a3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_enabeled_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>ac20a8b50f6d7d2af15464f7d72026ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout_in_ms_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>a37507f88ae6046526ca76aa8bdff2cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>missing_pongs_allowed_</name>
      <anchorfile>structvsomeip__v3_1_1cfg_1_1watchdog.html</anchorfile>
      <anchor>af9285cc7ca1ffbe10df53028aca5aee3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost</name>
    <filename>namespaceboost.html</filename>
    <namespace>boost::asio</namespace>
  </compound>
  <compound kind="namespace">
    <name>boost::asio</name>
    <filename>namespaceboost_1_1asio.html</filename>
    <namespace>boost::asio::detail</namespace>
    <namespace>boost::asio::ip</namespace>
    <class kind="struct">boost::asio::associated_executor&lt; nexus::quic::detail::stream_open_handler&lt; Stream, Handler &gt;, Executor &gt;</class>
    <class kind="class">boost::asio::basic_datagram_socket_ext</class>
    <class kind="class">boost::asio::basic_socket_acceptor_ext</class>
    <class kind="class">boost::asio::basic_stream_socket_ext</class>
    <class kind="class">boost::asio::datagram_socket_service_ext</class>
    <class kind="class">boost::asio::socket_acceptor_service_ext</class>
    <class kind="class">boost::asio::stream_socket_service_ext</class>
  </compound>
  <compound kind="namespace">
    <name>boost::asio::detail</name>
    <filename>namespaceboost_1_1asio_1_1detail.html</filename>
    <namespace>boost::asio::detail::socket_ops</namespace>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recv_op_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvfrom_op_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_recvmsg_op_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_base_ext_local</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext</class>
    <class kind="class">boost::asio::detail::reactive_socket_service_ext_local</class>
    <class kind="class">boost::asio::detail::reactor_op_ext</class>
    <class kind="class">boost::asio::detail::reactor_op_ext_local</class>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a2a15fe5ab19b18722171d971399be34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>lvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>aed95cbb685eb2177a9e178e166750453</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a08e3e6ad06ec45fa26734fe52ffe2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>clvref</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>a92de2dda347cdb7c89cd2f147ba58870</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>argbyv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail.html</anchorfile>
      <anchor>ad4a1118cb12d4a977ca1adf80a8ecde7</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost::asio::detail::socket_ops</name>
    <filename>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</filename>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaff53a4343059512778dfe9e27062fde</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a432f5663e20b78e847b1c0092ffeb057</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>a6d721301ed870c8be7ee9d89e890ce66</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, boost::asio::ip::address &amp;da)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acb43bb053582b19a76d3cfbdba1cc301</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>signed_size_type</type>
      <name>recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>ad98725ad8bd97026575a28e003a53ac4</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>sync_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>acc6b0d7821347c8d0ef83d3754963379</anchor>
      <arglist>(socket_type s, state_type state, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recv</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aaf1c66197bdce9b4bfeaf530b9534fab</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, bool is_stream, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>non_blocking_recvfrom</name>
      <anchorfile>namespaceboost_1_1asio_1_1detail_1_1socket__ops.html</anchorfile>
      <anchor>aef6a9c3319ca2857d7fc1e3baf75257d</anchor>
      <arglist>(socket_type s, buf *bufs, size_t count, int flags, socket_addr_type *addr, std::size_t *addrlen, boost::system::error_code &amp;ec, size_t &amp;bytes_transferred, std::uint32_t &amp;uid, std::uint32_t &amp;gid)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost::asio::ip</name>
    <filename>namespaceboost_1_1asio_1_1ip.html</filename>
    <class kind="class">boost::asio::ip::udp_ext</class>
  </compound>
  <compound kind="namespace">
    <name>nexus</name>
    <filename>namespacenexus.html</filename>
    <namespace>nexus::detail</namespace>
    <namespace>nexus::global</namespace>
    <namespace>nexus::h3</namespace>
    <namespace>nexus::quic</namespace>
    <member kind="typedef">
      <type>detail::socket_option&lt; IP_RECVTOS, IPV6_RECVTCLASS &gt;</type>
      <name>receive_ecn</name>
      <anchorfile>namespacenexus.html</anchorfile>
      <anchor>af5dc8b58d9b41587af37ee957aab8c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>detail::socket_option&lt; IP_PKTINFO, IPV6_RECVPKTINFO &gt;</type>
      <name>receive_dstaddr</name>
      <anchorfile>namespacenexus.html</anchorfile>
      <anchor>a585cc2c2a312e2d6692e4a3d3bf2fc5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::detail</name>
    <filename>namespacenexus_1_1detail.html</filename>
    <class kind="class">nexus::detail::socket_option</class>
    <member kind="function">
      <type>error_code</type>
      <name>set_option</name>
      <anchorfile>namespacenexus_1_1detail.html</anchorfile>
      <anchor>ab476f45949cc794ebb773fad13ff54bf</anchor>
      <arglist>(Socket &amp;sock, Option &amp;&amp;option)</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>set_options</name>
      <anchorfile>namespacenexus_1_1detail.html</anchorfile>
      <anchor>a6f8fc6357a36d8f36cce3d59d1c70c83</anchor>
      <arglist>(Socket &amp;sock, Options &amp;&amp;...options)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::global</name>
    <filename>namespacenexus_1_1global.html</filename>
    <namespace>nexus::global::detail</namespace>
    <class kind="class">nexus::global::context</class>
    <member kind="enumeration">
      <type></type>
      <name>error</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ad114f4180b6afddb13534b5ac470ca86</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1global.html" anchor="ad114f4180b6afddb13534b5ac470ca86a00b8a1e251ababd1947ba3e827eddfe6">init_failed</enumvalue>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>global_category</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac12d09cf525f29ed3b0761d4165574de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a6e20944b1b236035c4c4ed1918c4f6ce</anchor>
      <arglist>(error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a864f1021c02f47f83b5cd06bd6169be1</anchor>
      <arglist>(error e)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a20ba633987ab6d0cfa13f57b703f0904</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>afce60e27bd537d1e214cec9698e4c9e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>a49a39125e8e230adf4d715770d5c6865</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac5fd50ec6807cfbac67943c477db41af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>ac4f9ba4be547d0620ac2c24529bec5e9</anchor>
      <arglist>(error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>context</type>
      <name>init_client_server</name>
      <anchorfile>namespacenexus_1_1global.html</anchorfile>
      <anchor>acb95d28c4aff821c45ea00d8dbfe5c2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::global::detail</name>
    <filename>namespacenexus_1_1global_1_1detail.html</filename>
    <member kind="function">
      <type>context</type>
      <name>init</name>
      <anchorfile>namespacenexus_1_1global_1_1detail.html</anchorfile>
      <anchor>a05b6aa15412af102334c6b1670e45caa</anchor>
      <arglist>(int flags, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>log</name>
      <anchorfile>namespacenexus_1_1global_1_1detail.html</anchorfile>
      <anchor>ae76eac93e7892094c0b8549d95bd730a</anchor>
      <arglist>(void *ctx, const char *buf, size_t len)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::h3</name>
    <filename>namespacenexus_1_1h3.html</filename>
    <namespace>nexus::h3::detail</namespace>
    <class kind="class">nexus::h3::client</class>
    <class kind="class">nexus::h3::client_connection</class>
    <class kind="class">nexus::h3::field</class>
    <class kind="class">nexus::h3::fields</class>
    <class kind="class">nexus::h3::server</class>
    <class kind="class">nexus::h3::acceptor</class>
    <class kind="class">nexus::h3::server_connection</class>
    <class kind="class">nexus::h3::stream</class>
    <member kind="enumeration">
      <type></type>
      <name>error</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>ab1eb19fc5a95e7f4df8b5ae6cf512936</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a7fa49f1a086c46bfc9e5f5fe279a82c0">no_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a14b3f1aa3ae3d5a467072da8d5c2736d">general_protocol_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a3d9fd48f8a61d2ef1bcabffb3e2c2336">internal_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a6f4f752af1d3d432a64e2200f7691537">stream_creation_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a8376b77896149b1aa08b5c319c4ca7aa">closed_critical_stream</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936ac62481ab75d27f5670a55a5497a5010b">frame_unexpected</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a4080e803926452cb85fbe0c7d3ba2419">frame_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936aa715cfd2cacd83ffe0e1acbe80fc155d">excessive_load</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936ad83d51c1e5c9fff87cf8578a67564acc">id_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a0d9d7c325747d7f0b2a294067892310b">settings_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a23bddac3882c3f5be3668b4fb2fa79d3">missing_settings</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a56b0a9bee8433282a3ac825c56a33f1b">request_rejected</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a09e447b4e8364a963ee6f7ff9fe53f08">request_cancelled</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a66981c0963244425441383ade09af144">request_incomplete</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a3b88c396feaa8d7ea9ef543c807fd633">message_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a62c47ac85649a455d1586432e41880b0">connect_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a7ce51f3b98f1f9e4457ca6ed4acd36c1">version_fallback</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936aaa7b4da5086b8e36172cb9a86b19f6ab">qpack_decompression_failed</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936a2c4e0ac5477fb95d24aed52a7ded25d4">qpack_encoder_stream_error</enumvalue>
      <enumvalue file="namespacenexus_1_1h3.html" anchor="ab1eb19fc5a95e7f4df8b5ae6cf512936aa25357c1396359ac8a3f6d42fc337c75">qpack_decoder_stream_error</enumvalue>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>h3_category</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>a334b51c76cee56f1c61783be9ae07cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>a22c403cf6b8f2a08a08f511ee1897cc5</anchor>
      <arglist>(error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>adf03e4752affc997a3ad0b4a1d7b6bf2</anchor>
      <arglist>(error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>quic_category</name>
      <anchorfile>namespacenexus_1_1h3.html</anchorfile>
      <anchor>a05de69240b1ea1443471f2cb6a58029f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::h3::detail</name>
    <filename>namespacenexus_1_1h3_1_1detail.html</filename>
    <class kind="struct">nexus::h3::detail::field_compare</class>
    <class kind="struct">nexus::h3::detail::field_key</class>
    <member kind="typedef">
      <type>boost::intrusive::multiset&lt; field, boost::intrusive::compare&lt; field_compare &gt;, boost::intrusive::key_of_value&lt; field_key &gt; &gt;</type>
      <name>field_multiset</name>
      <anchorfile>namespacenexus_1_1h3_1_1detail.html</anchorfile>
      <anchor>aa5c923dc1196ef563d7e930d2517614a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::intrusive::list&lt; field, boost::intrusive::constant_time_size&lt; true &gt;, boost::intrusive::cache_last&lt; true &gt;, boost::intrusive::size_type&lt; uint16_t &gt; &gt;</type>
      <name>field_list</name>
      <anchorfile>namespacenexus_1_1h3_1_1detail.html</anchorfile>
      <anchor>acf9eb3079e7a2710b9c863baa639df4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::quic</name>
    <filename>namespacenexus_1_1quic.html</filename>
    <namespace>nexus::quic::detail</namespace>
    <class kind="class">nexus::quic::client</class>
    <class kind="class">nexus::quic::connection</class>
    <class kind="class">nexus::quic::connection_id</class>
    <class kind="class">nexus::quic::server</class>
    <class kind="class">nexus::quic::acceptor</class>
    <class kind="struct">nexus::quic::bad_setting</class>
    <class kind="struct">nexus::quic::settings</class>
    <class kind="class">nexus::quic::stream</class>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>stream_id</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a677eae7bede009176522d4d6f82dcc31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>connection_error</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a4087acbd7202911e60a010cb1957d89c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89cadfb7069bfc6e0064a6c667626eca07b4">aborted</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89caf5dc41a4deeab80b1dc31b0f3f01a1f4">handshake_failed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89ca56c27b1ab1a5a5a0eae853cabb4dc0c1">timed_out</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89ca86266ee937d97f812a8e57d22b62ee29">reset</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89ca21b83598d2a23d1d1cdc2ed6122c4a15">going_away</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a4087acbd7202911e60a010cb1957d89cacf0bffcd99308348185a6fa82201f979">peer_going_away</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>stream_error</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a1bc3aa19b5288dc5ad185dfaa5f8dbcc</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbcca2e51b1ab42e8a4a67f3445174be5191b">eof</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbcca8bc1b2f84252c3df4edd53e4aad097a7">busy</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbccadfb7069bfc6e0064a6c667626eca07b4">aborted</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a1bc3aa19b5288dc5ad185dfaa5f8dbcca86266ee937d97f812a8e57d22b62ee29">reset</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>transport_error</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a95ae3df46f94691f1915ddfc72981d4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa7fa49f1a086c46bfc9e5f5fe279a82c0">no_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa3d9fd48f8a61d2ef1bcabffb3e2c2336">internal_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa53793ee58fc24168a0d6549c3cb2df8e">connection_refused</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa9d332214a604d542f0f96b1ceaa20ca3">flow_control_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa5ebdea2c37e7a2cd4f694473809caef9">stream_limit_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa2aee124bc2ca7763c84e279b94544ebc">stream_state_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa4a80bfb92151ef098d31696e41e8406e">final_size_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa16ec67cca6053888abd51407a737031f">frame_encoding_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4facccf0782f437b931597327aa47fb8648">transport_parameter_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4faa17d21843e2a1fec78a93940aa071eb6">connection_id_limit_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fab43d83c214f23df06bed7074b11852c8">protocol_violation</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4faf948e0eb747dbc4bb16dbcb2f2a5fae0">invalid_token</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa3d26fe5895b8f7c946f2e3960e0b34b0">application_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa5b4074dea8675a48e37373db91d0bcd9">crypto_buffer_exceeded</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa12e31202cb29eac64add3de58bfab74c">key_update_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa15a136c54de694d4a6f3098632d79b67">aead_limit_reached</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="a95ae3df46f94691f1915ddfc72981d4fa0d4221c9bbbbea5c2d578847bf02a556">no_viable_path</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>tls_alert</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aceb614864bae7c6b041965e68aad63c5</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5abb45c1d67899800b7fe8bf6015af0dd6">close_notify</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a597cfdb46675641f694b1f918760d432">unexpected_message</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a8fd1a30f4f67f92962d89771ec9d47af">bad_record_mac</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a2695b59c259f00730dc5b5d42ac2139c">record_overflow</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a79db796776246d2c3aaca8b375e662c4">handshake_failure</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5aa122ea521767a141ab57b4d536bd096b">bad_certificate</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a084c8817a9b9ab2352e586500d1f7245">unsupported_certificate</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a44c5173a1906b8b485789734bc90c1e6">certificate_revoked</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a8d63d2bcd5d2d335aafbac7d5d6853f2">certificate_expired</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a437e54abaf7dea032cb794297b54961d">certificate_unknown</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a0bb2e3cfaec11b1cd502d30d896c8b99">illegal_parameter</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5adb7f455b40363afef20f7b4e52287086">unknown_ca</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ab24a6ab23d67f96f6a159138102dbe62">access_denied</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a3cb045915778215e2fced65afb8434d7">decode_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ae75cba472a2ac192de9a705aee85463e">decrypt_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5accc66c059398cf101d1811b511ebd46c">protocol_version</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5aff61b23d42af3189c7e5770f6e9b865b">insufficient_security</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a3d9fd48f8a61d2ef1bcabffb3e2c2336">internal_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a354f8d71b075ed31531d544110ae3b1d">inappropriate_fallback</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ab6897813c1365e38dca9a3a5bbac1074">user_canceled</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ac3adda9630b39fc3300eb2f1aa7209ed">missing_extension</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a415fd1cf3c6858f0f7e2bd8094e49047">unsupported_extension</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a62ee004ea07c4aca3dcce1b9f39a4ffc">unrecognized_name</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a49ac4ad6fa990e227f3d976b342b59b7">bad_certificate_status_response</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5ad6c461e1ddf2a3c7f91f13ea7d37d9f0">unknown_psk_identity</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a61b36abfb2334b2d9435043a7dd32d79">certificate_required</enumvalue>
      <enumvalue file="namespacenexus_1_1quic.html" anchor="aceb614864bae7c6b041965e68aad63c5a65444c751cbdb326fe7719d61e9ebcf6">no_application_protocol</enumvalue>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>connection_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>acc6f2074e08d9b4e633b06f1d25b5add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>adef743061b930efd98eda539130508a4</anchor>
      <arglist>(connection_error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>afcdb096f0cc405b9fa0d0039a4b1a2f3</anchor>
      <arglist>(connection_error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>stream_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a5f54e128a1746d885b2a7c42529f4416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>af9603be35039ef91df60b1efc4fc6cea</anchor>
      <arglist>(stream_error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac593bf78b7c6ceb0525b1998ff222562</anchor>
      <arglist>(stream_error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>transport_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a725191332443bad0b3a8665db8ef91c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a13336540a134d830615d0ee67ab4c6a8</anchor>
      <arglist>(transport_error e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a7f96f7580963586873f8b6ae14633196</anchor>
      <arglist>(transport_error e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>tls_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a013c707e331cccf43c93ed91fecfc013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>error_code</type>
      <name>make_error_code</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac53d38331238891fb7c651a1085bc6bf</anchor>
      <arglist>(tls_alert e)</arglist>
    </member>
    <member kind="function">
      <type>error_condition</type>
      <name>make_error_condition</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>afe9ae26d0ba3d0c49896dff6b715fd2f</anchor>
      <arglist>(tls_alert e)</arglist>
    </member>
    <member kind="function">
      <type>const error_category &amp;</type>
      <name>application_category</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a02fb38eca337d09f5a2e3677b1d6fe12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_client_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a47cfec149ad958855e18d503b8767bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>settings</type>
      <name>default_server_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a6df58e021accf7433c613d471b87f071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_client_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aec7b3d0059d201ae84346d6728b9bb63</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_server_settings</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>ac9f8c7f39f32478e2adc2c2718638e37</anchor>
      <arglist>(const settings &amp;s, std::string *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepare_socket</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a402ce927d9a1ff6267bc73ad5fb1a613</anchor>
      <arglist>(udp::socket &amp;sock, bool is_server, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>client_initiated</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>a517be5902ca4acf8d14a2431744ebea3</anchor>
      <arglist>(stream_id id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>server_initiated</name>
      <anchorfile>namespacenexus_1_1quic.html</anchorfile>
      <anchor>aa0c0a5a2789d4fdaee425146ca0aecfd</anchor>
      <arglist>(stream_id id)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::quic::detail</name>
    <filename>namespacenexus_1_1quic_1_1detail.html</filename>
    <namespace>nexus::quic::detail::connection_state</namespace>
    <namespace>nexus::quic::detail::receiving_stream_state</namespace>
    <namespace>nexus::quic::detail::sending_stream_state</namespace>
    <namespace>nexus::quic::detail::stream_state</namespace>
    <class kind="struct">nexus::quic::detail::connection_impl</class>
    <class kind="struct">nexus::quic::detail::connection_context</class>
    <class kind="struct">nexus::quic::detail::incoming_connection</class>
    <class kind="struct">nexus::quic::detail::engine_deleter</class>
    <class kind="struct">nexus::quic::detail::engine_impl</class>
    <class kind="struct">nexus::quic::detail::handler_ptr_deleter</class>
    <class kind="struct">nexus::quic::detail::operation</class>
    <class kind="struct">nexus::quic::detail::sync_operation</class>
    <class kind="struct">nexus::quic::detail::async_operation</class>
    <class kind="struct">nexus::quic::detail::accept_operation</class>
    <class kind="struct">nexus::quic::detail::stream_connect_operation</class>
    <class kind="struct">nexus::quic::detail::stream_accept_operation</class>
    <class kind="struct">nexus::quic::detail::stream_data_operation</class>
    <class kind="struct">nexus::quic::detail::stream_header_read_operation</class>
    <class kind="struct">nexus::quic::detail::stream_header_write_operation</class>
    <class kind="struct">nexus::quic::detail::stream_close_operation</class>
    <class kind="struct">nexus::quic::detail::service_tag</class>
    <class kind="class">nexus::quic::detail::service</class>
    <class kind="union">nexus::quic::detail::sockaddr_union</class>
    <class kind="struct">nexus::quic::detail::socket_impl</class>
    <class kind="struct">nexus::quic::detail::stream_impl</class>
    <class kind="struct">nexus::quic::detail::stream_factory</class>
    <class kind="struct">nexus::quic::detail::stream_open_handler</class>
    <class kind="struct">nexus::quic::detail::recv_header_set</class>
    <member kind="typedef">
      <type>boost::intrusive::list&lt; stream_impl &gt;</type>
      <name>stream_list</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a0dd2386adc304f67ab7f0fe5aeee6df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; lsquic_engine, engine_deleter &gt;</type>
      <name>lsquic_engine_ptr</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4f16121fba2f35a0a5808e84e5899d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; T, handler_ptr_deleter&lt; Handler &gt; &gt;</type>
      <name>handler_ptr</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a39efb6bf2ba7556bb36172d07f54b136</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; accept_operation &gt;</type>
      <name>accept_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a90748a3995032959a14d99bb2d1b6343</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; accept_operation, Handler, IoExecutor &gt;</type>
      <name>accept_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>aa179a6f217f61b81fbecafa85631079a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_connect_operation &gt;</type>
      <name>stream_connect_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4dfaa4aabbd9b73222741667524b9612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_connect_operation, Handler, IoExecutor &gt;</type>
      <name>stream_connect_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a92e915c5bdea2ab57ad09327545dbd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_accept_operation &gt;</type>
      <name>stream_accept_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>aa2eaae57de95851fbf0cab7be2702c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_accept_operation, Handler, IoExecutor &gt;</type>
      <name>stream_accept_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a9020a45ab036dc622c3359216b0c5c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_data_operation &gt;</type>
      <name>stream_data_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a3028e91708681af66a8708a684adbf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_data_operation, Handler, IoExecutor &gt;</type>
      <name>stream_data_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a3331d91d05b30d25ab2a5a6154f5f886</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_header_read_operation &gt;</type>
      <name>stream_header_read_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a99eec929f9f61d4bd229707fc9131a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_header_read_operation, Handler, IoExecutor &gt;</type>
      <name>stream_header_read_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>ab8822e5a6ec7406d8bd75b25f92e9ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_header_write_operation &gt;</type>
      <name>stream_header_write_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a52d72b248df7e0533050a48f3f1d1d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_header_write_operation, Handler, IoExecutor &gt;</type>
      <name>stream_header_write_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a305f8c0a4df92a27c6232feaf0b16518</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sync_operation&lt; stream_close_operation &gt;</type>
      <name>stream_close_sync</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a78e1432b0d6ce98496803d470937ee70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>async_operation&lt; stream_close_operation, Handler, IoExecutor &gt;</type>
      <name>stream_close_async</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a035833ec1f43961991633bc369b544de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::intrusive::list_base_hook&lt; boost::intrusive::tag&lt; service_tag &gt; &gt;</type>
      <name>service_list_base_hook</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>ae0df0b244c598bd3db4d659c6ee0ab6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::intrusive::list&lt; connection_impl &gt;</type>
      <name>connection_list</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a127e6d8240dfd0eab36e0e155f9806f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>completion_type</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a6cfef84c226eca77542ceb6f386c85d9</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9a42b90196b487c54069097a68fe98ab6f">post</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9ac9df09b4610bb43e290507a37c658ae8">defer</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9a9dddf2a4f7d94594ec2ea98407a410e1">dispatch</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail.html" anchor="a6cfef84c226eca77542ceb6f386c85d9afb14982288108e1fbd6207ef55f05027">destroy</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_erase</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a442e2dd7f224297559f9040deb36e59a</anchor>
      <arglist>(stream_impl &amp;s, stream_list &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_transfer</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a38cdb867df4c4f8f98202727db9740a4</anchor>
      <arglist>(stream_impl &amp;s, stream_list &amp;from, stream_list &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>handler_allocate</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a5d65a33ff0688cff669dcf43dada3ad5</anchor>
      <arglist>(Handler &amp;handler, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_erase</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a293f05f78c11c5c7b1a815135f8b2768</anchor>
      <arglist>(connection_impl &amp;s, connection_list &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>list_transfer</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a86a8dee8d893ba8de561f589f85c76aa</anchor>
      <arglist>(connection_impl &amp;s, connection_list &amp;from, connection_list &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a4cfd04fa9077900424da0e164c7b98e2</anchor>
      <arglist>(settings &amp;out, const lsquic_engine_settings &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a90cc35651a3dc150242eeab08072adbb</anchor>
      <arglist>(const settings &amp;in, lsquic_engine_settings &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_goaway_received</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a64b2371bd2feef4f8d1f58bd8cfd72ae</anchor>
      <arglist>(lsquic_conn_t *conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_conncloseframe_received</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a0c2e2f73e32c5e2a1387894c81536e24</anchor>
      <arglist>(lsquic_conn_t *conn, int app_error, uint64_t code, const char *reason, int reason_len)</arglist>
    </member>
    <member kind="function">
      <type>ssl_ctx_st *</type>
      <name>api_peer_ssl_ctx</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a03ad16874f4e5f03a2ee5348e02932b0</anchor>
      <arglist>(void *peer_ctx, const sockaddr *local)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_settings</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a2cc9f745b5534ebee5f73302b0cb3a98</anchor>
      <arglist>(const lsquic_engine_settings &amp;es, int flags, std::string *message)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>ecn_size</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>a43546e5c2ab8785ebb692d69c4cbc265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>dstaddr4_size</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>adbd51c2db9a8519e35bc28dd28785773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>max_control_size</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail.html</anchorfile>
      <anchor>ae558b926f945773ebf6ccd82edc47d81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::quic::detail::connection_state</name>
    <filename>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</filename>
    <class kind="struct">nexus::quic::detail::connection_state::accepting</class>
    <class kind="struct">nexus::quic::detail::connection_state::open</class>
    <class kind="struct">nexus::quic::detail::connection_state::going_away</class>
    <class kind="struct">nexus::quic::detail::connection_state::error</class>
    <class kind="struct">nexus::quic::detail::connection_state::closed</class>
    <member kind="typedef">
      <type>std::variant&lt; accepting, open, going_away, error, closed &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ad8bf0548cab545cead0b6137e766f335</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>transition</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a4fc1c7576e98a3cf1c898e619f0c0d85</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85ac95ebe00436f48ceedc3e756a04df0e1">accepting_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a66372d345d8dc810c73d374fee7053d4">open_to_going_away</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85abb305d7bd01c5fe482d2e3e925ae12be">open_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85af6d13bfc1f76cc030ddf2ad200e9fc10">open_to_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85aecea6155e57bb2f43fc7fc06bb35d782">going_away_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a45ac60c0200151f6038dd89091e6d458">going_away_to_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1connection__state.html" anchor="a4fc1c7576e98a3cf1c898e619f0c0d85a6d44ff48b70e158c7166a00c2484d1d6">error_to_closed</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa48c5579d994b91ec9554463241dde25</anchor>
      <arglist>(const variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>connection_id</type>
      <name>id</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6faf35652a91cbe3724972681130f32b</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>udp::endpoint</type>
      <name>remote_endpoint</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a65a40f0999f23204d49c129247fcbf88</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6becc857263b178fb268b7856f4a9457</anchor>
      <arglist>(variant &amp;state, lsquic_conn *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_handshake</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa908bc498ffb7f2f7efd9012ffe6c98f</anchor>
      <arglist>(variant &amp;state, int status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ace76225f602bdf3c2f6976e833bf2dd8</anchor>
      <arglist>(variant &amp;state, accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept_incoming</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a72947637af0ac400577ea80ac205d08f</anchor>
      <arglist>(variant &amp;state, incoming_connection &amp;&amp;incoming)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a55b1efce474abae045feba791b4cf019</anchor>
      <arglist>(variant &amp;state, lsquic_conn *handle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a3e0ef7b4e69bf69c7746eb2ad0bb610c</anchor>
      <arglist>(variant &amp;state, stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a96e2dbcd4c0b467caebacd51710f5cd3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stream_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a5fb7989c7bebe99cc68dd925e1ad67a8</anchor>
      <arglist>(variant &amp;state, stream_accept_operation &amp;op, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a59734da5ff1f0677401bbc8b28932cd3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>goaway</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a3c7b43e65c3ec9411efaaad3b0c7655d</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_remote_goaway</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ae27d2a540533f070c1e9a8d902d874c8</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>reset</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a51ab862355e8705fca3075256288ab3b</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>aa70dd8b3af0e83472cf08ecf51ab014b</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a467e8ffe3e014b4d6dc9cac4faa2ffe9</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_remote_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a69e86b9b8375586c8df50b16f569c892</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a9009995fdc07a1850ed601d0ec27327f</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remote_endpoint</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>ad77fb5e6ad82a8a0ae58cd4bf7fa2a91</anchor>
      <arglist>(lsquic_conn *handle, sockaddr *remote)</arglist>
    </member>
    <member kind="function">
      <type>stream_impl *</type>
      <name>on_stream_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a07e5aca28bd20290ed408995efb9f28d</anchor>
      <arglist>(variant &amp;state, lsquic_stream_t *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>abort_streams</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a2df457b0058da521775fe92363ca2c2e</anchor>
      <arglist>(open &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>abort_streams</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1connection__state.html</anchorfile>
      <anchor>a6b28cf24cbe1ef8b8db7d320d111a656</anchor>
      <arglist>(going_away &amp;state, error_code ec)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::quic::detail::receiving_stream_state</name>
    <filename>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</filename>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::expecting_header</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::header</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::expecting_body</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::body</class>
    <class kind="struct">nexus::quic::detail::receiving_stream_state::shutdown</class>
    <member kind="typedef">
      <type>stream_header_read_operation</type>
      <name>header_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a7b5d792666d84c49880ef66a9c85eba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stream_data_operation</type>
      <name>data_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a7e5675572dcfe75c50858961b615ea36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; expecting_header, header, expecting_body, body, shutdown &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>ac899e88858dcc86a1ba63b60f53904ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>ae440f2c297c11f1bd87877731cb343f8</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation *op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>ab3568363342030606370e9d4c264acbd</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation *op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a17b083820cb0e40d254855ca3843bd77</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a96146fc8256476160645847354c54454</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a55c987651046b7756de2f4a21b719915</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a65b9b84594ec0edba10870c21fdcc9c2</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a83281ef0c2b06ff49f045ca25699cc15</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a94e438bd29ab1d9ab3f382e3ae8b7151</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>abfe1b5d4aa232d8fe1a6f9bb1acb13a7</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>aea57477a4df0db5ae471d90d9c95cb78</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1receiving__stream__state.html</anchorfile>
      <anchor>a63e8c7fd49ecbdb595d0dd2cde6f3beb</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::quic::detail::sending_stream_state</name>
    <filename>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</filename>
    <class kind="struct">nexus::quic::detail::sending_stream_state::expecting_header</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::header</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::expecting_body</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::body</class>
    <class kind="struct">nexus::quic::detail::sending_stream_state::shutdown</class>
    <member kind="typedef">
      <type>stream_header_write_operation</type>
      <name>header_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ad1940d7b93dadbc37b0ddc31f2e1bb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stream_data_operation</type>
      <name>data_operation</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>af2a9581c2b8f176574f7ae8fd29c0dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; expecting_header, header, expecting_body, body, shutdown &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a18294c02c8048708767dd0222257e269</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ae0e2f58749942f361f021bb284a88491</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, header_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a61cb6b3bdb422db259e0da6066b10a95</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write_header</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a57ca758bb3b9b80cf0a3086782770ab3</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write_body</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a3852106518d8c1c65cd4885dbb7f5cf7</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>ad0b7325e3db1b3d0c9f5b6497477cefb</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a5a9657bc0e3b464dfe873ad0f31be20b</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1sending__stream__state.html</anchorfile>
      <anchor>a5c6ca25bd251ff13c6480f3fe6b59978</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>nexus::quic::detail::stream_state</name>
    <filename>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</filename>
    <class kind="struct">nexus::quic::detail::stream_state::accepting</class>
    <class kind="struct">nexus::quic::detail::stream_state::connecting</class>
    <class kind="struct">nexus::quic::detail::stream_state::open</class>
    <class kind="struct">nexus::quic::detail::stream_state::closing</class>
    <class kind="struct">nexus::quic::detail::stream_state::error</class>
    <class kind="struct">nexus::quic::detail::stream_state::closed</class>
    <member kind="typedef">
      <type>std::variant&lt; accepting, connecting, open, closing, error, closed &gt;</type>
      <name>variant</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a11386f2f0daf8239366c2e6dd5d85b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>transition</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aa2154b48927deefb012724ae2ba76820</anchor>
      <arglist></arglist>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820ac95ebe00436f48ceedc3e756a04df0e1">accepting_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820a86079f68e63e586930185ecae90e17dd">connecting_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820ab47e9faf9b555990df6ca9635f53a85d">open_to_closing</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820abb305d7bd01c5fe482d2e3e925ae12be">open_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820af6d13bfc1f76cc030ddf2ad200e9fc10">open_to_error</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820ad3948986a0e02187ee7afed90c3596e7">closing_to_closed</enumvalue>
      <enumvalue file="namespacenexus_1_1quic_1_1detail_1_1stream__state.html" anchor="aa2154b48927deefb012724ae2ba76820a6d44ff48b70e158c7166a00c2484d1d6">error_to_closed</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_open</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a52823b239f2ccbb0df495ace0a37b86e</anchor>
      <arglist>(const variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>stream_id</type>
      <name>id</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a7b39f06f3d20aa21dc4a1f71370197e1</anchor>
      <arglist>(const variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a9ad68c3dddab8d08696584936d3aa264</anchor>
      <arglist>(variant &amp;state, stream_connect_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_connect</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>af64ec06bec53ac60b70cabf601bd2726</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ac16d776e3d8327985e23ad1ca737fc92</anchor>
      <arglist>(variant &amp;state, stream_accept_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_accept</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a51fc8cb45cd8f2c42ea5d2771f0e9d0e</anchor>
      <arglist>(variant &amp;state, lsquic_stream *handle, bool is_http)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aec2ec46cad4cc2df6df26854ed2048a2</anchor>
      <arglist>(variant &amp;state, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read_headers</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aded21f906f9bc463dd0fe7badd028d8b</anchor>
      <arglist>(variant &amp;state, stream_header_read_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_read</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a2ba1c3a0894b81a17962327c2fc429f6</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>adaebbcfac388735ad32ea7a7de0c9c4d</anchor>
      <arglist>(variant &amp;state, stream_data_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write_headers</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a11a1f6c65484b0336e115fa43a087f43</anchor>
      <arglist>(variant &amp;state, stream_header_write_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>on_write</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ad9d8c592d3c720eab7e59e8dcbf0706e</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a5186877276a3e04c7e2a855fc3085a5b</anchor>
      <arglist>(variant &amp;state, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>abf0ce6505c0eb5e1dfa6e7406f3476d9</anchor>
      <arglist>(variant &amp;state, int how, error_code &amp;ec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cancel</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a32c6a17e8946f9e79b3abcebd376fa98</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aea5896cb2ab2e7cb73439665c4a97118</anchor>
      <arglist>(variant &amp;state, stream_close_operation &amp;op)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_close</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a1ce8e570a6190188971b9c0365355df9</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>on_error</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>ab4b4b067a7f857e793bc2a36c15f9726</anchor>
      <arglist>(variant &amp;state, error_code ec)</arglist>
    </member>
    <member kind="function">
      <type>transition</type>
      <name>reset</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>aa7e9ab53e82248f213e0b3ee04dcb70b</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>namespacenexus_1_1quic_1_1detail_1_1stream__state.html</anchorfile>
      <anchor>a51c3fe6da462e1930ee368983802c075</anchor>
      <arglist>(variant &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>quic_adaptor</name>
    <filename>namespacequic__adaptor.html</filename>
    <class kind="class">quic_adaptor::quic_client_adaptor</class>
  </compound>
  <compound kind="namespace">
    <name>SYSTEM_ERROR_NAMESPACE</name>
    <filename>namespace_s_y_s_t_e_m___e_r_r_o_r___n_a_m_e_s_p_a_c_e.html</filename>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::h3::error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::connection_error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::stream_error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::transport_error &gt;</class>
    <class kind="struct">SYSTEM_ERROR_NAMESPACE::is_error_code_enum&lt; nexus::quic::tls_alert &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip</name>
    <filename>namespacevsomeip.html</filename>
    <namespace>vsomeip::trace</namespace>
    <class kind="class">vsomeip::message_base_impl</class>
    <class kind="class">vsomeip::message_impl</class>
    <class kind="class">vsomeip::payload_impl</class>
    <class kind="class">vsomeip::application_impl</class>
    <class kind="class">vsomeip::runtime_impl</class>
    <class kind="class">vsomeip::application</class>
    <class kind="struct">vsomeip::ip_address_t</class>
    <class kind="class">vsomeip::deserializable</class>
    <class kind="class">vsomeip::serializable</class>
    <class kind="class">vsomeip::message</class>
    <class kind="class">vsomeip::message_base</class>
    <class kind="class">vsomeip::payload</class>
    <class kind="class">vsomeip::plugin</class>
    <class kind="class">vsomeip::plugin_impl</class>
    <class kind="class">vsomeip::application_plugin</class>
    <class kind="class">vsomeip::pre_configuration_plugin</class>
    <class kind="class">vsomeip::runtime</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip::trace</name>
    <filename>namespacevsomeip_1_1trace.html</filename>
    <class kind="class">vsomeip::trace::channel</class>
    <class kind="class">vsomeip::trace::connector</class>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a038e1f315125aadab49a6bffd54e5ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>ac48c2a837611c64ff228062b2866ec27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>af6ffad10d3cb32db0690edbb378674b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip_1_1trace.html</anchorfile>
      <anchor>a624ef4d24ada8d671a01c8fc1eb63b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3</name>
    <filename>namespacevsomeip__v3.html</filename>
    <namespace>vsomeip_v3::cfg</namespace>
    <namespace>vsomeip_v3::e2e</namespace>
    <namespace>vsomeip_v3::e2exf</namespace>
    <namespace>vsomeip_v3::logger</namespace>
    <namespace>vsomeip_v3::protocol</namespace>
    <namespace>vsomeip_v3::sd</namespace>
    <namespace>vsomeip_v3::tp</namespace>
    <namespace>vsomeip_v3::trace</namespace>
    <class kind="class">vsomeip_v3::configuration</class>
    <class kind="struct">vsomeip_v3::configuration_element</class>
    <class kind="class">vsomeip_v3::configuration_plugin</class>
    <class kind="class">vsomeip_v3::configuration_plugin_impl</class>
    <class kind="struct">vsomeip_v3::debounce_filter_impl_t</class>
    <class kind="class">vsomeip_v3::buffer_view</class>
    <class kind="class">vsomeip_v3::e2e_crc</class>
    <class kind="struct">vsomeip_v3::train</class>
    <class kind="class">vsomeip_v3::client_endpoint</class>
    <class kind="class">vsomeip_v3::client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::credentials</class>
    <class kind="class">vsomeip_v3::endpoint</class>
    <class kind="class">vsomeip_v3::endpoint_definition</class>
    <class kind="struct">vsomeip_v3::multicast_option_t</class>
    <class kind="class">vsomeip_v3::endpoint_host</class>
    <class kind="class">vsomeip_v3::endpoint_impl</class>
    <class kind="class">vsomeip_v3::endpoint_manager_base</class>
    <class kind="class">vsomeip_v3::endpoint_manager_impl</class>
    <class kind="class">vsomeip_v3::local_tcp_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::local_tcp_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::local_uds_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::local_uds_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::quic_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::tcp_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::tcp_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::udp_client_endpoint_impl</class>
    <class kind="class">vsomeip_v3::udp_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::virtual_server_endpoint_impl</class>
    <class kind="class">vsomeip_v3::deserializer</class>
    <class kind="class">vsomeip_v3::message_base_impl</class>
    <class kind="class">vsomeip_v3::message_header_impl</class>
    <class kind="class">vsomeip_v3::message_impl</class>
    <class kind="class">vsomeip_v3::payload_impl</class>
    <class kind="class">vsomeip_v3::serializer</class>
    <class kind="class">vsomeip_v3::plugin_manager</class>
    <class kind="class">vsomeip_v3::plugin_manager_impl</class>
    <class kind="class">vsomeip_v3::event</class>
    <class kind="class">vsomeip_v3::eventgroupinfo</class>
    <class kind="class">vsomeip_v3::remote_subscription</class>
    <class kind="class">vsomeip_v3::routing_host</class>
    <class kind="class">vsomeip_v3::routing_manager</class>
    <class kind="class">vsomeip_v3::routing_manager_adapter</class>
    <class kind="class">vsomeip_v3::routing_manager_base</class>
    <class kind="class">vsomeip_v3::routing_manager_client</class>
    <class kind="class">vsomeip_v3::routing_manager_host</class>
    <class kind="class">vsomeip_v3::routing_manager_impl</class>
    <class kind="class">vsomeip_v3::routing_manager_stub</class>
    <class kind="class">vsomeip_v3::routing_manager_stub_host</class>
    <class kind="class">vsomeip_v3::serviceinfo</class>
    <class kind="struct">vsomeip_v3::msg_statistic_t</class>
    <class kind="class">vsomeip_v3::application_impl</class>
    <class kind="class">vsomeip_v3::runtime_impl</class>
    <class kind="struct">vsomeip_v3::policy</class>
    <class kind="class">vsomeip_v3::policy_manager_impl</class>
    <class kind="class">vsomeip_v3::security</class>
    <class kind="class">vsomeip_v3::utility</class>
    <class kind="class">vsomeip_v3::application</class>
    <class kind="struct">vsomeip_v3::ip_address_t</class>
    <class kind="struct">vsomeip_v3::remote_info_t</class>
    <class kind="struct">vsomeip_v3::message_acceptance_t</class>
    <class kind="class">vsomeip_v3::deserializable</class>
    <class kind="class">vsomeip_v3::policy_manager</class>
    <class kind="class">vsomeip_v3::serializable</class>
    <class kind="class">vsomeip_v3::message</class>
    <class kind="class">vsomeip_v3::message_base</class>
    <class kind="class">vsomeip_v3::payload</class>
    <class kind="class">vsomeip_v3::plugin</class>
    <class kind="class">vsomeip_v3::plugin_impl</class>
    <class kind="class">vsomeip_v3::application_plugin</class>
    <class kind="class">vsomeip_v3::pre_configuration_plugin</class>
    <class kind="class">vsomeip_v3::runtime</class>
    <class kind="struct">vsomeip_v3::debounce_filter_t</class>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; event_t, std::shared_ptr&lt; debounce_filter_impl_t &gt; &gt;&gt; &gt;</type>
      <name>debounce_configuration_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0b8aac3a90ec44e1e5fd7d285952de33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>partition_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a400d0fa8f513d122f7b9ff435ac259dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>e2e_buffer</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa86ee4712520ff7bebfabb8769c2ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; byte_t &gt;</type>
      <name>message_buffer_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a01f33f6dfb9f653b04c4ca53de0761ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; message_buffer_t &gt;</type>
      <name>message_buffer_ptr_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adefbfff9889d6da476433d6a97a721eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>local_tcp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>acb60c77ee46478fe7c119f1f1337c3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>local_tcp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a3928c765bfa9d9ca04c3a06c50b07f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::local::stream_protocol &gt;</type>
      <name>local_uds_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4ff35582b496fa912893e2d001307888</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::local::stream_protocol_ext &gt;</type>
      <name>local_uds_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aef1e2fa1574c7e444d87e4fb22f7579b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; quic_adaptor::quic_client_adaptor &gt;</type>
      <name>quic_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a729848719a9324858509be8d11db3e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab8709a93ec9ea91b0ce3a00cbef0a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::tcp &gt;</type>
      <name>tcp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5a870a512e63c528c3063ec5233b76dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>client_endpoint_impl&lt; boost::asio::ip::udp &gt;</type>
      <name>udp_client_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab7d6a552c539466f4522b91865d9bf08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>server_endpoint_impl&lt; boost::asio::ip::udp_ext &gt;</type>
      <name>udp_server_endpoint_base_impl</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2e435c1b1d43d3b476171e426d96f31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; remote_subscription &gt; &amp;_subscription)&gt;</type>
      <name>remote_subscription_callback_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aeae38dc6731cdbc54ee5da00e0684908</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; serviceinfo &gt; &gt; &gt;</type>
      <name>services_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>add7f39a626cd3b3fccf8f246529b6869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::map&lt; eventgroup_t, std::shared_ptr&lt; eventgroupinfo &gt; &gt; &gt; &gt;</type>
      <name>eventgroups_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1df98b4f5a1c523993232e38326a6289</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>remote_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ade71c41d9e426efbac70fb3c21526197</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::mutex</type>
      <name>CriticalSection</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad47ec96defa1d7249fd613470a2eb4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const std::shared_ptr&lt; payload &gt; &amp;, const std::shared_ptr&lt; payload &gt; &amp;) &gt;</type>
      <name>epsilon_change_func_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2164b482d86f9722cb8cc228782e09a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(state_type_e) &gt;</type>
      <name>state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aaaa3f291807d88e94809eef7359c2ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; message &gt; &amp;) &gt;</type>
      <name>message_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8cce472e7560a3a6cdb00bcae22b01f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(service_t, instance_t, bool) &gt;</type>
      <name>availability_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a227b0afaf3bd28575d79864c78063392</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(client_t, bool) &gt;</type>
      <name>subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab0dc5929630c27a9d3de6d675185a909</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const uint16_t) &gt;</type>
      <name>error_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae5269a22da27c8eb353162cf4b0e2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const service_t, const instance_t, const eventgroup_t, const event_t, const uint16_t) &gt;</type>
      <name>subscription_status_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a71ee64a10ba064c1b50b7b20fe0cbed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(client_t, bool, std::function&lt; void(const bool) &gt;)&gt;</type>
      <name>async_subscription_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4de0319ad33b049b41bd3ae0a0fcc7a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::vector&lt; std::pair&lt; service_t, instance_t &gt;&gt; &amp;_services) &gt;</type>
      <name>offered_services_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9a0aa03bd4e86336db9b75a4784af214</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void() &gt;</type>
      <name>watchdog_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae36ba755d2b18a3a8128c7c1ce3f7344</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const ip_address_t &amp;)&gt;</type>
      <name>offer_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a015433a2f8cf63087bacc83e53334d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const ip_address_t &amp;)&gt;</type>
      <name>reboot_notification_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a70cbd3764a3179a79bb8388442a9d522</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>routing_ready_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0277434fda0f0114d91d02a987ec7076</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(routing_state_e)&gt;</type>
      <name>routing_state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aba8cd17d6364361b4c04a38e5aff0428</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(security_update_state_e)&gt;</type>
      <name>security_update_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a74c8367b8a280bfebf473bbc3cbe5627</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; plugin &gt;(*</type>
      <name>create_plugin_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a453845ec84f23c9c4e4495dc2fab00a3</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>create_plugin_func(*</type>
      <name>plugin_init_func</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae39557b5d78d0c6fb0d46a522db80092</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>message_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aed4ab5253b17bc217e1d970d32e5b9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>service_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab439d8b69368f376c1671ddc31e515d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>method_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85a1d735ad9ad8dc0e10c57e66a3de2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>event_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad9c76ce8278d899bf04d836bfc3a7b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>instance_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a38ba3163c3baa90f9adbdaa5a1550a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>eventgroup_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adb3707afb830a56fc151afae8d3a4a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>major_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a60dd902439aa9e3353079bb19e173eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>minor_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a42ecfae92498c1706f42b98ccaa85a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>ttl_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2997ff0ab3ed962de2b3bac11eb0acb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>request_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a72d761400f7e540f2890eccf8a4b4869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>client_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa18c5d8fd10b3df25994711409acf8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>session_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>acabf6d89a5f8232b82031d7e03ca86d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>length_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac71906150d5a544c870a734956c1f867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>protocol_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa1cb109c2e75eceab17deb467e0049aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>interface_version_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2134c346999fb510057bc8d16c8cbc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>byte_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85c0aa53badeca5d318f8e1351552072</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 4 &gt;</type>
      <name>ipv4_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a9c53f8ef0a2477376d9bfa732dcff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; byte_t, 16 &gt;</type>
      <name>ipv6_address_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a14706387c9b65556d738a0f084b8aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_channel_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad672b2d5348970784c9476e58417e348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>trace_filter_type_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a673602d80ad64071cf219a3ededa2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint16_t</type>
      <name>pending_subscription_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa03b7aa63bdf2c81833a4a8ee17c8acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_remote_offer_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab27bd7168daa9731d59e54c8a916238d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>pending_security_update_id_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a553b7cd6e0ddbb531d670ef9011e2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>uid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a89e8b6dc52a19420d56b66ba69ae31d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::uid_t</type>
      <name>gid_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f69df0d98384cc0c98e964ef1db6420</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(service_t, instance_t, availability_state_e) &gt;</type>
      <name>availability_state_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aee08397af82d872d16f5fd6ff1b6eeb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(client_t, const vsomeip_sec_client_t *, const std::string &amp;, bool)&gt;</type>
      <name>subscription_handler_sec_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a32848ea9eb155daf9288a1421eae190c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(client_t, const vsomeip_sec_client_t *, const std::string &amp;, bool, std::function&lt; void(bool)&gt;)&gt;</type>
      <name>async_subscription_handler_sec_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a7e0adb2309710ba2eee3376674960dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const remote_info_t &amp;)&gt;</type>
      <name>sd_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0c6ab7603f9a47ff36234c1cf22c78aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const message_acceptance_t &amp;)&gt;</type>
      <name>message_acceptance_handler_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac0fbda693d117d22a405bc5def0e6a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>diagnosis_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5009758353b9c739033d01366ee1c9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>port_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a17c3006f302bb15a56a7b515ace4b940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0ad5b8074994a1722f1ddac5c8c62253ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_ADD_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a53b5efef54a7a5adca2c3d43993f297c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_SERVICE_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0a99c4eaa6d584023c3d1774b9e9e6468a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIE_DEL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a59b44cc9ac81d37679efee0f4f5cfec0aac6528a30c5599bd4a8b5fcf35d7cb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda4d07c3825247b44a0180ec0ce59c7991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSCRIPTION_NOT_ACKNOWLEDGED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcda2b101a281deb615c2ac9734e9402df63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SUBSCRIBING</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0f51a17e7907bac9f647a49252727fcdaccd7f99aba1669edb710eef2cffa4c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>port_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4d1d428cc930cdc04bca08cdaa1e4839</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a9b9f801f3684706ea4965625caa9ccbf">PT_OPTIONAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839aef493197e5901903b2126b1c957d1939">PT_SECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839a650c1cf26e801e6529011ece50389274">PT_UNSECURE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a4d1d428cc930cdc04bca08cdaa1e4839ad426d912e3f42e34eb4afb370046fe34">PT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>registration_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a682d6c3fff9c7a46de81c5d234cf5179</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ad17455cfcb88a53f1603fb817e09c2d6">REGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179ae0d28f8aa6e4d8744f37b7c358649374">DEREGISTER</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a682d6c3fff9c7a46de81c5d234cf5179a71f612d19c691b481cd9c9b1ca67cba7">DEREGISTER_ON_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>remote_subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39ec9877abaeb38f64db02fb301e189a</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa66e4694eb60b73ae43dda48a14466e0c">SUBSCRIPTION_PENDING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa70b53341292194e1dc93d6ccfacfe765">SUBSCRIPTION_ACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aab2fd439b480e15252e6d51af337f9892">SUBSCRIPTION_NACKED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aa934bfa695a08c4a28d19053dcc33902b">SUBSCRIPTION_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a39ec9877abaeb38f64db02fb301e189aad6dfa4f648f641337fcb2f9291c94c22">SUBSCRIPTION_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a86896851ba1e40f6f0734612d990e9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>state_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f8fdb462c53cc801ccac8ae7e7b7593</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a1975c1cd8d977e43ed9b80485ff57b9d">ST_REGISTERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5f8fdb462c53cc801ccac8ae7e7b7593a675f8e567ba66fa4a34dc5376b795160">ST_DEREGISTERED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>message_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a37066c88ad32c12b4e6d76c2876931f0</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9817569e059920f81acd724e0d27427e">MT_REQUEST</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aab4c0d0ec6de9cf94cc974ae8fc9e35a">MT_REQUEST_NO_RETURN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a466e1d89dfcaa5dd44fde3e415f2416d">MT_NOTIFICATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0addf6a7432258a718e2932fa965d97bbc">MT_REQUEST_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a1bf98da6ea8f237e6e51c7e92b246de7">MT_REQUEST_NO_RETURN_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ace5537f09d888102be41b223185ee2f5">MT_NOTIFICATION_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a82ea3980d0263c76e804be8e7bfaf4dc">MT_RESPONSE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0aaec6a09cc5b81b91e3be5b9a5ccdc057">MT_ERROR</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a0f38170a7d6c21f75d364050974268fb">MT_RESPONSE_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0ab5fef10d37791909a02e03f233ef9af8">MT_ERROR_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a37066c88ad32c12b4e6d76c2876931f0a9be143b64fe2fe12b2774d9f34b134b4">MT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>return_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adc9f5628547e5cfcb1cf28ea8c1a9d56</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aa02beabe6f35d74f47eb01520970b350">E_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56aad29ea65c1fc33034264f0aae0263f8e">E_NOT_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a026654634a6cf33953ba2f9762d71d5e">E_UNKNOWN_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a54aafae2807f78ee9ff838e8d5af9e6f">E_UNKNOWN_METHOD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56ac496eb6230d3e219a91a9f6dcdf760e0">E_NOT_READY</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a306d4834481f8d0cd8f734bcaf37f80f">E_NOT_REACHABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a5d0b3a75947415de8cc770284a5b94b1">E_TIMEOUT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a48845fadec08cc492508d956b2462c2c">E_WRONG_PROTOCOL_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9b2df6640388ecaae9bc7a002a04b7a1">E_WRONG_INTERFACE_VERSION</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a1ace601dd1b4b72c5c345d074e8e7303">E_MALFORMED_MESSAGE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a9708220dea1582abffb909d98eaa432b">E_WRONG_MESSAGE_TYPE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="adc9f5628547e5cfcb1cf28ea8c1a9d56a6a96cb414ac815468fbfaebd4f4e696e">E_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c450e26151d2ee7c85d9ab9a17234b8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ab08f40bf9292c76dd7ab541a0635c1dc">RS_RUNNING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a93b601bbf5c3713331e0dd0296d12715">RS_SUSPENDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8aa085350435b219591b40870198b11c45">RS_RESUMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a97d8d49b4053be702db57810be8aecc4">RS_SHUTDOWN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8ae7f767ece082f4b742ba9f4ec5883692">RS_DIAGNOSIS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a8c450e26151d2ee7c85d9ab9a17234b8a006e557bf836a15785d2d5470b430978">RS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>offer_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a750cce5fdf91a2145560b4391141114c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca22cd38f75748c081219392589ee9f3d2">OT_LOCAL</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114ca54feb1c936683243491c3cd815c01b35">OT_REMOTE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a750cce5fdf91a2145560b4391141114cab89549e23113d3e4072cebaf6abe2484">OT_ALL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>event_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afffd745bcf53bf88a06b4a42da68e9e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a491ebf10d74cafbc4f92c6060e0659d8">ET_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a4101e5665ca41d40d1c72e1b59a7ccd5">ET_SELECTIVE_EVENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6ad0c76974d395561dcd5addd17025caca">ET_FIELD</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afffd745bcf53bf88a06b4a42da68e9e6a622bf80e22546ba409b0ee1f1f765b06">ET_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_mode_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6f6cf174f2fb1215e15535d34a582b4f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fae6ea3fc38b5dd378da5fd9982d07a906">SM_OFF</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa1e206a41b2e7227f48cf6d239412ab0c">SM_ON</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a6f6cf174f2fb1215e15535d34a582b4fa2f6bfcbc8033cafb45764771ea737c12">SM_AUDIT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>security_update_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ad6d71f484ce98ac3a3a1f608b5077c5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba15d5ecaf87a1e61054aa9b30c2384195">SU_SUCCESS</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba27edac640a41de171f851759ee6e3dbf">SU_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba5091c773435a96ef3eb98ef0cbdf6b0f">SU_UNKNOWN_USER_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="ad6d71f484ce98ac3a3a1f608b5077c5ba9e3357d764d9082a283270ab50f78291">SU_INVALID_FORMAT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>reliability_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a3d53b0e729d0788e14cdbcc3c9941d5b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba26b55ae0f42b75bb199d8ae7bf071fe9">RT_RELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5baf6782e4fee43f2927a875e2e76912518">RT_UNRELIABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5ba8cdb04af539d2e16a915e7b27236ba59">RT_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a3d53b0e729d0788e14cdbcc3c9941d5bab3fa977816ea6fabb8b123bc67ee0bea">RT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>availability_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9bbce438b678c5c429abc02448cde945</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945aab20cc2fb560d7f9b5efe83288fae673">AS_UNAVAILABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945a430db5fefef033d4315a55a61c4c121d">AS_OFFERED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945a835954dd352c2471baa3b309758d4ef3">AS_AVAILABLE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a9bbce438b678c5c429abc02448cde945ad5923291302dd82376895ece36653eb6">AS_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>handler_registration_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a50e03d3ff9dbcd24c24a6266a414ae9c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9ca8e54c81230ad9d63305f3a422ca1a9fc">HRT_REPLACE</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9cac0ba4c449caf89df3f4df677e2e43959">HRT_PREPEND</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9ca1ad9d260a00c942dde73a6ed75308b54">HRT_APPEND</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a50e03d3ff9dbcd24c24a6266a414ae9ca1b4c0c32a9b4c210ff9e2158459302ea">HRT_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>error_code_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5b9612ad3bac160f0cdd9cb06b74a4f1</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a29835fa6602c75b2998993c8785263d4">CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a1f67316ed5b6a9b991cd4c6868745609">PORT_CONFIGURATION_MISSING</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1abd0d3fd98ec3b5b4e67789308ee94d65">CLIENT_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a7b9f807aa58e17dd8d55e86fbf270ce8">SERVER_ENDPOINT_CREATION_FAILED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a5b9612ad3bac160f0cdd9cb06b74a4f1a461534fb2cc82e79c206b48674bd6017">SERVICE_PROPERTY_MISMATCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>plugin_type_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a790c1b95fe9fcda1dc37ad588dedd691</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a624f0ad679551d9d1fbed30ded915e12">APPLICATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8375dcf403160aa383844b954bac3e89">PRE_CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a4c2ea315c4a55edb102dbdaa294148f2">CONFIGURATION_PLUGIN</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="a790c1b95fe9fcda1dc37ad588dedd691a8d0f84555f5bee6a3cd109b806e52902">SD_RUNTIME_PLUGIN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>application_plugin_state_e</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>afb31d94898ceb50558494a96efab3425</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a79d4c02fa345106ed33d9af9a3a5f1d1">STATE_INITIALIZED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425a000fd23c9532e70b8bf9450833f8472d">STATE_STARTED</enumvalue>
      <enumvalue file="namespacevsomeip__v3.html" anchor="afb31d94898ceb50558494a96efab3425ae72a91340271ff70343ead0b40cfc0a3">STATE_STOPPED</enumvalue>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6fb00227954a741ce279e5897cb43b8d</anchor>
      <arglist>(std::ostream &amp;_os, const e2e_buffer &amp;_buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a686098fa66d1206ef2631ee40c4a4f67</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
    <member kind="function">
      <type>const remote_subscription_id_t</type>
      <name>PENDING_SUBSCRIPTION_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a237277afbce9b6ac0469a20b314f6c92</anchor>
      <arglist>(0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a85130498b085e6e14a750c392732154a</anchor>
      <arglist>(const boost::icl::discrete_interval&lt; T_ &gt; &amp;_interval, T_ &amp;_lower, T_ &amp;_upper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read_data</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac59b4dc82db4f7c7721e988f91e63d24</anchor>
      <arglist>(const std::string &amp;_in, T_ &amp;_out)</arglist>
    </member>
    <member kind="variable">
      <type>VSOMEIP_DEPRECATED_UID_GID typedef std::function&lt; bool(client_t, uid_t, gid_t, const std::string &amp;, bool) &gt;</type>
      <name>subscription_handler_ext_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a7819face52fd002d209976440f3b2cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VSOMEIP_DEPRECATED_UID_GID typedef std::function&lt; void(client_t, uid_t, gid_t, const std::string &amp;, bool, std::function&lt; void(const bool) &gt;)&gt;</type>
      <name>async_subscription_handler_ext_t</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5f10e832d6f6c3fe49c652e264152a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MESSAGE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abc9231a81ccf4ab9e3babcf1f2230345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>QUEUE_SIZE_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a629f2774576f3b00cf8616e8291ded5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>MAX_RECONNECTS_UNLIMITED</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>abf7c760b3533ab1fc7965af2b14721da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_UID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a729a2045f1925bc2bb1b178cec2f738a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint32_t</type>
      <name>ANY_GID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a6ceb4f0cdb93357b6bbd96ddf1751f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const partition_id_t</type>
      <name>VSOMEIP_DEFAULT_PARTITION_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8368cb385c736743332218f2b030115d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>DEFAULT_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2f2b7b5616e47a6991e02235acd3e3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>DEFAULT_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a914f2b51da8df58d43b8aa5e162fe31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ttl_t</type>
      <name>DEFAULT_TTL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a44b7287ec4b2276c13cc32b429ffd4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>DEFAULT_MULTICAST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1dfd55967348536b962d3259a31f94cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>DEFAULT_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a5c6c490cc1583fe38af30b0cf4c1a967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ILLEGAL_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae1e873b4fbfd2b49b73bddf0b936b3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>NO_TRACE_FILTER_EXPRESSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a39f544082ffed0ea0506ca12b0fcc035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const service_t</type>
      <name>ANY_SERVICE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adce6ed20385f8cd186b9f82086351651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>ANY_INSTANCE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a97cec69887056455ee978cc3a50dec15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>ANY_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa81c85715d8713f0b977d2c4e6c670cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const major_version_t</type>
      <name>ANY_MAJOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a80aa773571156d6c8d6315fdb1131ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const minor_version_t</type>
      <name>ANY_MINOR</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9be62aeb5875b257d33a34ab638a1938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const eventgroup_t</type>
      <name>DEFAULT_EVENTGROUP</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ae3a9af84a72838c170f304b45604f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ILLEGAL_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a347481da1fbdeae875c987e8d18ed8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aab691e5d96de4055ec9fb78e614525a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab5f16721542eaf1020af95fd7abaa1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const length_t</type>
      <name>MAGIC_COOKIE_SIZE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aea8ae408d12586b521d770b0814a17fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const request_t</type>
      <name>MAGIC_COOKIE_REQUEST</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a9b91bbdc92d781ab839c8e3fb2977fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_NETWORK_BYTE_ORDER</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a0874e45e3f37be1f69d40a861db73fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>MAGIC_COOKIE_PROTOCOL_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aabbfece5b1aad839016ea2339ac307a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>MAGIC_COOKIE_INTERFACE_VERSION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4bf667b9e83075cf22762423e393dc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_CLIENT_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>adf2818d9ee2613b716210f68cada1b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>MAGIC_COOKIE_SERVICE_MESSAGE_TYPE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8c4ece5170ac1f26dc2c6eabc8feb28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>MAGIC_COOKIE_RETURN_CODE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab0c5872098eb80f1918a1cc298db7778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>CLIENT_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a2443bc33f4987cc981c33c119adf2124</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const byte_t</type>
      <name>SERVICE_COOKIE</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a23f1ccc0cd6072b6b69077dec6575e99</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const event_t</type>
      <name>ANY_EVENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a8bee2b7ec8cfc271c4eb472a01b93286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>ANY_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1d4d4a1e58e40cafd2be7730c1733411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_subscription_id_t</type>
      <name>DEFAULT_SUBSCRIPTION</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ac8aa72362edafefabb0db273a8449521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const pending_security_update_id_t</type>
      <name>DEFAULT_SECURITY_UPDATE_ID</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a1a787fe58d9718fedd3dd8c53d390192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ERROR_INFO</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aceaf0adeb488b085418b2562b6ce9cba</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>ANY_PORT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a05de3fc19b0289d1872cfea55700a952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const eventgroup_t</type>
      <name>ANY_EVENTGROUP</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>aa2dad12652429b15600f924ec9a45b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>INVALID_METHOD</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>a4b561e3efdc12f157f5a8fc45a8204dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>MAGIC_COOKIE_CLIENT</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab9b5b94b12d67d3aead148a533dd4f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>VSOMEIP_ALL</name>
      <anchorfile>namespacevsomeip__v3.html</anchorfile>
      <anchor>ab39336d9a0e528a506d19edc40473282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::cfg</name>
    <filename>namespacevsomeip__v3_1_1cfg.html</filename>
    <class kind="struct">vsomeip_v3::cfg::application_configuration</class>
    <class kind="struct">vsomeip_v3::cfg::client</class>
    <class kind="struct">vsomeip_v3::cfg::suppress_t</class>
    <class kind="class">vsomeip_v3::cfg::configuration_impl</class>
    <class kind="struct">vsomeip_v3::cfg::e2e</class>
    <class kind="struct">vsomeip_v3::cfg::event</class>
    <class kind="struct">vsomeip_v3::cfg::eventgroup</class>
    <class kind="struct">vsomeip_v3::cfg::routing_host_t</class>
    <class kind="struct">vsomeip_v3::cfg::routing_guests_t</class>
    <class kind="struct">vsomeip_v3::cfg::routing_t</class>
    <class kind="struct">vsomeip_v3::cfg::service</class>
    <class kind="struct">vsomeip_v3::cfg::service_instance_range</class>
    <class kind="struct">vsomeip_v3::cfg::trace_channel</class>
    <class kind="struct">vsomeip_v3::cfg::trace_filter</class>
    <class kind="struct">vsomeip_v3::cfg::trace</class>
    <class kind="struct">vsomeip_v3::cfg::watchdog</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e</name>
    <filename>namespacevsomeip__v3_1_1e2e.html</filename>
    <namespace>vsomeip_v3::e2e::profile01</namespace>
    <namespace>vsomeip_v3::e2e::profile04</namespace>
    <namespace>vsomeip_v3::e2e::profile05</namespace>
    <namespace>vsomeip_v3::e2e::profile07</namespace>
    <namespace>vsomeip_v3::e2e::profile_custom</namespace>
    <namespace>vsomeip_v3::e2e::profile_interface</namespace>
    <class kind="class">vsomeip_v3::e2e::e2e_provider</class>
    <class kind="class">vsomeip_v3::e2e::e2e_provider_impl</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile01</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile01.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01_checker</class>
    <class kind="class">vsomeip_v3::e2e::profile01::profile_01</class>
    <class kind="struct">vsomeip_v3::e2e::profile01::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile01::protector</class>
    <member kind="enumeration">
      <type></type>
      <name>p01_data_id_mode</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile01.html</anchorfile>
      <anchor>a2e8caaeb4eb85dafd31c5ebb188f8e98</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98a8cde6ca1876fd3f658a3bce6783b689a">E2E_P01_DATAID_BOTH</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ad94905468a028f23a2bcc87631a7a135">E2E_P01_DATAID_ALT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98aa98164a5695ba23e4bcabd55c904c2c2">E2E_P01_DATAID_LOW</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1e2e_1_1profile01.html" anchor="a2e8caaeb4eb85dafd31c5ebb188f8e98ab2f6fa1897c0932a8c97fd7ba731643c">E2E_P01_DATAID_NIBBLE</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile04</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile04.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04_checker</class>
    <class kind="class">vsomeip_v3::e2e::profile04::profile_04</class>
    <class kind="struct">vsomeip_v3::e2e::profile04::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile04::protector</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile05</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile05.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile05::profile_05_checker</class>
    <class kind="class">vsomeip_v3::e2e::profile05::profile_05</class>
    <class kind="struct">vsomeip_v3::e2e::profile05::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile05::protector</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile07</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile07.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile07::profile_07_checker</class>
    <class kind="class">vsomeip_v3::e2e::profile07::profile_07</class>
    <class kind="struct">vsomeip_v3::e2e::profile07::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile07::protector</class>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_SIZE_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>aeb7cb75f7914d1d8dda288b3a30e3e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_COUNTER_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>ae2f239c20c183a0221c886e8f7c38a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_DATAID_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>ae0361fdc05a894cc5ce886a35cf4e8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>PROFILE_07_CRC_OFFSET</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile07.html</anchorfile>
      <anchor>a599c02d0e1bda391d741802cbda3c4b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile_custom</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile__custom.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom_checker</class>
    <class kind="class">vsomeip_v3::e2e::profile_custom::profile_custom</class>
    <class kind="struct">vsomeip_v3::e2e::profile_custom::profile_config</class>
    <class kind="class">vsomeip_v3::e2e::profile_custom::protector</class>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2e::profile_interface</name>
    <filename>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</filename>
    <class kind="class">vsomeip_v3::e2e::profile_interface::checker</class>
    <class kind="class">vsomeip_v3::e2e::profile_interface::profile_interface</class>
    <class kind="class">vsomeip_v3::e2e::profile_interface::protector</class>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>check_status_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>af012b9975eaac10690dfee805716c8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>generic_check_status</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_OK</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba4964058702f44175c383698310bee9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_WRONG_CRC</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba8973583c38ef134372426016679e2213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>E2E_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1e2e_1_1profile__interface.html</anchorfile>
      <anchor>ae2867a11bff4cf1c2c834a9176b16beba6a1733e8d1357e370256f30cdf22e20e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::e2exf</name>
    <filename>namespacevsomeip__v3_1_1e2exf.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; service_t, event_t &gt;</type>
      <name>data_identifier_t</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>a3aac6ade88468e74745cab623c6818e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacevsomeip__v3_1_1e2exf.html</anchorfile>
      <anchor>ab627d96992920a28c86e6980ea27e98c</anchor>
      <arglist>(std::ostream &amp;_os, const e2exf::data_identifier_t &amp;_data_identifier)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::logger</name>
    <filename>namespacevsomeip__v3_1_1logger.html</filename>
    <class kind="class">vsomeip_v3::logger::logger_impl</class>
    <class kind="class">vsomeip_v3::logger::message</class>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>level_e</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>af19b0f174f174e494d4cdeb6b9f140c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_FATAL</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abe1620a06072715114c470105c372efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>abfddb3047122bbae740f88f47d4d39eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_WARNING</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b81cb93e1bd604c2e0d7cb74cd7b02c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_INFO</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a0b35e17a110c5323b007c1015f5a062b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_DEBUG</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a88acccf741c76e4f81b618cc5201b2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>enum VSOMEIP_IMPORT_EXPORT</type>
      <name>LL_VERBOSE</name>
      <anchorfile>namespacevsomeip__v3_1_1logger.html</anchorfile>
      <anchor>a863ead09626fc9409830856e6cbecd51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::protocol</name>
    <filename>namespacevsomeip__v3_1_1protocol.html</filename>
    <class kind="class">vsomeip_v3::protocol::assign_client_ack_command</class>
    <class kind="class">vsomeip_v3::protocol::assign_client_command</class>
    <class kind="class">vsomeip_v3::protocol::command</class>
    <class kind="class">vsomeip_v3::protocol::deregister_application_command</class>
    <class kind="class">vsomeip_v3::protocol::distribute_security_policies_command</class>
    <class kind="class">vsomeip_v3::protocol::dummy_command</class>
    <class kind="class">vsomeip_v3::protocol::expire_command</class>
    <class kind="class">vsomeip_v3::protocol::multiple_services_command_base</class>
    <class kind="class">vsomeip_v3::protocol::offer_service_command</class>
    <class kind="class">vsomeip_v3::protocol::offered_services_request_command</class>
    <class kind="class">vsomeip_v3::protocol::offered_services_response_command</class>
    <class kind="class">vsomeip_v3::protocol::ping_command</class>
    <class kind="class">vsomeip_v3::protocol::pong_command</class>
    <class kind="struct">vsomeip_v3::protocol::service</class>
    <class kind="class">vsomeip_v3::protocol::register_application_command</class>
    <class kind="class">vsomeip_v3::protocol::register_event</class>
    <class kind="class">vsomeip_v3::protocol::register_events_command</class>
    <class kind="class">vsomeip_v3::protocol::registered_ack_command</class>
    <class kind="class">vsomeip_v3::protocol::release_service_command</class>
    <class kind="class">vsomeip_v3::protocol::remove_security_policy_command</class>
    <class kind="class">vsomeip_v3::protocol::remove_security_policy_response_command</class>
    <class kind="class">vsomeip_v3::protocol::request_service_command</class>
    <class kind="class">vsomeip_v3::protocol::resend_provided_events_command</class>
    <class kind="class">vsomeip_v3::protocol::routing_info_command</class>
    <class kind="class">vsomeip_v3::protocol::routing_info_entry</class>
    <class kind="class">vsomeip_v3::protocol::security_policy_response_command_base</class>
    <class kind="class">vsomeip_v3::protocol::send_command</class>
    <class kind="class">vsomeip_v3::protocol::service_command_base</class>
    <class kind="class">vsomeip_v3::protocol::simple_command</class>
    <class kind="class">vsomeip_v3::protocol::stop_offer_service_command</class>
    <class kind="class">vsomeip_v3::protocol::subscribe_ack_command</class>
    <class kind="class">vsomeip_v3::protocol::subscribe_ack_command_base</class>
    <class kind="class">vsomeip_v3::protocol::subscribe_command</class>
    <class kind="class">vsomeip_v3::protocol::subscribe_command_base</class>
    <class kind="class">vsomeip_v3::protocol::subscribe_nack_command</class>
    <class kind="class">vsomeip_v3::protocol::suspend_command</class>
    <class kind="class">vsomeip_v3::protocol::unregister_event_command</class>
    <class kind="class">vsomeip_v3::protocol::unsubscribe_ack_command</class>
    <class kind="class">vsomeip_v3::protocol::unsubscribe_command</class>
    <class kind="class">vsomeip_v3::protocol::update_security_credentials_command</class>
    <class kind="class">vsomeip_v3::protocol::update_security_policy_command</class>
    <class kind="class">vsomeip_v3::protocol::update_security_policy_response_command</class>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>command_size_t</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>acbc61f20deda0f11d1b4961b920a4c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>version_t</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>af8269196c710df6235c400d069aeaf11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>pending_id_t</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>abc679bc5cdaec18ea0cbc2d274855ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>id_e</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>aef318840e08dccb6f5bc465be27d58e8</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a1ed0b91db36fee7bc6d4626cce5d6bc9">ASSIGN_CLIENT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ab2e138d10d95e18c58d614341a98ea2a">ASSIGN_CLIENT_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aab5307a5cce6b3d698c043d362ba5b45">REGISTER_APPLICATION_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a6d213fbb93a4c1bf1c64a0e33004a6f3">DEREGISTER_APPLICATION_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aa483e3552f794c4cf4adcde46a1ef3dc">ROUTING_INFO_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a082ef15d0fe4aba0917ef744a4d3b506">REGISTERED_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a801f595ef8b7429ddcf19d381745eed5">PING_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a042baff19cb466d6403798c6bf4aaad7">PONG_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a9fed144f5ea9f8831eb4f98cf5083c67">OFFER_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a2296fe8b237ee3674c2a26133458809a">STOP_OFFER_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a6bbf508c1fb43de3d70cfe595cac99a7">SUBSCRIBE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a2220b7f426b5de5d17b69eff157e8a39">UNSUBSCRIBE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a0f723a121fd5ccb3a5d42afefee66b55">REQUEST_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8abe736e6dac670241b61d80ac0a2ba809">RELEASE_SERVICE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ac701fdbf710ca92661e1a360926f126f">SUBSCRIBE_NACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a99f04c7c341ddc90309ad528c329c608">SUBSCRIBE_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a27376b4f8a7503406dfc32a12b5f757f">SEND_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a10c9845f725d0799e87c8abd6ad6e6b3">NOTIFY_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a84d44bd5f0d50410bae4db7cda5fd599">NOTIFY_ONE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aabd83165b52f24e0087648a56bf584f9">REGISTER_EVENT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a5c040b1523b4306b16bf277a0c1e8d0f">UNREGISTER_EVENT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8aef33e97c09d0cbae56ace59f6f0d9f0a">ID_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8abc12a41db46b5bc4e2a7be7666189695">ID_REQUEST_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a72834309f8572ae9f79de08d4e39b53f">OFFERED_SERVICES_REQUEST_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a666806014d5aef27c3029033d93a4e8c">OFFERED_SERVICES_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8af087d95ab3292721f92580a467a96be7">UNSUBSCRIBE_ACK_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ac69236c5daabe1d152d4d9345ca75597">RESEND_PROVIDED_EVENTS_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ac7acd75705ace2de43a234e37f8f5e6b">UPDATE_SECURITY_POLICY_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8ae76ad776f7c8e43904778c2c6b8f4a6e">UPDATE_SECURITY_POLICY_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a9f3ee6066d5db264d426ce757de83704">REMOVE_SECURITY_POLICY_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8abb8529fd4140f6f77b4ca002ae5596cd">REMOVE_SECURITY_POLICY_RESPONSE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8adb587d4dd0408e236a475bbd6e5c37af">UPDATE_SECURITY_CREDENTIALS_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a03211a177cf25df274725d93d508e5d9">DISTRIBUTE_SECURITY_POLICIES_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a5739739fd1e03134822c31ccc2669f0b">UPDATE_SECURITY_POLICY_INT_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a608e7b35dacac842327e87df17b048af">EXPIRE_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a81be78f0057ac396f156748a1cbf6b5c">SUSPEND_ID</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="aef318840e08dccb6f5bc465be27d58e8a3f5ab1c7fd2be668e8c9a55bd73616b0">UNKNOWN_ID</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>error_e</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>a146e1b9ce083a956011ceb2aa71efa49</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a116bc13a641cb83da5b58aa4c4bf36af">ERROR_OK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a54af33a7a465862345a7e500321e0cbf">ERROR_NOT_ENOUGH_BYTES</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a5f89835081283aa7332964ffe94e0ace">ERROR_MAX_COMMAND_SIZE_EXCEEDED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a2319c4de4d710219745cc613435e0d5b">ERROR_MISMATCH</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a70f6b5dfffbfbe4ba3df428c69e9d038">ERROR_MALFORMED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49ac0f2080ee88859d1833da7813e886eab">ERROR_NOT_ALLOWED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a146e1b9ce083a956011ceb2aa71efa49a0a306e577f7923ac78d86a60bee66966">ERROR_UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>routing_info_entry_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1protocol.html</anchorfile>
      <anchor>a021d529d77feeef28aeb0e30f23eb7e6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6a9f3b3d0437a987598f0fb2649e086fa6">RIE_ADD_CLIENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6a2a0899344a0745e6b75848a8fe9077ff">RIE_DELETE_CLIENT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6a3a918320277b74cb5b0727d0e18a1549">RIE_ADD_SERVICE_INSTANCE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6ad54803ba88a9b09f8e72e55a54e4aefc">RIE_DELETE_SERVICE_INSTANCE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1protocol.html" anchor="a021d529d77feeef28aeb0e30f23eb7e6aa3132199267bc181a8cbd8f8a173f32a">RIE_UNKNOWN</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::sd</name>
    <filename>namespacevsomeip__v3_1_1sd.html</filename>
    <namespace>vsomeip_v3::sd::protocol</namespace>
    <class kind="class">vsomeip_v3::sd::configuration_option_impl</class>
    <class kind="class">vsomeip_v3::sd::deserializer</class>
    <class kind="class">vsomeip_v3::sd::entry_impl</class>
    <class kind="class">vsomeip_v3::sd::eventgroupentry_impl</class>
    <class kind="class">vsomeip_v3::sd::ip_option_impl</class>
    <class kind="class">vsomeip_v3::sd::ipv4_option_impl</class>
    <class kind="class">vsomeip_v3::sd::ipv6_option_impl</class>
    <class kind="class">vsomeip_v3::sd::load_balancing_option_impl</class>
    <class kind="class">vsomeip_v3::sd::message_element_impl</class>
    <class kind="class">vsomeip_v3::sd::message_impl</class>
    <class kind="class">vsomeip_v3::sd::option_impl</class>
    <class kind="class">vsomeip_v3::sd::protection_option_impl</class>
    <class kind="class">vsomeip_v3::sd::remote_subscription_ack</class>
    <class kind="class">vsomeip_v3::sd::request</class>
    <class kind="class">vsomeip_v3::sd::runtime</class>
    <class kind="class">vsomeip_v3::sd::runtime_impl</class>
    <class kind="class">vsomeip_v3::sd::selective_option_impl</class>
    <class kind="class">vsomeip_v3::sd::service_discovery</class>
    <class kind="class">vsomeip_v3::sd::service_discovery_host</class>
    <class kind="struct">vsomeip_v3::sd::entry_data_t</class>
    <class kind="class">vsomeip_v3::sd::service_discovery_impl</class>
    <class kind="class">vsomeip_v3::sd::serviceentry_impl</class>
    <class kind="class">vsomeip_v3::sd::subscription</class>
    <class kind="class">vsomeip_v3::sd::unknown_option_impl</class>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>priority_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a03ec7ff05c35cc282087aab5f6acbabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>weight_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab41c3c76dfe5e70beb62aaa5084269bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>alive_counter_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ae83eb26fe7ea1fd2886097606bae3cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>crc_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a418896956300726222443ce4990e25c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>flags_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a665b7bf45c5002c16224ddfaa8fac84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; service_t, std::map&lt; instance_t, std::shared_ptr&lt; request &gt; &gt; &gt;</type>
      <name>requests_t</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a479bb43b7e65f780b2fdbe9f3b2615e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>option_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a1b095ff9063385699acb46879d760a3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad08e68ea80bc3bf47a03757579c11900">CONFIGURATION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9f72b3ee74e29c627de58a4d92767907">LOAD_BALANCING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fae4fa5555709453166935ef887d97dad6">PROTECTION</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fad99bcd855e28a58a0ffb17fb7bc3672c">IP4_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa656f2d9488fd473cd5c87fc0d0c671d3">IP6_ENDPOINT</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa9aa4bece16c8028c887d528022ece58f">IP4_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa3e52334a97f7b6951548b1f3a8a63512">IP6_MULTICAST</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa45582b83fead3a0cbc52efa59d6ba4c5">SELECTIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a1b095ff9063385699acb46879d760a3fa696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>entry_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a5ee6f34e50b9155a337f0eb07d706200</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a324f25871f90b3bd46a9a60e1957cfbb">FIND_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6906e2a8c179777590bbed7d0316e21a">OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ac517d1ab174237d369a8d8a10a3c98f3">STOP_OFFER_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a093a6e7f7885f91c09fa7f9478edd209">REQUEST_SERVICE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200ae5b65dcf08a837c03fa789dba01dc7a4">FIND_EVENT_GROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a6e85554fa1249e1c5b86afde6b18700b">PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200addbf5099413ff5c80c0793834054340d">STOP_PUBLISH_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a99209c30c3e49367e4faaa8f895e92d6">SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a59221d1438ac23e21204f54c26dc3a1d">STOP_SUBSCRIBE_EVENTGROUP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200accc382dc381a1b3f403b9e274a265275">SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a0efd8428d44a0d6dd6127a5b2280d85f">STOP_SUBSCRIBE_EVENTGROUP_ACK</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a5ee6f34e50b9155a337f0eb07d706200a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>layer_four_protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab28b10cdfdc46bc21d39f6b67c41e66c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66cab136ef5f6a01d816991fe3cf7a6ac763">TCP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66caf5ef036b4d8b630721e51fe23489fbc9">UDP</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="ab28b10cdfdc46bc21d39f6b67c41e66ca696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>subscription_state_e</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a44d6e76ec7a3229de97bd8b99723074e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea3bdddbcca7a01b8a1e6ea1483b398e6c">ST_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea27185adbc4a022e762d4d07f1bae4a31">ST_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea9e3393acb9ba884e9ecfcf1acd696525">ST_RESUBSCRIBING</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea8dcdb2ca996e32272605de24f3b63990">ST_RESUBSCRIBING_NOT_ACKNOWLEDGED</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1sd.html" anchor="a44d6e76ec7a3229de97bd8b99723074ea0ce3a5f229eb18947e3d3973f173a613">ST_UNKNOWN</enumvalue>
    </member>
    <member kind="variable">
      <type>const service_t</type>
      <name>service</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aa2a4b491728e2388739c38955d93a663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const instance_t</type>
      <name>instance</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a108c41316ccf8a6f58781b4fbfbb72f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const method_t</type>
      <name>method</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a9672260623da6a9ec36666d77624c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const client_t</type>
      <name>client</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a4301fedba81c7bbcc971714312d3191c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const protocol_version_t</type>
      <name>protocol_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ac12cd8e7d5bd267aba48e6f9927c7e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const interface_version_t</type>
      <name>interface_version</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>a671093c1f6fc5fbf7f149bff14e13af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const message_type_e</type>
      <name>message_type</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>aec38071e3274c6a1e8b9decd67c9b7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const return_code_e</type>
      <name>return_code</name>
      <anchorfile>namespacevsomeip__v3_1_1sd.html</anchorfile>
      <anchor>ab83b958bde23b3ff10be09b4aa7b4e4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::sd::protocol</name>
    <filename>namespacevsomeip__v3_1_1sd_1_1protocol.html</filename>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>reserved_byte</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a03dc9d80fe666e04fb8afb9a19607321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>reserved_word</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab671b814e4ac2ca632a40263faf4ad22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32_t</type>
      <name>reserved_long</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>ab7095f65a99ed25abd9d78ee8d9fbb1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>tcp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>a807c6ff750c63e9e420eee7c6da2e7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>udp</name>
      <anchorfile>namespacevsomeip__v3_1_1sd_1_1protocol.html</anchorfile>
      <anchor>af1cf186cad7101f9b40c3cbfbbf80666</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::tp</name>
    <filename>namespacevsomeip__v3_1_1tp.html</filename>
    <class kind="class">vsomeip_v3::tp::tp</class>
    <class kind="class">vsomeip_v3::tp::tp_message</class>
    <class kind="class">vsomeip_v3::tp::tp_reassembler</class>
    <member kind="typedef">
      <type>std::uint32_t</type>
      <name>tp_header_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ae442a454e5c8747a7f581c3beab38f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::uint8_t</type>
      <name>tp_message_type_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>ab0ea6b850ec9b67c07d2d4ab5cb74b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; message_buffer_ptr_t &gt;</type>
      <name>tp_split_messages_t</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>a6aa9829e35052a42f8cafa86aa2868d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::uint8_t</type>
      <name>TP_FLAG</name>
      <anchorfile>namespacevsomeip__v3_1_1tp.html</anchorfile>
      <anchor>af5908255bf86963844054628ffb83bde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>vsomeip_v3::trace</name>
    <filename>namespacevsomeip__v3_1_1trace.html</filename>
    <class kind="class">vsomeip_v3::trace::channel_impl</class>
    <class kind="class">vsomeip_v3::trace::connector_impl</class>
    <class kind="struct">vsomeip_v3::trace::header</class>
    <class kind="class">vsomeip_v3::trace::channel</class>
    <class kind="class">vsomeip_v3::trace::connector</class>
    <member kind="typedef">
      <type>std::function&lt; bool(service_t, instance_t, method_t)&gt;</type>
      <name>filter_func_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a1fea2d7b56016b1dea4035038b1a70fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>filter_id_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>abdc3d3f7d319ce0af305457e0447cda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::tuple&lt; service_t, instance_t, method_t &gt;</type>
      <name>match_t</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a3efc612d82eb681b5991adae7afdf8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>filter_type_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>aad08deaf2c9d2b4567b1d323d890acfd</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfda50546bf973283065b6ccf09faf7a580a">NEGATIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfdaab6c31432785221bae58327ef5f6ea58">POSITIVE</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="aad08deaf2c9d2b4567b1d323d890acfdaa3066ddd39e832bb72365a1fb86299fa">HEADER_ONLY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>protocol_e</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a2ba767a205c2042308c808a2e5bb3bd4</anchor>
      <arglist></arglist>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4af5ddaf0ca7929578b408c909429f68f2">local</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4a84864c1fe095359bc9c5ac068e24e781">udp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4ae20bb202b1d5537b1415e3263a37ed78">tcp</enumvalue>
      <enumvalue file="namespacevsomeip__v3_1_1trace.html" anchor="a2ba767a205c2042308c808a2e5bb3bd4aad921d60486366258809553a3db49a4a">unknown</enumvalue>
    </member>
    <member kind="function">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>ab270b722efbcbf125d648925c83d40b0</anchor>
      <arglist>(0)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VSOMEIP_TC_DEFAULT_CHANNEL_ID</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a18a8a00a132973615e29ff0e88c4f22c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const filter_id_t</type>
      <name>FILTER_ID_ERROR</name>
      <anchorfile>namespacevsomeip__v3_1_1trace.html</anchorfile>
      <anchor>a85acf523d361436c707c38c0de473cba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>vsomeip</name>
    <title>Vsomeip</title>
    <filename>group__vsomeip.html</filename>
    <class kind="class">vsomeip::application</class>
    <class kind="class">vsomeip::message</class>
    <class kind="class">vsomeip::message_base</class>
    <class kind="class">vsomeip::payload</class>
    <class kind="class">vsomeip::runtime</class>
    <class kind="class">vsomeip_v3::application</class>
    <class kind="class">vsomeip_v3::message</class>
    <class kind="class">vsomeip_v3::message_base</class>
    <class kind="class">vsomeip_v3::payload</class>
    <class kind="class">vsomeip_v3::runtime</class>
    <member kind="function" virtualness="virtual">
      <type>virtual VSOMEIP_EXPORT</type>
      <name>~message_base</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga206a275026b03ba26247ff60e9338d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_t</type>
      <name>get_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga97bd6547b9a37814b40cda1e738d9b4f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga32153dd846e5082a5ecfd0303fc00c64</anchor>
      <arglist>(message_t _message)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT service_t</type>
      <name>get_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3a42fc1bb1ad36324e13997dc0566d0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_service</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga8ae0c5b2d33e75aa2874b7ed292bb267</anchor>
      <arglist>(service_t _service)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT instance_t</type>
      <name>get_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga4c2e06c479c0b2b30d0d4a5650b32504</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_instance</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf23fc5b260569ff85a3dc3bf4a58bbc4</anchor>
      <arglist>(instance_t _instance)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT method_t</type>
      <name>get_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6f2bb6b746b5929a9178a509dcb23599</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_method</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga68a5d57ba30a1e866aa49c3219bee34c</anchor>
      <arglist>(method_t _method)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT length_t</type>
      <name>get_length</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gadf78d2cdd0bba783a9ef4a5b41b51e9f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT request_t</type>
      <name>get_request</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga69cfe08df5efb5d539fe84577bacd794</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT client_t</type>
      <name>get_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga9cc75d61f405607cb6ea77deb00f88c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_client</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga862708a8912fae6f16af9678db4855bc</anchor>
      <arglist>(client_t _client)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT session_t</type>
      <name>get_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga0764d0bcc57088b5da686a6cf1d4e3cc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_session</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga65d0115210a280b4375dc19a06696e05</anchor>
      <arglist>(session_t _session)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT protocol_version_t</type>
      <name>get_protocol_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga3d8631c6a0e6a8342926c2243fc7d70f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT interface_version_t</type>
      <name>get_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaf890115f9dd45d05f0ac8b28365228fc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_interface_version</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gad9767ddceec2f86fde60714ef7d6ea74</anchor>
      <arglist>(interface_version_t _version)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT message_type_e</type>
      <name>get_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga75ba46b7ddebf62f00ba16bb735453e5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_message_type</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga33dd198f3a6f6273d1335fea3ecbfc26</anchor>
      <arglist>(message_type_e _type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT return_code_e</type>
      <name>get_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gab92e9e4ed2400f16625e0eaf5bd27944</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_return_code</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga40161de103fefe67c8b341119535a607</anchor>
      <arglist>(return_code_e _code)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga6db8a0c37b1521863aa8898da3882185</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_reliable</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga47faf333d2aa5646b1565e743793ea39</anchor>
      <arglist>(bool _is_reliable)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT bool</type>
      <name>is_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>gaaccdd9fb11d64ad8b2befff7f9f1a797</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VSOMEIP_EXPORT void</type>
      <name>set_initial</name>
      <anchorfile>group__vsomeip.html</anchorfile>
      <anchor>ga203ffb0137f0c387945893bdd3c816df</anchor>
      <arglist>(bool _is_initial)=0</arglist>
    </member>
  </compound>
</tagfile>
